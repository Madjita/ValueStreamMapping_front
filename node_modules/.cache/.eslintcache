[{"/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/index.js":"1","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/reportWebVitals.js":"2","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/App.js":"3","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/LeftBar/LeftBar.tsx":"4","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Header/Header.tsx":"5","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Main/Main.tsx":"6","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/CustomizedAccordions.tsx":"7","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/CustomizedAccordiongsHeader.tsx":"8","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Card/View.js":"9","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Card/ViewOrderCard.tsx":"10","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Card/ViewCard.tsx":"11","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Card/ViewItemSection.tsx":"12","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Card/Buffer.tsx":"13","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Card/Etap.tsx":"14","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Card/Triangle.tsx":"15","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Data/IDataOrderItem.tsx":"16","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Dialog/DialogAddOrder.tsx":"17","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Dialog/Transition.tsx":"18","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Dialog/DialogAddOrderItem.tsx":"19","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Dialog/SelectList.tsx":"20","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Data/Dialog/IDialogAddOrder.tsx":"21","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/store/store.ts":"22","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/store/reducers/index.ts":"23","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/store/reducers/useLeftMenuReducer.ts":"24","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/type/useLeftMenuType.tsx":"25","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/hooks/leftMenuSelector.tsx":"26","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/hooks/useLeftMenuAction.tsx":"27","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/store/action-creator/index.tsx":"28","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/store/action-creator/useActionLeftMenu.tsx":"29","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Pages/PageOrderInWork.tsx":"30","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Pages/PageOrdersDefault.tsx":"31","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Pages/PageOrderInArchive.tsx":"32","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Card/Pages/CardOrderInDefault.tsx":"33","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Data/DataCardOrderInDefault/IDataColorOrderInDefault.tsx":"34","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/hooks/useActionOrders.tsx":"35","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/store/action-creator/useActionOrders.tsx":"36","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/type/useOrdersType.tsx":"37","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/store/reducers/useOrdersReducer.tsx":"38","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Data/OrderRole.tsx":"39","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/store/reducers/useProductionReducer.tsx":"40","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/hooks/useActionProductions.tsx":"41","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/store/action-creator/useActionProduction.tsx":"42","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Pages/PageInformationAboutOrder.tsx":"43","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/global.js":"44","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Pages/PageExel.tsx":"45","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/DropZone/DropZone.tsx":"46","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/store/reducers/useCardVSMReducer.tsx":"47","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/store/action-creator/useActionsCardVSM.tsx":"48","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/hooks/useActionCardVSM.tsx":"49","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Data/IDataCardVSM.tsx":"50","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/hooks/usePrevious.tsx":"51","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Chat.js":"52","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/ChatItem.tsx":"53","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Data/IDataCardSection.tsx":"54","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Pages/PageAllCards.tsx":"55","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Card/AllCardsView/ViewAllCards.js":"56","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Card/AllCardsView/ViewCard_all.tsx":"57","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Pages/PageNewAlgoritm.tsx":"58","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Pages/PageNewAlgoritmAddOrder.tsx":"59","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Card/Pages/CardOrderInNewAlgoritmDefault.tsx":"60","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Dialog/DialogAddOrderNewAlgoritm.tsx":"61","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Card/AllCardsView/ViewAllCards_newAlgoritm.js":"62","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Card/AllCardsView/ViewCard_all_newAlgoritm.tsx":"63","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Card/Pages/CardOrderInNewAlgoritmArchive.tsx":"64","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/CustomizedAccordionsNewAlgoritm.tsx":"65","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/CustomizedAccordiongsHeaderNewAlgoritm.tsx":"66","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Card/ViewNewAlgorithm.js":"67","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Card/ViewOrderCardNew.tsx":"68","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Card/ViewCardNew.tsx":"69","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Card/ViewItemSectionNew.tsx":"70","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Charts/ChartLine.tsx":"71","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/PageExample/DemoArchive.tsx":"72","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/PageExample/ToggleButtonMy.tsx":"73"},{"size":717,"mtime":1633257729182,"results":"74","hashOfConfig":"75"},{"size":362,"mtime":1632626877596,"results":"76","hashOfConfig":"75"},{"size":2776,"mtime":1634927348742,"results":"77","hashOfConfig":"75"},{"size":4440,"mtime":1642405345190,"results":"78","hashOfConfig":"75"},{"size":3649,"mtime":1639842802054,"results":"79","hashOfConfig":"75"},{"size":2844,"mtime":1642405610055,"results":"80","hashOfConfig":"75"},{"size":16417,"mtime":1635512239844,"results":"81","hashOfConfig":"75"},{"size":9649,"mtime":1635515315086,"results":"82","hashOfConfig":"75"},{"size":568,"mtime":1638532813182,"results":"83","hashOfConfig":"75"},{"size":4591,"mtime":1639841270882,"results":"84","hashOfConfig":"75"},{"size":1700,"mtime":1639841808083,"results":"85","hashOfConfig":"75"},{"size":2442,"mtime":1642692376889,"results":"86","hashOfConfig":"75"},{"size":5641,"mtime":1643179039960,"results":"87","hashOfConfig":"75"},{"size":6730,"mtime":1643173739593,"results":"88","hashOfConfig":"75"},{"size":3665,"mtime":1635568157368,"results":"89","hashOfConfig":"75"},{"size":690,"mtime":1633063507433,"results":"90","hashOfConfig":"75"},{"size":4466,"mtime":1635586241939,"results":"91","hashOfConfig":"75"},{"size":2465,"mtime":1634104133749,"results":"92","hashOfConfig":"75"},{"size":3573,"mtime":1642168201444,"results":"93","hashOfConfig":"75"},{"size":3558,"mtime":1639843684832,"results":"94","hashOfConfig":"75"},{"size":421,"mtime":1642168678717,"results":"95","hashOfConfig":"75"},{"size":248,"mtime":1633252456262,"results":"96","hashOfConfig":"75"},{"size":504,"mtime":1634637455801,"results":"97","hashOfConfig":"75"},{"size":714,"mtime":1633333275314,"results":"98","hashOfConfig":"75"},{"size":647,"mtime":1633333268837,"results":"99","hashOfConfig":"75"},{"size":191,"mtime":1633258359564,"results":"100","hashOfConfig":"75"},{"size":281,"mtime":1633265283246,"results":"101","hashOfConfig":"75"},{"size":266,"mtime":1634638951147,"results":"102","hashOfConfig":"75"},{"size":335,"mtime":1633333283572,"results":"103","hashOfConfig":"75"},{"size":298,"mtime":1634121803953,"results":"104","hashOfConfig":"75"},{"size":3037,"mtime":1634977888388,"results":"105","hashOfConfig":"75"},{"size":5335,"mtime":1643044049978,"results":"106","hashOfConfig":"75"},{"size":4375,"mtime":1634329043010,"results":"107","hashOfConfig":"75"},{"size":154,"mtime":1643038662375,"results":"108","hashOfConfig":"75"},{"size":290,"mtime":1633334257409,"results":"109","hashOfConfig":"75"},{"size":5640,"mtime":1642170774132,"results":"110","hashOfConfig":"75"},{"size":762,"mtime":1634745029511,"results":"111","hashOfConfig":"75"},{"size":2668,"mtime":1635151517770,"results":"112","hashOfConfig":"75"},{"size":119,"mtime":1643038433167,"results":"113","hashOfConfig":"75"},{"size":1058,"mtime":1634117005138,"results":"114","hashOfConfig":"75"},{"size":306,"mtime":1634116373214,"results":"115","hashOfConfig":"75"},{"size":1135,"mtime":1634288496420,"results":"116","hashOfConfig":"75"},{"size":4292,"mtime":1643038603287,"results":"117","hashOfConfig":"75"},{"size":263,"mtime":1639838540551,"results":"118","hashOfConfig":"75"},{"size":201,"mtime":1643028723751,"results":"119","hashOfConfig":"75"},{"size":5301,"mtime":1642170985785,"results":"120","hashOfConfig":"75"},{"size":1000,"mtime":1634825352204,"results":"121","hashOfConfig":"75"},{"size":1737,"mtime":1642170783529,"results":"122","hashOfConfig":"75"},{"size":295,"mtime":1634639027009,"results":"123","hashOfConfig":"75"},{"size":350,"mtime":1632643859943,"results":"124","hashOfConfig":"75"},{"size":223,"mtime":1634788300044,"results":"125","hashOfConfig":"75"},{"size":3570,"mtime":1634905796026,"results":"126","hashOfConfig":"75"},{"size":2657,"mtime":1634915039391,"results":"127","hashOfConfig":"75"},{"size":137,"mtime":1632643859942,"results":"128","hashOfConfig":"75"},{"size":3860,"mtime":1637995581218,"results":"129","hashOfConfig":"75"},{"size":618,"mtime":1637995703719,"results":"130","hashOfConfig":"75"},{"size":3254,"mtime":1639841329216,"results":"131","hashOfConfig":"75"},{"size":5083,"mtime":1642771486823,"results":"132","hashOfConfig":"75"},{"size":6753,"mtime":1643108776498,"results":"133","hashOfConfig":"75"},{"size":6569,"mtime":1643108615541,"results":"134","hashOfConfig":"75"},{"size":6709,"mtime":1643108655806,"results":"135","hashOfConfig":"75"},{"size":718,"mtime":1642771265165,"results":"136","hashOfConfig":"75"},{"size":2268,"mtime":1643256457985,"results":"137","hashOfConfig":"75"},{"size":4423,"mtime":1643038674484,"results":"138","hashOfConfig":"75"},{"size":5178,"mtime":1642690759642,"results":"139","hashOfConfig":"75"},{"size":10050,"mtime":1643168447290,"results":"140","hashOfConfig":"75"},{"size":601,"mtime":1642663891319,"results":"141","hashOfConfig":"75"},{"size":2792,"mtime":1642668129467,"results":"142","hashOfConfig":"75"},{"size":1748,"mtime":1642668143408,"results":"143","hashOfConfig":"75"},{"size":2592,"mtime":1642692314285,"results":"144","hashOfConfig":"75"},{"size":1431,"mtime":1642772339842,"results":"145","hashOfConfig":"75"},{"size":11612,"mtime":1643169788395,"results":"146","hashOfConfig":"75"},{"size":1228,"mtime":1643036073190,"results":"147","hashOfConfig":"75"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},"zgogsb",{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"150"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"159"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"159"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"159"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"169"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"169"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"176"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":8,"source":"179","usedDeprecatedRules":"180"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"159"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"159"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":3,"source":"192"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"159"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"201"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":3,"source":"204","usedDeprecatedRules":"159"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":1,"source":"207","usedDeprecatedRules":"159"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"159"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"159"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"159"},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"169"},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"201"},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239"},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"201"},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"159"},{"filePath":"250","messages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":4,"source":"254","usedDeprecatedRules":"159"},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"159"},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"262"},{"filePath":"266","messages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"159"},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"271","messages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"273","messages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":6,"source":"275","usedDeprecatedRules":"159"},{"filePath":"276","messages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"159"},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"159"},{"filePath":"282","messages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"284","messages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"286"},{"filePath":"287","messages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"290"},{"filePath":"291","messages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"150"},{"filePath":"294","messages":"295","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"159"},{"filePath":"297","messages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"299","messages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"302"},{"filePath":"303","messages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"306"},{"filePath":"307","messages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":8,"source":"309","usedDeprecatedRules":"159"},{"filePath":"310","messages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"159"},{"filePath":"313","messages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315"},{"filePath":"316","messages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318"},{"filePath":"319","messages":"320","errorCount":0,"fatalErrorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":3,"source":"321"},{"filePath":"322","messages":"323","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"150"},{"filePath":"325","messages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327"},{"filePath":"328","messages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"159"},{"filePath":"331","messages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"159"},{"filePath":"334","messages":"335","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336"},{"filePath":"337","messages":"338","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"150"},{"filePath":"340","messages":"341","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"159"},{"filePath":"343","messages":"344","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"159"},{"filePath":"346","messages":"347","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"159"},{"filePath":"349","messages":"350","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"159"},{"filePath":"352","messages":"353","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354"},{"filePath":"355","messages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"159"},"/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/index.js",[],["358","359"],"/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/reportWebVitals.js",[],"/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/App.js",["360","361","362","363","364"],"import './App.css';\nimport React, { useState,useRef,useEffect,useCallback } from 'react';\n\nimport Header from './Component/Header/Header';\nimport LeftBar from './Component/LeftBar/LeftBar';\nimport Main from './Component/Main/Main';\nimport Box from '@mui/material/Box';\nimport CssBaseline from '@mui/material/CssBaseline';\n\n\nimport IDialogAddOrder from './Component/Data/Dialog/IDialogAddOrder'\nimport Chat from './Chat';\n\n\n\nconst App=()=>{\n\n\n  const [newOrder,setOrder] = useState();\n\n  const addOrder=(value)=>\n  {\n    console.log(\"NEW = \", value)\n    setOrder(value)\n  }\n\n  /*\n  const [isPaused, setIsPaused] = useState(false);\n    const [data, setData] = useState(null); \n    const [status, setStatus] = useState(\"\");\n    const [socket, setSocket] = useState(new WebSocket(\"ws://192.168.0.2:5001/ws\"));\n    const ws = useRef(null)\n\n    const [chatHistory, setChatHistory] = useState([]);\n    const [isOnline, setIsOnline] = useState(false);\n    const [messages, setMessages] = useState({\n      messages: 'null'\n    });\n\n  \n\n\n\n    const addMessages = (msg) => {\n      //setTextValue((prev) => [...prev, msg]);\n    };\n\n    useEffect(() => {\n        if (!isPaused) {\n            ws.current = new WebSocket(\"ws://192.168.0.2:5001/ws\"); // создаем ws соединение\n          \n\n\n            ws.current.onopen = () => setStatus(\"Соединение открыто\");\t// callback на ивент открытия соединения\n            ws.current.onclose = () => setStatus(\"Соединение закрыто\"); // callback на ивент закрытия соединения\n\n            ws.current.onmessage = (message) => {\n              const newMessage = `Message from WebSocket: ${message.data}`\n              this.setMessages({\n                messages: this.state.messages.concat([newMessage]) \n              })\n            }\n\n            setSocket(ws);\n            //setTextValue('sadas')\n            //gettingData();\n           \n        }\n        return () => ws.current.close(); // кода меняется isPaused - соединение закрывается\n    }, [ws, isPaused]);\n\n\n\n  \n    const gettingData = useCallback(() => {\n        if (!ws.current) return;\n\n        ws.current.onmessage = e => {                //подписка на получение данных по вебсокету\n            if (isPaused) return;\n            console.log('da')\n            const message = JSON.parse(e.data);\n\n        \n            setData(message);\n        };\n    }, [isPaused]);\n*/\n   \n\n\n\n  return (\n    <Box sx={{ display: 'flex',height: '100%', }}>\n      {/*<Chat/>*/}\n      \n        <CssBaseline />\n        <Header/>\n        <LeftBar addOrder={addOrder}/>\n       <Main newOrder={newOrder}/> \n    </Box>\n  );\n}\n\nexport default App;\n","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/LeftBar/LeftBar.tsx",["365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381"],"import React, { useEffect } from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport DialogAddOrder from '../Dialog/DialogAddOrder'\n\nimport IDialogAddOrder from '../Data/Dialog/IDialogAddOrder'\n\nimport {Link,useHistory} from 'react-router-dom'\n\n\nimport { styled, useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Drawer from '@mui/material/Drawer';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport MuiAppBar, { AppBarProps as MuiAppBarProps } from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport List from '@mui/material/List';\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\n\nimport {useSelector} from 'react-redux'\nimport { useTypedSelector } from '../../hooks/leftMenuSelector'\n\nconst DrawerHeader = styled('div')(({ theme }) => ({\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  }));\n\nconst LeftBar = (props:{addOrder: (value: IDialogAddOrder) => void}) =>{\n\n    const theme = useTheme();\n    const {drawerWidth,show} = useTypedSelector(state => state.leftMenu);\n\n    const history = useHistory();\n\n\n\n    const [flagSelect, setFlagSelect] = React.useState<any>();\n    const onClick=(name: string)=>\n    {\n        switch(name)\n        {\n            case \"Заказы\":\n                history.push('/');\n            break;\n            case \"Заказы в работе\":\n               history.push('/orderInWork2');\n               setFlagSelect(true);\n            break;\n            case \"Заказы в архиве\":\n                history.push('/orderInArchive')\n            break;\n            case \"Карты\":\n                  history.push('/cards')\n            break;\n            case \"Добавить карту\":\n              history.push('/exel')\n            break;\n            case \"Новый алгоритм\":\n              history.push('/new')\n            break;\n        }\n    }\n\n    return (\n        <Drawer\n        sx={{\n          width: drawerWidth,\n          flexShrink: 0,\n          '& .MuiDrawer-paper': {\n            width: drawerWidth,\n            boxSizing: 'border-box',\n          },\n        }}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={show}\n      >\n        <DrawerHeader>\n         {/*\n          <IconButton>\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n          </IconButton>\n         */}\n        </DrawerHeader>\n        <Divider />\n        <List>\n          {['Заказы', 'Заказы в работе', 'Заказы в архиве','Карты','Добавить карту'].map((text, index) => (\n            <ListItem button key={text} onClick={() => onClick(text)}   > {/* style={{backgroundColor: flagSelect && index === 1 ? 'gray': ''}} */}\n                <ListItemIcon>\n                    {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n                </ListItemIcon>\n                <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n        <Divider />\n      </Drawer>\n    )\n}\n\n\nexport default LeftBar;\n\n\n/*\n <div className=\"leftBar\">\n            <div>\n                <Paper elevation={0} style={{display: 'flex', justifyContent:'center'}}>\n                    <p>Диплом</p>\n                </Paper>\n                <Paper elevation={3} sx={{overflow: 'auto',height: '100%', width: '100%'}}>\n                   <DialogAddOrder addOrder={props.addOrder}/>\n                </Paper>\n                <Paper elevation={3} sx={{overflow: 'auto',height: '100%', width: '100%'}}>\n                    <li><Link to='/'>Home</Link></li>\n                    <li><Link to='/roster'>Roster</Link></li>\n                    <li><Link to='/schedule'>Schedule</Link></li>\n                </Paper>\n            </div>\n        </div>\n\n\n*/",["382","383"],"/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Header/Header.tsx",["384","385","386","387","388","389"],"import React from 'react'\nimport Toolbar from '@material-ui/core/Toolbar';\n\nimport MuiAppBar, { AppBarProps as MuiAppBarProps } from '@mui/material/AppBar';\nimport { styled, useTheme } from '@mui/material/styles';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\n\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport { green } from '@mui/material/colors';\n\n\n\nimport { useTypedSelector } from '../../hooks/leftMenuSelector'\nimport { useLeftMenuAction } from '../../hooks/useLeftMenuAction';\n\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: number;\n  value: number;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ p: 3 }}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nfunction a11yProps(index: number) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst drawerWidth = 240;\n\ninterface AppBarProps extends MuiAppBarProps {\n  open?: boolean;\n}\n\nconst AppBar = styled(MuiAppBar, {\n  shouldForwardProp: (prop) => prop !== 'open',\n})<AppBarProps>(({ theme, open }) => ({\n  transition: theme.transitions.create(['margin', 'width'], {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  ...(open && {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: `${drawerWidth}px`,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  }),\n}));\n\n\nconst Header = () =>{\n\n  const {show} = useTypedSelector(state => state.leftMenu);\n  const {showMenu,hiddenMenu} = useLeftMenuAction();\n  \n\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawer = () => {\n\n    //console.log(\"show = \",show)\n    if(show)\n    {\n      hiddenMenu();\n      setOpen(false)\n    }\n    else\n    {\n      showMenu()\n      setOpen(true);\n    }\n\n  };\n\n    return (\n      <AppBar position=\"fixed\" open={open}>\n      <Toolbar sx={{position:'relative'}}>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          onClick={handleDrawer}\n          edge=\"start\"\n          sx={{ mr: 2 }}\n        >\n          <MenuIcon />\n        </IconButton>\n       {/* <Typography variant=\"h6\" noWrap component=\"div\">\n            Заказы в работе\n        </Typography>*/}\n      </Toolbar>\n      </AppBar>\n\n    )\n}\n\n\nexport default Header;\n\n\n\n\n/*\n && { display: 'none' }\n\n  <AppBar style={{width: 'calc(100% - 240px)'}}>\n        <Toolbar style={{ minHeight: '48px' }}>\n          <Tabs\n          TabIndicatorProps={{style: {background:'white'}}}\n          value={value} onChange={handleChange} aria-label=\"basic tabs example\">\n            <Tab style={{ color: 'white', fontSize: value === 0 ? '20px': '' }}label=\"Заказы\" {...a11yProps(0)} />\n            <Tab style={{color: 'white', fontSize: value === 1 ? '20px': '' }} label=\"Заказы в работе\" {...a11yProps(1)} />\n            <Tab style={{color: 'white', fontSize: value === 2 ? '20px': '' }} label=\"Заказы в архиве\" {...a11yProps(2)} />\n          </Tabs>\n        </Toolbar>\n        </AppBar>\n\n*/","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Main/Main.tsx",["390","391","392","393","394"],"import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport CustomizedAccordions from '../CustomizedAccordions'\n\nimport { styled, useTheme } from '@mui/material/styles';\n\nimport { Switch, Route } from 'react-router-dom'\nimport { useTypedSelector } from '../../hooks/leftMenuSelector'\nimport PageOrderInWork from '../Pages/PageOrderInWork';\nimport PageOrdersDefault from '../Pages/PageOrdersDefault';\nimport PageOrderInArchive from '../Pages/PageOrderInArchive';\nimport PageInformationAboutOrder from '../Pages/PageInformationAboutOrder'\nimport PageExel from '../Pages/PageExel';\nimport PageAllCards from '../Pages/PageAllCards';\nimport PageNewAlgoritm from '../Pages/PageNewAlgoritm';\nimport PageNewAlgoritmAddOrder from '../Pages/PageNewAlgoritmAddOrder';\nimport CustomizedAccordionsNewAlgoritm from '../CustomizedAccordionsNewAlgoritm';\n\n\nconst drawerWidth = 240\nconst MyMain = styled('main', { shouldForwardProp: (prop) => prop !== 'open' })<{\n    open?: boolean;\n  }>(({ theme, open }) => ({\n   /* padding: theme.spacing(3),*/\n    paddingTop: '65px',\n    height: '100%', \n    flexGrow: 1,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: `-${drawerWidth}px`,\n    ...(open && {\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      marginLeft: 0,\n    }),\n  }));\n\n\nconst Main = (props:{newOrder: any}) =>{\n\nconst {show} = useTypedSelector(state => state.leftMenu);\n\n\n\n  \n    return (\n        <MyMain open={show} >\n            <Paper elevation={0} sx={{overflow: 'auto',height: '100%', width: '100%'}}>\n                <Switch>\n                    <Route exact path='/' component={PageNewAlgoritmAddOrder}/>\n                   {/* <Route exact path='/' component={PageOrdersDefault}/> */}\n                    \n                  \n                    <Route exact path='/orderInfo' component={PageInformationAboutOrder}/>\n                    <Route exact path='/orderInArchive' component={PageOrderInArchive}/>\n                    <Route exact path='/exel' component={PageExel}/>\n                    <Route exact path='/cards' component={PageNewAlgoritm}/> {/*PageAllCards*/}\n                    <Route exact path='/newAddOrder' component={PageNewAlgoritmAddOrder}/>\n                    {/*<PageOrderInWork/>*/}\n                    <Route exact path='/orderInWork2' component={CustomizedAccordionsNewAlgoritm}/>\n                </Switch>\n            </Paper>\n        </MyMain>\n    )\n}\n\n\nexport default Main;\n\n// <CustomizedAccordions newOrder={props.newOrder as any}/>\n\n/*\n<Switch>\n                <Route exact path='/' component={CustomizedAccordions}/>\n</Switch>\n\n*/","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/CustomizedAccordions.tsx",["395","396","397","398","399","400","401","402","403","404","405","406","407","408","409"],"import * as React from 'react';\nimport { styled } from '@material-ui/core/styles';\nimport ArrowForwardIosSharpIcon from '@material-ui/icons/ArrowForwardIosSharp';\nimport MuiAccordion, { AccordionProps } from '@material-ui/core/Accordion';\nimport MuiAccordionSummary, {\n  AccordionSummaryProps,\n} from '@material-ui/core/AccordionSummary';\nimport MuiAccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\n\n//\nimport CustomizedAccordiongsHeader from './CustomizedAccordiongsHeader';\nimport View from './Card/View'\n//\nimport IDialogAddOrder from './Data/Dialog/IDialogAddOrder'\nimport IDialogAddOrderItem from './Data/Dialog/IDialogAddOrderItem'\n\n//\nimport { useActionOrders } from '../hooks/useActionOrders';\nimport { useTypedSelector } from '../hooks/leftMenuSelector';\nimport IDataOrder from './Data/IDataOrder';\n\nimport * as signalR from \"@microsoft/signalr\";\nimport useWebSocket, { ReadyState } from 'react-use-websocket';\n\nimport {OrderMy} from '../type/useOrdersType'\n\nimport ip,{URL_orderList} from '../global'\nlet URL = 'ws://+ip+:5001/orderlist';\n\nconst Accordion = styled((props: AccordionProps) => (\n  <MuiAccordion disableGutters elevation={0} square {...props} />\n))(({ theme }) => ({\n  border: `1px solid ${theme.palette.divider}`,\n  '&:not(:last-child)': {\n    borderBottom: 0,\n  },\n  '&:before': {\n    display: 'none',\n  },\n}));\n\nconst AccordionSummary = styled((props: AccordionSummaryProps) => (\n  <MuiAccordionSummary\n    expandIcon={<ArrowForwardIosSharpIcon sx={{ fontSize: '0.9rem' }} />}\n    {...props}\n  />\n))(({ theme }) => ({\n  backgroundColor:\n    theme.palette.mode === 'dark'\n      ? 'rgba(255, 255, 255, .05)'\n      : 'rgba(0, 0, 0, .03)',\n  flexDirection: 'row-reverse',\n  '& .MuiAccordionSummary-expandIconWrapper.Mui-expanded': {\n    transform: 'rotate(90deg)',\n  },\n  '& .MuiAccordionSummary-content': {\n    margin: 0\n  },\n}));\n\n\n/////////\n\n\n\n\n\nlet product1_vsm = [\n  {\n     sections: [\n       {\n         etapNumeric: 1,\n         bufferVSM: {\n           name: \"Буфер 1\",\n           max: 100,\n           value: 75,\n           minHold: 50\n           \n         },\n         etapVSM: {\n           name: \"Етап 2\"\n         }\n       },\n   ]\n  },\n   //item 2 section             \n  {\n     sections: [\n       {\n         etapNumeric: 2,\n         bufferVSM: {\n           name: \"Буфер 2\",\n           max: 100,\n           value: 30\n         },\n         etapVSM: {\n           name: \"Етап 2\"\n         }\n       },\n       {\n         etapNumeric: 2,\n         bufferVSM: {\n           name: \"Буфер 3\",\n           max: 100,\n           value: 30\n         },\n         etapVSM: {\n           name: \"Етап 3\"\n         }\n       },\n       {\n         etapNumeric: 2,\n         bufferVSM: {\n           name: \"Буфер 3\",\n           max: 100,\n           value: 30\n         },\n         etapVSM: {\n           name: \"Етап 3\"\n         }\n       },\n       {\n         etapNumeric: 2,\n         bufferVSM: {\n           name: \"Буфер 3\",\n           max: 100,\n           value: 30\n         },\n         etapVSM: {\n           name: \"Етап 3\"\n         }\n       },\n       \n     ]\n  },\n  /// item 3\n  {\n    sections:[\n     {\n       etapNumeric: 3,\n       bufferVSM: {\n         name: \"Буфер 4\",\n         max: 100,\n         value: 30\n       },\n       etapVSM: {\n         name: \"Етап 4\"\n       }\n     },\n     {\n       etapNumeric: 3,\n       bufferVSM: {\n         name: \"Буфер 4\",\n         max: 100,\n         value: 30\n       },\n       etapVSM: {\n         name: \"Етап 4\"\n       }\n     },\n     {\n       etapNumeric: 3,\n       bufferVSM: {\n         name: \"Буфер 4\",\n         max: 100,\n         value: 30\n       },\n       etapVSM: {\n         name: \"Етап 4\"\n       }\n     },\n    ]\n  },\n  // item 4\n  {\n   sections: [\n     {\n       etapNumeric: 1,\n       bufferVSM: {\n         name: \"Буфер 1\",\n         max: 100,\n         value: 50\n         \n       },\n       etapVSM: {\n         name: \"Етап 2\"\n       }\n     },\n ]\n},\n]\n\nlet product2_vsm = [\n{\n  sections: [\n    {\n      etapNumeric: 1,\n      bufferVSM: {\n      name: \"Буфер 1\"\n  },\n  etapVSM: {\n    name: \"Етап 1\"\n  }\n    }\n]\n}\n]\n\n\nlet shemaOrder_1 = [\n  {\n    name: 'Продукт 1', TActual: 600, TPlan: 800,\n  sections: product1_vsm\n  },\n  //\n  {\n    name: 'Продукт 2', TActual: 600, TPlan: 800,\n  sections: product2_vsm\n  }\n  //\n]\n\n\nlet shemaOrder_2 = [\n  {\n    name: 'Продукт 1', TActual: 600, TPlan: 800,\n  sections: product1_vsm\n  },\n  //\n  {\n    name: 'Продукт 2', TActual: 600, TPlan: 800,\n  sections: product2_vsm\n  }\n  //\n]\n\n\nlet list =[\n  {name: 'Заказ 1', TActual: 920, TPlan: 800,\n    products: shemaOrder_1\n  },\n  {name: 'Заказ 2', TActual: 500, TPlan: 800,\n  products: shemaOrder_1\n  },\n  {name: 'Заказ 2', TActual: 500, TPlan: 800,\n  products: shemaOrder_1\n  },\n  {name: 'Заказ 2', TActual: 500, TPlan: 800,\n  products: shemaOrder_1\n  },\n  {name: 'Заказ 2', TActual: 500, TPlan: 800,\n  products: shemaOrder_1\n  },\n  {name: 'Заказ 2', TActual: 500, TPlan: 800,\n  products: shemaOrder_1\n  },\n\n\n  //\n\n  {name: 'Заказ 1', TActual: 920, TPlan: 800,\n    products: shemaOrder_1\n  },\n  {name: 'Заказ 2', TActual: 500, TPlan: 800,\n  products: shemaOrder_1\n  },\n  {name: 'Заказ 2', TActual: 500, TPlan: 800,\n  products: shemaOrder_1\n  },\n  {name: 'Заказ 2', TActual: 500, TPlan: 800,\n  products: shemaOrder_1\n  },\n  {name: 'Заказ 2', TActual: 500, TPlan: 800,\n  products: shemaOrder_1\n  },\n  {name: 'Заказ 2', TActual: 500, TPlan: 800,\n  products: shemaOrder_1\n  },\n  {name: 'Заказ 1', TActual: 920, TPlan: 800,\n    products: shemaOrder_1\n  },\n  {name: 'Заказ 2', TActual: 500, TPlan: 800,\n  products: shemaOrder_1\n  },\n  {name: 'Заказ 2', TActual: 500, TPlan: 800,\n  products: shemaOrder_1\n  },\n  {name: 'Заказ 2', TActual: 500, TPlan: 800,\n  products: shemaOrder_1\n  },\n  {name: 'Заказ 2', TActual: 500, TPlan: 800,\n  products: shemaOrder_1\n  },\n  {name: 'Заказ 2', TActual: 500, TPlan: 800,\n  products: shemaOrder_1\n  },\n  {name: 'Заказ 1', TActual: 920, TPlan: 800,\n    products: shemaOrder_1\n  },\n  {name: 'Заказ 2', TActual: 500, TPlan: 800,\n  products: shemaOrder_1\n  },\n  {name: 'Заказ 2', TActual: 500, TPlan: 800,\n  products: shemaOrder_1\n  },\n  {name: 'Заказ 2', TActual: 500, TPlan: 800,\n  products: shemaOrder_1\n  },\n  {name: 'Заказ 2', TActual: 500, TPlan: 800,\n  products: shemaOrder_1\n  },\n  {name: 'Заказ 2', TActual: 500, TPlan: 800,\n  products: shemaOrder_1\n  },\n  \n]\n\nlet count = 2;\n\n\n\n////////\n\nconst AccordionDetails = styled(MuiAccordionDetails)(({ theme }) => ({\n  padding: theme.spacing(2),\n  borderTop: '1px solid rgba(0, 0, 0, .125)',\n}));\n\nexport default function CustomizedAccordions(props:{newOrder: IDialogAddOrder}) {\n  const [expanded, setExpanded] = React.useState<string | false>('panel1');\n\n  const handleChange =\n    (panel: string) => (event: React.SyntheticEvent, newExpanded: boolean) => {\n      setExpanded(newExpanded ? panel : false);\n    };\n\n\n    /*\n    //\n    // Builds the SignalR connection, mapping it to /chat\n    const hubConnection = new signalR.HubConnectionBuilder()\n    .withUrl(\"https://192.168.0.2:5001/chat\",{\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n  })\n    //.configureLogging(signalR.LogLevel.Information)  \n    .build();\n\n\n    // Starts the SignalR connection\n    hubConnection.start().then(a => {\n      // Once started, invokes the sendConnectionId in our ChatHub inside our ASP.NET Core application.\n      if (hubConnection.connectionId) {\n        hubConnection.invoke(\"sendConnectionId\", hubConnection.connectionId);\n      }   \n    }).catch(err => console.log('Error while starting connection: ' + err));\n\n\n    const SignalRTime: React.FC = () => {      \n      // Sets the time from the server\n      const [time, setTime] = React.useState<string | null>(null);\n \n      React.useEffect(() => {\n        hubConnection.on(\"setTime\", message => {\n          setTime(message);\n        });     \n      });\n \n      return <p>The time is {time}</p>;\n    };\n    */\n    ///\n\n\n    const {orders2, loading} = useTypedSelector(state => state.orders);\n    const {ordersLoading2} = useActionOrders()\n\n\n   \n\n\n \n    const socket = React.useRef(null)  as any;\n    //const [myOrders, setMyOrders] = React.useState([] as IDataOrder[]);\n    const [myOrders, setMyOrders] = React.useState([] as OrderMy[]);\n    const [reconnect, setRecconect] = React.useState(false);\n  \n   /* React.useEffect(() => {\n      const timer = setInterval(()=>{ordersLoading2()},1000)\n      return () => {\n        clearInterval(timer);\n      }\n    }, [orders2]) */\n\n\n    /*\n    React.useEffect(() => {\n\t\tconsole.log(\"Set socket after = \", socket.current);\n\t\tif (!socket.current || reconnect === false) {\n\t\t\tconsole.log(\"Set socket = \", socket.current);\n\t\t\tsocket.current = new WebSocket(URL_orderList) ; //URL\n\t\t\tsocket.current.onmessage = (e: any) => {\n\t\t\t\t\n\t\t\t\tconst OrdersFromServer = JSON.parse(e.data) as IDataOrder[];  \n\t\t\t\tconsole.log(\"e\", OrdersFromServer);\n        console.log(\"e myOrders\", myOrders);\n\t\t\t\tsetMyOrders([...OrdersFromServer] as IDataOrder[]);\n\t\t\t};\n\n\t\t\tsocket.current.onopen = () => {\n\t\t\t\t// on connecting, do nothing but log it to the console\n\t\t\t\tconsole.log('connected')\n\t\t\t\t//socket.current.send(JSON.stringify({ id: '1'}));\n\t\t\t}\n\n\t\t\t\n\n\t\t\tsocket.current.onerror = (e : any) => {\n\t\t\t\tconsole.log(\"eror\", e.data);\n        console.log(\"CONNECTION CLOSED\", e.data);\n\t\t\t\tsocket.current.close(1000, \"\");\n\n        setRecconect(true);\n\t\t\t};\n\n\t\t\tsocket.current.onclose = (e : any)=>{\n\t\t\t\tconsole.log(\"CONNECTION CLOSED\", e.data);\n\t\t\t\tsocket.current.close(1000, \"\");\n\n\t\t\t\tsetRecconect(true);\n\t\t\t}\n\t\t}\n\t\treturn () => {\n\t\t  if (socket.current) {\n\t\t\tsocket.current.close(1000, \"\");\n\t\t  }\n\t\t};\n\t  }, [socket,reconnect]);\n\n    console.log(\"rerender\")\n    */\n\n\n    React.useEffect(() => {\n      console.log(\"Set socket after = \", socket.current);\n      if (!socket.current || reconnect === false) {\n        console.log(\"Set socket = \", socket.current);\n        socket.current = new WebSocket(URL_orderList) ; //URL\n        socket.current.onmessage = (e: any) => {\n\n          const OrdersFromServer = JSON.parse(e.data) as OrderMy[];  \n          //console.log(\"e\", OrdersFromServer);\n          setMyOrders(OrdersFromServer as OrderMy[]);\n        };\n  \n        socket.current.onopen = () => {\n          // on connecting, do nothing but log it to the console\n          console.log('connected')\n          //socket.current.send(JSON.stringify({ id: '1'}));\n        }\n  \n        \n  \n        socket.current.onerror = (e : any) => {\n          console.log(\"eror\", e.data);\n          console.log(\"CONNECTION CLOSED\", e.data);\n          socket.current.close(1000, \"\");\n  \n          setRecconect(true);\n        };\n  \n        socket.current.onclose = (e : any)=>{\n          console.log(\"CONNECTION CLOSED\", e.data);\n          socket.current.close(1000, \"\");\n  \n          setRecconect(true);\n        }\n      }\n      return () => {\n        if (socket.current) {\n        socket.current.close(1000, \"\");\n        }\n      };\n      }, [socket,reconnect]);\n  \n      console.log(\"rerender\")\n\n\n     \n\n\n/*\n    React.useEffect(() => {\n    const timer = setTimeout(() => ordersLoading(), 1000); \n    return () => {\n      \n      //console.log(\"timer \", orders);\n    };  \n    },[orders])//orders*/\n\n   // console.log(\"CustomizedAccordions rerender\")\n\n    /*if(props.newOrder != null)\n    {\n      count++;\n\n\n      let listOrderProduct = props.newOrder.products.map((item: IDialogAddOrderItem)=>{\n\n          let sectionVSM;\n\n          if(item.name === 'Продукт 1')\n          {\n            sectionVSM = product1_vsm;\n          }\n          if(item.name === 'Продукт 2')\n          {\n            sectionVSM = product2_vsm;\n          }\n\n          let newObj = {\n            name: item.name,\n            quantity: item.quantity,\n            TActual: 600, \n            TPlan: 800,\n            sections: sectionVSM\n          }\n          return newObj;\n        \n\n      })\n\n      let shemaOrder_1 = [\n        ...listOrderProduct\n      ]\n\n\n\n      let obj = {name: 'Заказ '+count, TActual: 500, TPlan: 800,\n      products: shemaOrder_1\n      }\n\n      list.push(obj as any)\n    }\n    */\n\n\n\n\n    let listData = myOrders.map((item: OrderMy, index: number)=>{\n      let idName = \"panel\"+index+\"a-header\"\n      let ariaControls = \"panel\"+index+\"a-content\"\n\n\n      return (  \n              <Accordion key={index} TransitionProps={{ unmountOnExit: true }}>\n                <AccordionSummary\n                  expandIcon={<ArrowForwardIosSharpIcon/>}\n                  aria-controls={ariaControls}\n                  id={idName}\n                >\n                  <Typography component={'span'} sx={{width: '100%',marginLeft:'10px'}}>\n                    <CustomizedAccordiongsHeader data={item.order}/>\n                  </Typography>\n                </AccordionSummary>\n                <AccordionDetails  sx={{height: 'calc(100vh - 200px)'}}>\n                  <View key={item.order.id} item={item}/>\n                </AccordionDetails>\n              </Accordion>\n      )\n    })\n\n\n    return (\n      <div style={{paddingLeft: '50px', paddingRight: '50px'}}>\n      {\n       reconnect ?  \n      <button onClick={() => setRecconect(!reconnect)}>\n\t\t\t Переподключение\n\t\t\t</button> \n      :\n      null\n      }\n\n        {listData.length === 0  ? \n        \n        <p>В работе нет заказов</p>\n        \n        :listData }\n      </div>\n    );\n}\n\n\n/*\n\n{name: 'Заказ 3', TActual: 600, TPlan: 800},\n      {name: 'Заказ 4', TActual: 600, TPlan: 800},\n      {name: 'Заказ 1', TActual: 600, TPlan: 800},\n      {name: 'Заказ 2', TActual: 600, TPlan: 800},\n      {name: 'Заказ 3', TActual: 600, TPlan: 800},\n      {name: 'Заказ 4', TActual: 600, TPlan: 800},\n      {name: 'Заказ 1', TActual: 600, TPlan: 800},\n      {name: 'Заказ 2', TActual: 600, TPlan: 800},\n      {name: 'Заказ 3', TActual: 600, TPlan: 800},\n      {name: 'Заказ 4', TActual: 600, TPlan: 800},\n      {name: 'Заказ 1', TActual: 600, TPlan: 800},\n      {name: 'Заказ 2', TActual: 600, TPlan: 800},\n      {name: 'Заказ 3', TActual: 600, TPlan: 800},\n      {name: 'Заказ 4', TActual: 600, TPlan: 800},\n      {name: 'Заказ 1', TActual: 600, TPlan: 800},\n      {name: 'Заказ 2', TActual: 600, TPlan: 800},\n      {name: 'Заказ 3', TActual: 600, TPlan: 800},\n      {name: 'Заказ 4', TActual: 600, TPlan: 800},\n      {name: 'Заказ 1', TActual: 600, TPlan: 800},\n      {name: 'Заказ 2', TActual: 600, TPlan: 800},\n      {name: 'Заказ 3', TActual: 600, TPlan: 800},\n      {name: 'Заказ 4', TActual: 600, TPlan: 800},\n      {name: 'Заказ 1', TActual: 600, TPlan: 800},\n      {name: 'Заказ 2', TActual: 600, TPlan: 800},\n      {name: 'Заказ 3', TActual: 600, TPlan: 800},\n      {name: 'Заказ 4', TActual: 600, TPlan: 800},\n      {name: 'Заказ 1', TActual: 600, TPlan: 800},\n      {name: 'Заказ 2', TActual: 600, TPlan: 800},\n      {name: 'Заказ 3', TActual: 600, TPlan: 800},\n      {name: 'Заказ 4', TActual: 600, TPlan: 800},\n      {name: 'Заказ 1', TActual: 600, TPlan: 800},\n      {name: 'Заказ 2', TActual: 600, TPlan: 800},\n      {name: 'Заказ 3', TActual: 600, TPlan: 800},\n      {name: 'Заказ 4', TActual: 600, TPlan: 800},\n      {name: 'Заказ 1', TActual: 600, TPlan: 800},\n      {name: 'Заказ 2', TActual: 600, TPlan: 800},\n      {name: 'Заказ 3', TActual: 600, TPlan: 800},\n      {name: 'Заказ 4', TActual: 600, TPlan: 800},\n      {name: 'Заказ 1', TActual: 600, TPlan: 800},\n      {name: 'Заказ 2', TActual: 600, TPlan: 800},\n      {name: 'Заказ 3', TActual: 600, TPlan: 800},\n      {name: 'Заказ 4', TActual: 600, TPlan: 800},\n      {name: 'Заказ 1', TActual: 600, TPlan: 800},\n      {name: 'Заказ 2', TActual: 600, TPlan: 800},\n      {name: 'Заказ 3', TActual: 600, TPlan: 800},\n      {name: 'Заказ 4', TActual: 600, TPlan: 800},\n      {name: 'Заказ 1', TActual: 600, TPlan: 800},\n      {name: 'Заказ 2', TActual: 600, TPlan: 800},\n      {name: 'Заказ 3', TActual: 600, TPlan: 800},\n      {name: 'Заказ 4', TActual: 600, TPlan: 800},\n\n*/",["410","411"],"/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/CustomizedAccordiongsHeader.tsx",["412","413","414","415","416","417","418","419","420"],"import moment from 'moment';\nimport React,{useState} from 'react'\nimport IDataOrder from './Data/IDataOrder';\n\nimport PauseIcon from '@material-ui/icons/Pause';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport ArchiveIcon from '@material-ui/icons/Archive';\nimport StopIcon from '@material-ui/icons/Stop';\nimport WorkIcon from '@material-ui/icons/Work';\n\nimport { IconButton } from '@material-ui/core';\n\nimport { useActionOrders } from '../hooks/useActionOrders';\nimport { useTypedSelector } from '../hooks/leftMenuSelector';\nimport usePrevious from '../hooks/usePrevious';\n\n\nimport ip from '../global'\nlet URL = 'ws://'+ip+':5001/wsItem';\n\ninterface IDataHeader{\n    name?: string,\n    TActual: number,\n    TPlan: number\n}\n\n\n\nconst CustomizedAccordiongsHeader = (props:{data: IDataOrder})  => \n{\n    const [order, setOrder] = useState<IDataOrder>(props.data); //props.data\n\n    const [bad,setBad] = useState(false);\n    const [textPeriod,setTextPeriod] = useState(\"\");\n\n\n    React.useEffect(() => {\n        setOrder(props.data);\n    }, [props.data]);\n\n\n  \n\n    //const {orders, loading} = useTypedSelector(state => state.orders);\n    //const {updateInfoOrder} = useActionOrders()\n\n    //const prevOrder = usePrevious(order) as IDataOrder | undefined;\n\n  /* React.useEffect(() => {\n        const timer = setTimeout(() => updateInfoOrder(order as IDataOrder), 1000); \n        return () => {\n          clearTimeout(timer);\n        };  \n    })*/\n    \n\n  /* React.useEffect(() => {\n        if(prevOrder != undefined)\n        {\n            if(prevOrder.tActual  != order.tActual)\n            {\n                setOrder(props.data)\n            }\n        }\n    },[props.data])*/\n\n   /* console.log(prevOrder, props.data)\n    if(prevOrder != undefined)\n    {\n           \n     }*/\n\n///\n\n/*\n    const socket = React.useRef(null)  as any;\n    const [reconnect, setRecconect] = React.useState(false);\n  \n      React.useEffect(() => {\n\t\tconsole.log(\"Set socket after order= \", socket.current);\n\t\tif (!socket.current || reconnect === false) {\n\t\t\tconsole.log(\"Set socket = \", socket.current);\n\t\t\tsocket.current = new WebSocket(URL) ;\n\t\t\tsocket.current.onmessage = (e: any) => {\n\t\t\t\t\n               \n\t\t\t\tconst OrdersFromServer = JSON.parse(e.data) as IDataOrder;  \n\t\t\t\t//console.log(\"e\", OrdersFromServer);\n                //console.log(\"e order\", order);\n\t\t\t\tsetOrder(OrdersFromServer);\n\t\t\t};\n\n\t\t\tsocket.current.onopen = () => {\n\t\t\t\t// on connecting, do nothing but log it to the console\n\t\t\t\tconsole.log('connected')\n\t\t\t\tsocket.current.send(JSON.stringify({ id: props.data.id}));\n\t\t\t}\n\n\t\t\t\n\n\t\t\tsocket.current.onerror = (e : any) => {\n\t\t\t\tconsole.log(\"eror\", e.data);\n        console.log(\"CONNECTION CLOSED\", e.data);\n\t\t\t\tsocket.current.close(1000, \"\");\n\n        setRecconect(true);\n\t\t\t};\n\n\t\t\tsocket.current.onclose = (e : any)=>{\n\t\t\t\tconsole.log(\"CONNECTION CLOSED\", e.data);\n\t\t\t\tsocket.current.close(1000, \"\");\n\n\t\t\t\tsetRecconect(true);\n\t\t\t}\n\t\t}\n\t\treturn () => {\n\t\t  if (socket.current) {\n\t\t\tsocket.current.close(1000, \"\");\n\t\t  }\n\t\t};\n\t  }, [socket,reconnect]);\n\n\n      if(order === null || order === undefined)\n      {\n          return (\n             <p>Не нашел</p>\n          )\n      }\n      */\n\n      //console.log(\"rerender Order = \", order?.id)\n\n\n    /* if(order?.tActual  != props.data.tActual)\n     {\n         setOrder(props.data)\n     }*/\n\n   \n   \n    const {\n        name,\n        tActual,\n        tPlan,\n        tFuture,\n        tStop,\n        tStart} = order as IDataOrder;\n  \n\n    \n\n    let timeTActual = moment.unix(tActual).utc().format('H:m:s')\n    let timeTPlan = moment.unix(tPlan).utc().format('H:m:s')\n    \n\n\n    const ConvertPeriodToString = (timePeriod: any)=>\n    {\n        var list = timePeriod.split(' ')\n\n        let text = timePeriod;\n        //console.log(list);\n\n        if(list[0] === 'in')\n        {\n\n\n            if(list[1] === 'a')\n            {\n                text = \"Отставание на несколько сукунд\"\n                if(list[2] === 'minute')\n                {\n                    text = \"Отставание на 1 м\"\n                }\n                \n            }\n            else\n            {\n                let t =list[1];\n                text = \"Отставание на \"+ t\n\n                switch(list[2])\n                {\n                    case \"hours\": \n                        text += \" ч\"\n                    break;\n                    case \"minutes\": \n                        text += \" м\"\n                    break;\n                    \n                }\n            }\n           // console.log(text)\n        }\n        else\n        {\n            if(list[0] === 'a')\n            {\n                text = \"В запасе много времени\"\n                if(list[2] === 'minute')\n                {\n                    text = \"Отставание на 1 м\"\n                }\n                \n            }\n            else\n            {\n                text = \"В запасе \" + list[0];\n                switch(list[1])\n                {\n                    case \"hours\": \n                        text += \" ч\"\n                    break;\n                    case \"minutes\": \n                        text += \" м\"\n                    break;\n                    \n                }\n            }\n           \n        }\n\n        if(textPeriod != text)\n        {\n            setTextPeriod(text);\n        }\n       \n    }\n\n  //var diff = moment(\"23:07\").unix() - moment(\"22:07\").unix();\n  \n  let timePeriod = '';\n  let timeFuture = moment.unix(tFuture).utc().format('H:m:s');\n  let text = '';\n\n\n  let dateStop: Date = new Date(tStop);  \n  let dateStart: Date = new Date(tStart);  \n\n  //console.log(\"tStop =\",dateStop);\n  //console.log(\"tStart =\",dateStart);\n\n  let tt = dateStop.getTime() - dateStart.getTime();\n\n /* if(tt < 0)\n  {\n      tt = dateStart.getTime() - dateStop.getTime();\n  }*/\n  \n  let dd: Date = new Date(tt);\n\n  let timeArchive =  moment(dd).utc().format('H:m:s');//moment.unix( (dateStop.getTime()  - dateStart.getTime()) ).utc().format('H:m:s');\n  if(tPlan - tActual  === 0)\n  {\n    timePeriod  = moment.unix(tPlan-tActual).utc().format('H:m:s');\n    text = '';\n  }\n  else\n  {\n    if(tPlan - tActual > 0)\n    {\n           timePeriod   = moment.unix(tPlan-tActual).utc().format('H:m:s');\n           text = 'Осталось';\n    }\n    else\n    {\n          timePeriod   = moment.unix(tActual-tPlan).utc().format('H:m:s');\n          text = 'Отставание на';\n    }\n  }\n \n  \n\n// let timePeriod =  moment.unix(tPlan).from(moment.unix(tActual))   //ConvertPeriodToString( moment.unix(tActual).utc().from(moment.unix(tPlan).utc()) )\n\n  \n    if(tActual >= tPlan && bad === false ) //&& order.orderRole === 2 || order.orderRole === 3\n    {\n        setBad(true);\n    }\n\n    if(tActual < tPlan && bad)\n    {\n        console.log(tActual,tPlan);\n        setBad(false);\n    }\n\n\n    let orderRole;\n\n    switch(order.orderRole)\n    {\n        case 1:\n            orderRole = <PlayArrowIcon style={{color: 'gray'}}/>\n        break;\n        case 2:\n            orderRole =  <WorkIcon style={{color: 'orange'}}/>\n        break;\n        case 3:\n            orderRole =  <ArchiveIcon style={{color: 'green'}}/>\n        break;\n        case 4:\n            orderRole =  <StopIcon style={{color: 'red'}}/>\n        break;\n    }\n\n    \n    if(order.orderRole === 3)\n    {\n     \n\n        let seee = dd.getSeconds() >= tPlan\n        \n        return (\n            <div style={{display: 'grid', gridTemplateColumns: '100px auto',}}>\n                <p>{name}</p>\n                <div style={{display: 'grid', gridTemplateColumns: '1fr 1fr 1fr'}}>\n                    <div style={{display: 'flex', justifyContent:'space-around'}} >\n                        <p>Затраченоое время</p>\n                        <p style ={{backgroundColor: seee ? 'red': '', color: seee ? \"white\": \"\" }}>{timeArchive}</p>\n                    </div>\n                    <div style={{display: 'flex', justifyContent:'space-around'}} >\n                        <p>Плановое время</p>\n                        <p style ={{backgroundColor: seee ? 'red': '', color: seee ? \"white\": \"\" }}>{timeTPlan}</p>\n                    </div>\n                    <div style={{display: 'flex', justifyContent:'space-around'}} >\n                        <p>{orderRole}</p>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <div style={{display: 'grid', gridTemplateColumns: '100px auto',}}>\n                <p>{name}</p>\n                <div style={{display: 'grid', gridTemplateColumns: '1fr 1fr 1fr'}}>\n                    <div style={{display: 'flex', justifyContent:'space-around'}} >\n                        <p>Актуальное вермя</p>\n                        <p style ={{backgroundColor: bad ? 'red': '', color: bad ? \"white\": \"\" }}>{timeTActual}</p>\n                        <p>{text}</p>\n                        <p>{timePeriod}</p>\n                    </div>\n                    <div style={{display: 'flex', justifyContent:'space-around'}} >\n                        <p>Плановое время</p>\n                        <p style ={{backgroundColor: bad ? 'red': '', color: bad ? \"white\": \"\" }}>{timeTPlan}</p>\n                    </div>\n                    <div style={{display: 'flex', justifyContent:'space-around'}} >\n                        <p>Прогнозируемое время</p>\n                        <p>{timeFuture}</p>\n                        <p>{orderRole}</p>\n                    </div>\n                </div>\n        </div>\n    )\n}\n\n\nexport default CustomizedAccordiongsHeader;","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Card/View.js",["421"],"import React from 'react';\nimport {MapInteractionCSS } from 'react-map-interaction';\nimport ViewOrderCard from './ViewOrderCard'\n\nclass View extends React.Component{\n  constructor(props)\n  {\n    super(props);\n\n  }\n\n\n\n  render()\n  {\n    return (\n      <MapInteractionCSS defaultValue={{scale: 0.5,translation : {x : 0,y: 0}}} >\n          <ViewOrderCard order={this.props.item}/>\n      </MapInteractionCSS>\n    );\n  }\n}\n//<div style={{width: '200px', height: '400px', backgroundColor: 'red'}}></div>\n// \nexport default View;\n\n//scale: 0.25,translation : {x : 50,y: 250}}",["422","423"],"/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Card/ViewOrderCard.tsx",["424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452"],"import React,{useEffect, useState} from 'react'\n\nimport IDataCardSection from '../Data/IDataCardSection'\nimport IDataOrderItem from '../Data/IDataOrderItem'\nimport Divider from '@material-ui/core/Divider';\nimport ViewCard from './ViewCard'\n\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { Box } from '@material-ui/system';\n\n\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardContent from '@material-ui/core/CardContent'\n\nimport IconButton from '@material-ui/core/IconButton'\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport SettingsIcon from '@material-ui/icons/Settings';\n\nimport IDataVSM from '../Data/IDataVSM'\nimport IDataProduction from '../Data/IDataProduction';\nimport IDataCardVSM from '../Data/IDataCardVSM';\nimport { useCardVSMActionType, useProductionCardVSM } from '../../type/useCardVSMType';\n\nimport { useActionCardVSM } from '../../hooks/useActionCardVSM';\nimport { useTypedSelector } from '../../hooks/leftMenuSelector';\nimport IDataOrder from '../Data/IDataOrder';\nimport { MyCards, OrderMy } from '../../type/useOrdersType';\n\n/*\ninterface productionCardVSM{\n    name: string,\n    productions: IDataCardVSM[]\n}\ninterface IDataCardProduct{\n    cardVSMs: productionCardVSM[]\n}*/\n\n\nconst ViewOrderCard =  (props: {order: OrderMy}) => {\n    const [BDitems, setBDItem] = useState<IDataOrderItem[]>();\n\n    const {cardVSMs, loading} = useTypedSelector(state => state.cardVSM);\n    const {cardVSMLoading} = useActionCardVSM()\n\n    const [card, setCard] = useState(cardVSMs);\n/*\nuseEffect(() => {\n    const timer = setTimeout(() => cardVSMLoading(props.order), 1000); \n    return () => {\n      clearTimeout(timer);\n      //console.log(\"timer \", orders);\n    };  \n   // console.log(\"cardVSMLoading useEffect\" + props.order.name);\n    //console.log(\"cardVSMLoading \" + props.order.name);\n},[cardVSMs]) //orders\n\n//console.log(\"rerender ViewOrderCard\")\n//return <p>;o</p>;\n\nif(loading)\n{\n    return (\n        <Box sx={{ display: 'flex', justifyContent: 'center' }}>\n          <CircularProgress />\n        </Box>\n    )\n}\n*/\n    let listProduct = props.order.cards.map((item: MyCards, index: number)=>{\n        \n\n        //let orderItemsFind = props.order.orders_production.filter(o=> o.production.name == item.name)\n\n\n\n       /* let orderItems = null;\n        if(orderItemsFind.length > 0)\n        {\n            orderItems = orderItemsFind[0].orders_production_items;\n        }\n        console.log(orderItems)\n        */\n\n        let cardSections = new Array as IDataCardSection[];\n\n       \n        let etapSection = new Array as IDataCardVSM[];\n\n        for (let index = 0; index < item.sections.length; index++) \n        {\n            const element = item.sections[index];\n\n            if(index === 0)\n            {\n                etapSection.push(element);\n            }\n            else\n            {\n                if(element.etapNumeric === etapSection[0].etapNumeric)\n                {\n                    etapSection.push(element);\n                }\n                else\n                {\n                    let cardSection = new Object as IDataCardSection;\n                    cardSection.sections = etapSection.slice()\n                    cardSections.push(cardSection);\n\n                    etapSection = new Array as IDataCardVSM[];\n\n                    etapSection.push(element);\n                }\n            }\n\n        }\n\n        let cardSection = new Object as IDataCardSection;\n        cardSection.sections = etapSection.slice()\n        cardSections.push(cardSection);\n\n\n        return(\n            <Card key={index} sx={{marginBottom: '150px'}}>\n                <CardHeader\n                    action={\n                        <IconButton aria-label=\"settings\">\n                            <SettingsIcon />\n                        </IconButton>\n                    }\n                    title={'\\\"'+item.name + '\\\" | Количество: '+props.order.order.orders_production[index].quantity}\n                    sx={{fontWeight: 'bold',color: 'white', backgroundColor: '#575757'}}\n                    style={{color: 'white'}}\n                >\n                    \n                </CardHeader>\n                <CardContent sx={{backgroundColor: 'rgba(0, 0, 0, .03)'}}>\n                    {/*<ViewCard sections={cardSections} orderProduct={props.order.order.orders_production[index]}/> */}\n               </CardContent>\n            </Card>\n\n        )\n    })\n\n    return(\n       <div>\n           {listProduct}\n       </div>\n    )\n    \n}\n\n\nexport default ViewOrderCard;",["453","454"],"/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Card/ViewCard.tsx",["455","456","457","458","459","460","461","462"],"import React,{useState} from 'react'\n\nimport IDataCardSection from '../Data/IDataCardSection'\nimport IDataOrderItem from '../Data/IDataOrderItem'\nimport Divider from '@material-ui/core/Divider';\nimport IDataCardVSM from '../Data/IDataCardVSM';\nimport Paper from '@material-ui/core/Paper'\nimport ViewItemSection from './ViewItemSection'\nimport IDataOrder from '../Data/IDataOrder';\nimport IDataOrderPart from '../Data/IDataOrderPart';\nimport { SectionLogic_view } from '../Data/IDataOrder/IDataOrder';\n\n\n\nconst ViewOrderCard =  (props: {sectionLogic_views : SectionLogic_view[], orderProduct?:IDataOrderPart}) => {\n    //const [BDitems, setBDItem] = useState<IDataOrderItem[]>();\n\n    \n    let flagParalel = false;\n    let flagMaxInSectionItems = 0 as number;\n    \n    props.sectionLogic_views.map((item : SectionLogic_view,index: number) =>\n      {\n         if(item.sectionEtap_views.length > flagMaxInSectionItems )\n         {\n            flagMaxInSectionItems = item.sectionEtap_views.length \n         }\n\n         if(item.sectionEtap_views.length > 1)\n         {\n            flagParalel = true;\n         }\n      }\n    )\n    \n    let card = props.sectionLogic_views.map((item : SectionLogic_view,index: number) =>\n         <ViewItemSection key={index} orderProduct={props.orderProduct} sectionEtap_views={item.sectionEtap_views} numberSection={index} lastSection={props.sectionLogic_views.length} flagParalel={flagParalel} flagMaxInSectionItems={flagMaxInSectionItems}/>\n    )\n\n\n    return(\n       <div style={{display: 'grid', justifyContent: 'center', gridTemplateColumns: 'repeat('+props.sectionLogic_views.length+',1fr)'}}>\n          {card}\n       </div>\n    )\n\n}\n\n\nexport default ViewOrderCard;","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Card/ViewItemSection.tsx",["463","464","465","466","467","468"],"import React from 'react'\nimport IDataCardVSM from '../Data/IDataCardVSM'\nimport IDataOrderItem from '../Data/IDataOrderItem'\nimport IDataBufferVSM from '../Data/IDataBufferVSM'\nimport IDataEtapVSM from '../Data/IDataEtapVSM'\n\nimport Buffer from './Buffer'\nimport Etap from './Etap'\n\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt';\nimport IDataOrder from '../Data/IDataOrder'\nimport IDataOrderPart from '../Data/IDataOrderPart'\nimport { Buffer_view, Etap_view, OrderProduction_view, SectionEtap_view } from '../Data/IDataOrder/IDataOrder'\n\nconst ViewItemSection = (props:{sectionEtap_views: SectionEtap_view[],order?: OrderProduction_view, orderProduct?: IDataOrderPart, numberSection: number, lastSection: number, flagParalel: boolean,flagMaxInSectionItems: number}) =>\n{\n  const listSections = props.sectionEtap_views.map((item : SectionEtap_view, index: number,) =>{\n\n    let flag = props.flagParalel && props.sectionEtap_views.length <= props.flagMaxInSectionItems-1 && index == 0;\n    let delta = props.sectionEtap_views.length;\n    let percentPadding = (props.flagMaxInSectionItems-delta)*50 as any;\n    if(props.sectionEtap_views.length === props.flagMaxInSectionItems)\n    {\n      percentPadding = 0;\n    }\n\n    return (\n    <div key={index} style={{display: 'block ruby', paddingTop: flag ? (percentPadding+'%') as string: '', marginBottom: props.sectionEtap_views.length < 2 ? '':'50px'}}>\n      <Buffer buffer={item.buffer_view as Buffer_view} orderProduct={props.order as OrderProduction_view}/>\n      <div style={{verticalAlign: 'middle'}}>\n        <ArrowRightAltIcon style={{width: '50px', height: '100%'}}/>\n      </div>\n      <Etap etap={item.etap_view as Etap_view} orderProduct={props.order as OrderProduction_view}/>\n      {props.numberSection !==  props.lastSection ? \n                                                      <div style={{verticalAlign: 'middle'}}>\n                                                        <ArrowRightAltIcon style={{width: '50px', height: '100%'}}/>\n                                                      </div>\n                                                  :\n                                                      null\n      }\n    </div>)\n  })\n\n \n \n\n  return(\n    <div style={{display: listSections.length < 1 ?'block ruby': '', border: '2px dashed #cec9c9', marginRight: '20px', padding: '50px'}}>\n        {listSections}\n    </div>\n  )\n}\n\nexport default ViewItemSection;","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Card/Buffer.tsx",["469","470","471","472","473","474","475","476","477","478","479","480","481","482","483"],"import React,{useEffect, useState} from 'react'\nimport { styled } from '@material-ui/core/styles';\n\nimport Triangle from './Triangle'\n\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardContent from '@material-ui/core/CardContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport IDataBufferVSM from '../Data/IDataBufferVSM';\n\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport {IconButtonProps} from '@material-ui/core/IconButton'\n\nimport Typography from '@material-ui/core/Typography';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport IDataOrderItem from '../Data/IDataOrderItem'\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport axios from 'axios'\n\nimport ip from '../../global'\nimport IDatabufferVSMQueue from '../Data/IDatabufferVSMQueue';\nimport IDataOrder from '../Data/IDataOrder';\nimport OrderRole from '../Data/OrderRole';\nimport moment from 'moment'\nimport IDataOrderPart from '../Data/IDataOrderPart';\nimport { Buffer_view, OrderProductionItem, OrderProduction_view } from '../Data/IDataOrder/IDataOrder';\n\ninterface ExpandMoreProps extends IconButtonProps {\n    expand: boolean;\n}\n\n  \n\nconst Buffer = (props:{buffer: Buffer_view, orderProduct: OrderProduction_view}) => {\n\n    const Colors = { RED: 'red', GREEN: 'green', YELLOW: 'yellow', WHITE: 'white', Header: '#6495ed'};\n\n     const {\n      name,\n      max,\n      minHold,\n      valueDefault,\n      type,\n      value\n    } = props.buffer;\n\n    const ExpandMore = styled((props: ExpandMoreProps) => {\n        const { expand, ...other } = props;\n        return <IconButton {...other} />;\n      })(({ theme, expand }) => ({\n        //transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n          duration: theme.transitions.duration.shortest,\n        }),\n      }));\n\n    const [expanded, setExpanded] = React.useState(false);\n    const handleExpandClick = () => {\n        setExpanded(!expanded);\n    };\n\n    const [information, setInformation] = useState({\n      buffer: props.buffer as Buffer_view,\n      show: false\n    });\n\n    const [color,setColor] = useState('#d3d3d3');\n\n\n\nlet timeCircl = React.useRef();\nlet orderItems = [] as any;\n\n\nif(props.buffer.orderProductionItems != undefined)\n{\n\n    orderItems =  props.buffer.orderProductionItems.filter(o=> o._nameOrder === props.orderProduct.orderProductionItems[0]._nameOrder).map((item: OrderProductionItem, index: number) =>{\n    var time = moment.unix(item._tActual).utc().format('H:m:s')\n\n\n    if(props.buffer.orderProductionItems.length > 0 )\n    {\n      //timeCircl.current = props.buffer.orderProductionItems[props.buffer.orderProductionItems.length-1].currentOrderItems.tActual as any\n      //timeCircl.current  = parseInt(item._tActual,10)\n    }\n\n    return(\n      <div key={index} style={{backgroundColor: color}}>\n            <p style={{display: 'flex', justifyContent:'center', fontWeight: 'bold'}} >{props.orderProduct.orderProductionItems[0]._nameOrder}</p>\n            <div style={{display: 'flex', justifyContent:'space-around'}} >\n              <p>№ Текущего заказа</p>\n              <p>Всего заказов</p>\n            </div>\n            <div style={{display: 'flex', justifyContent:'space-around'}} >\n              <p >{item._part}</p>\n              <p >{props.orderProduct.orderProductionItems.length}</p>\n            </div>\n            <p style={{display: 'flex', justifyContent:'center'}} >Общее время</p>\n            <p style={{display: 'flex', justifyContent:'center', fontWeight: 'bold'}}>{time} сек</p>\n      </div>\n    )\n  })\n}\n\n \n\n    return(\n        <Card sx={{ minWidth: '150px', maxWidth: '250px',verticalAlign: 'middle', textAlign: 'center', wordWrap: 'break-word'}}>\n            <CardHeader\n                action={\n                    <IconButton aria-label=\"settings\">\n                    <SettingsIcon />\n                    </IconButton>\n                }\n                title={name}\n                sx={{fontWeight: 'bold', color:'white', backgroundColor: Colors.Header ,paddingBottom: '0px'}}>\n            </CardHeader>\n            <div  style={{fontWeight: 'bold',fontSize:'1rem',backgroundColor: Colors.Header,color: 'white', display: 'flex', justifyContent: 'space-around'}}>\n              <p>Время цикла:</p>\n              <p>{timeCircl.current}</p>\n            </div>\n            <CardContent style={{padding: 1}}>\n                    <p style={{display: 'flex', justifyContent:'center', margin: 0}}> {max}</p>\n                    <Triangle buff={{name: name, minHold: minHold, max: max,value: value,valueDefault: valueDefault} as IDataBufferVSM}/>\n            </CardContent>\n            \n            <CardActions disableSpacing sx={{padding: 0, margin: 0}}>\n                <ExpandMore\n                    expand={expanded}\n                    onClick={handleExpandClick}\n                    aria-expanded={expanded}\n                    //aria-label=\"show more\"\n                >\n                  <p> {orderItems.length}</p>\n                  <ExpandMoreIcon  style={{transform: !expanded ? 'rotate(0deg)' : 'rotate(180deg)'}}/>\n                </ExpandMore>\n            </CardActions>\n            <Collapse sx={{margin: 0, padding: 0, display: 'grid'}} in={expanded} timeout=\"auto\" collapsedSize={0} unmountOnExit>\n              {orderItems}\n            </Collapse>\n        </Card>\n    )\n\n}\n\n\nexport default Buffer;","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Card/Etap.tsx",["484","485","486","487","488","489","490","491","492","493","494","495","496","497","498","499","500"],"import React,{useState} from 'react'\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport IconButton from '@material-ui/core/IconButton'\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport IDataBufferVSM from '../Data/IDataBufferVSM';\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Divider from '@material-ui/core/Divider'\n\nimport IDataEtapVSM from '../Data/IDataEtapVSM'\nimport IUser from '../Data/IUser';\nimport IDataOrderItem from '../Data/IDataOrderItem';\nimport IDataOrder from '../Data/IDataOrderPart';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport IDataEtapSection from '../Data/IDataEtapSection';\nimport IDataOrderPart from '../Data/IDataOrderPart';\nimport { Etap_view, OrderProduction_view, User_view } from '../Data/IDataOrder/IDataOrder';\nimport moment from 'moment'\n\ninterface IDataResourceOrder\n{\n    user: IUser;\n    orderItem: IDataOrderItem,\n}\n\nconst Etap =  (props:{etap: Etap_view, orderProduct: OrderProduction_view}) => {\n\n    const Colors = { RED: 'red', GREEN: 'green', YELLOW: 'yellow', WHITE: 'white', Header: '#6495ed'};\n\n    const \n    {\n        name\n    } = props.etap\n\n    const [information, setInformation] = useState({\n        resources: new Array as IDataResourceOrder[],\n        etap: new Object as IDataBufferVSM,\n        show: true\n      });\n\n      \n\n\n    const listResource = props.etap.users?.map((item: User_view, i: number)=>{\n\n      let show = false;\n      let findItemInProduct = undefined;\n      if(item.currentOrderItems != undefined)\n      {\n\n       findItemInProduct = props.orderProduct.orderProductionItems?.filter(o=> o._nameOrder === item.currentOrderItems._nameOrder)\n\n       if(findItemInProduct.length === 0)\n       {\n           //Не нешли\n           show = false\n           \n       }\n       else\n       {\n         show = true;\n       }\n      }\n\n\n     \n\n    /*  if(item.currentOrderItems === undefined)\n      {\n        \n      }\n      else\n      {\n      \n\n       \n      }*/\n\n      \n\n\n      if(item.name === 'Рабочий_8')\n      {\n        console.log(\" fdf = \",item.userRole);\n      }\n\n        return  (\n            <div key={i} style={{padding: '0px', margin: '0px'}}>\n            <div  style={{fontWeight: 'bold',fontSize:'1rem', backgroundColor: \"#7366bd\", padding: '1px',textAlign: 'center', color: 'white', /*display: 'flex', justifyContent: 'space-between'*/}} >\n              <p>{item.name}</p>\n              <p>Время работы: {item.defaultTimeCircle} c</p>\n            </div>\n                    <div>\n                    {\n                       show && item.currentOrderItems ? \n                        <div style={{padding: 0, margin: 0,borderRight: '1px solid rgba(0, 0, 21, 0.125)', backgroundColor: Colors.YELLOW}}>\n                          <p style={{display: 'flex', justifyContent:'center', fontWeight: 'bold'}} >{props.orderProduct.orderProductionItems[0]._nameOrder}</p>\n                          <div style={{display: 'flex', justifyContent:'space-around'}} >\n                            <p>№ Текущего заказа</p>\n                            <p>Всего заказов</p>\n                          </div>\n                         <div style={{display: 'flex', justifyContent:'space-around'}} >\n                            <p>{item.currentOrderItems._part}</p>\n                            <p>{props.orderProduct.orderProductionItems.length}</p>\n                          </div>\n                          <p style={{display: 'flex', justifyContent:'center'}} >Время выполнения</p>\n                          <p style={{display: 'flex', justifyContent:'center', fontWeight: 'bold'}}>{item.tActual}</p>\n  \n                          <p style={{display: 'flex', justifyContent:'center'}} >Общее время заказа</p>\n                          <p style={{display: 'flex', justifyContent:'center', fontWeight: 'bold'}}>{moment.unix(item.currentOrderItems._tActual).utc().format('HH:mm:ss')}</p>\n                        </div>\n                      :\n                      \n                      item.currentOrderItems ? \n                      <div style={{padding: 0, margin: 0,borderRight: '1px solid rgba(0, 0, 21, 0.125)', backgroundColor: Colors.YELLOW}}>\n                         <p style={{display: 'flex', justifyContent:'center'}} >Занят другим заказом</p>\n                      </div>\n                      :\n                      item?.userRole  === 2 ?\n                        <div style={{padding: 0, margin: 0,borderRight: '1px solid rgba(0, 0, 21, 0.125)', backgroundColor: Colors.YELLOW}}>\n                          <p style={{display: 'flex', justifyContent:'center'}} >Занят на другом этапе</p>\n                        </div>\n                        :\n                        \n                        item?.userRole === 3 ? \n                              <div style={{padding: 0, margin: 0,borderRight: '1px solid rgba(0, 0, 21, 0.125)', backgroundColor: Colors.YELLOW}}>\n                              <p style={{display: 'flex', justifyContent:'center'}} >Ожидает деталей в буфер</p>\n                            </div>\n                            :\n                            <div style={{padding: 0, margin: 0,borderRight: '1px solid rgba(0, 0, 21, 0.125)', backgroundColor: Colors.GREEN}}>\n                                <p style={{display: 'flex', justifyContent:'center'}} >Свободен</p>\n                            </div>\n\n\n                    }\n                    </div>\n  \n              </div>\n        )\n    })\n    \n    return(\n        <Card sx={{ maxWidth: 250,verticalAlign: 'middle', textAlign: 'center', wordWrap: 'break-word' }}>\n            <CardHeader\n            action={\n                <IconButton aria-label=\"settings\">\n                  <SettingsIcon />\n                </IconButton>\n              }\n            title={name}\n            sx={{fontWeight: 'bold', backgroundColor: Colors.Header,color: 'white',paddingBottom: '0px'}}>\n\n            </CardHeader>\n            <div  style={{fontWeight: 'bold',fontSize:'1rem',backgroundColor: Colors.Header,color: 'white', display: 'flex', justifyContent: 'space-around'}}>\n              <p>Время цикла:</p>\n              <p>{props.etap.defaultTimeCircle}</p>\n            </div>\n            <CardContent sx={{padding: '0px', margin: '0px'}}>\n                {listResource}\n            </CardContent>\n        </Card>\n    )\n\n}\n\n\nexport default Etap;","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Card/Triangle.tsx",["501","502"],"import { ExecException } from \"child_process\";\nimport React from \"react\";\nimport { useState,useEffect } from \"react\";\n//import styled from 'styled-components'\n\nimport IDataBufferVSM from \"../Data/IDataBufferVSM\";\n\n\nconst Triangle = (props: {\n    buff: IDataBufferVSM\n}) =>\n{\n    let max = props.buff.max || 100;\n    let height = 100;\n    let width = 100;\n    let min = props.buff.minHold || 1;\n    \n    const [value,setValue] = useState(props.buff.value)\n\n    const findPoint =(percent : number,x: number,y: number) : number=>\n    {\n        let H_pointPx = (y*percent)/100 // Нашли сколько же пикселей занимает по высоте наши проценты\n        let pointPx = H_pointPx // находим точку по высоте если считать снизу\n\n        return findPointSin(pointPx,x/2,y) // находим длину по X\n    }\n\n    const findPointSin = (b : number,a1: number,b1: number  ) : number =>\n    {\n        return (b*a1)/b1\n    }\n\n    const  ValueToPercent = (value: number) : number =>\n    {\n      let percent = (value*100)/max\n      return percent\n    }\n\n\n    const returnStr=()=>\n    {\n        let newHeight = height\n\n        let x = width;\n        let y = newHeight-20; //let y = this.state.height\n        let percent = ValueToPercent(value as number)\n        let point_Y = y - (y*percent)/100;\n        let point_X = findPoint(percent,x,y)\n        let percentByze = 10;\n\n        let percentByze_new = percentByze*percent/100\n        \n        percentByze -=percentByze_new;\t\n\n        let byze = point_Y+((y*percentByze)/100) // плюс 10%\n        \n\n        let point_Y_2 = point_Y\n        let point_X_2 = x - point_X\n\n        return (\"M0,\"+y+\" \"+point_X+\",\"+point_Y+\" Q \"+x/2+\",\"+byze+\" \"+point_X_2+\",\"+point_Y_2+\" \"+point_X_2+\",\"+point_Y_2+\" \"+x+\",\"+y+\" Q 50,100 0,\"+y+\" 0,\"+y)\n    }\n\n    const handleOnMouseMove = ()=>{\n        //console.log(\"Trignale =\",this.state.percent)\n        //this.setState({left: this.state.left+1})\n    }\n\n      useEffect(() => {\n\n        setValue(props.buff.value as number);\n        /*const id = setInterval(() => {\n\n            if(value > max)\n            {\n                setValue(0);\n            }\n            else\n            {\n                setValue(value+1);\n            }\n            \n        }, 100);\n        return () => clearInterval(id);*/\n      }, [props.buff.value]);\n\n      \n\n\t\tlet viewBox = \"0 0 \"+width+\" \"+height;\n\t\tlet pointsPolygon = \"M0,\"+height+\" \"+width/2+\",0 \"+width+\" \"+height;\n\t\tlet D = returnStr()\n\n\t\tlet minPrecent = ValueToPercent(min)\n\n\t\tlet color = \"green\"\n\t\t\n\t\tif(value === 0)\n\t\t{\n\t\t\tcolor = \"lightgray\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(value as number < min)\n\t\t\t{\n\t\t\t\tcolor = \"red\"\n\t\t\t}\n\t\t}\n\n\t\tlet changeText = value as number > (max/2-max/15)\n\n\n\n\t\tlet PxMin_X = findPoint(minPrecent,width,height) \n\t\t//let D_min = \"M0,\"+PxMin\n\t\tlet newHeight = height-20\n\t\tpointsPolygon = \"M0,\"+newHeight+\" \"+width/2+\",0 \"+width+\" \"+newHeight+\" Q 50,100 0,\"+newHeight+\" 0,\"+newHeight;\n\t\n        return (\n\t\t\t<div onMouseMove={handleOnMouseMove} style={{position: 'relative',display: 'flex',justifyContent:'center'}}>\n\t\t\t\t<p style={{position: 'absolute',\n\t\t\t\t\tcolor: changeText ? 'white' : \"black\",\n\t\t\t\t\tfontWeight: 600,\n\t\t\t\t\ttop: '50%'}}>\n\t\t\t\t\t{value}\n\t\t\t\t</p>\n\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" width={width} height={height} viewBox={viewBox} fill=\"none\" stroke=\"#000000\" strokeWidth=\"0.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n\t\t\t\t  <path d={pointsPolygon} fill=\"lightgray\" stroke=\"lightgray\" strokeWidth=\"1\"></path>\n\t\t\t\t  <g><path d={D} fill={color} stroke={color}></path></g>\n\t\t\t\t</svg>\n\t\t\t</div>\n        )\n}\n\nexport default Triangle;","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Data/IDataOrderItem.tsx",["503"],"/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Dialog/DialogAddOrder.tsx",["504","505","506","507","508","509","510","511","512","513","514","515"],"import * as React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport PersonIcon from '@material-ui/icons/Person';\nimport AddIcon from '@material-ui/icons/Add';\nimport Typography from '@material-ui/core/Typography';\nimport { blue } from '@material-ui/core/colors';\n\nimport TextField from '@material-ui/core/TextField';\n\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Transition from './Transition'\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport IDialogAddOrder from '../Data/Dialog/IDialogAddOrder'\nimport IDialogAddOrderItem from '../Data/Dialog/IDialogAddOrderItem'\nimport IconButton from '@mui/material/IconButton';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\n\nimport Divider from '@mui/material/Divider';\n\nexport interface SimpleDialogProps {\n  open: boolean;\n  selectedValue: IDialogAddOrder;\n  onClose: (value: IDialogAddOrder) => void;\n  addOrder: (value: IDialogAddOrder) => void\n}\n\n\n\nfunction SimpleDialog(props: SimpleDialogProps) {\n  const { onClose, selectedValue, open,addOrder } = props;\n\n  const [newOrder, setNewOrder] = React.useState<IDialogAddOrderItem[]>();\n  const [order, setOrder] = React.useState<IDialogAddOrder>();\n\n  const handleClose = () => {\n    onClose(selectedValue);\n\n\n    let update = {...order, products: newOrder as  IDialogAddOrderItem[]} as IDialogAddOrder\n    setOrder(update)\n\n\n    addOrder(update)\n  };\n\n  \n  const handleChangeName = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setOrder({...order, name: event.target.value} as IDialogAddOrder)\n  };\n\n  const handleChangePriority = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setOrder({...order, priority: Number(event.target.value)} as IDialogAddOrder)\n  };\n\n  return (\n    <Dialog open={open}>\n      <DialogTitle>Формирование заказа\n      \n      </DialogTitle>\n\n      <TextField\n            onChange={handleChangeName}\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Название заказа\"\n            type=\"name\"\n            fullWidth\n            variant=\"standard\"\n            inputProps={{min: 0, style: { textAlign: 'center' }}} // the change is here\n      />\n      <TextField\n            onChange={handleChangePriority}\n            autoFocus\n            margin=\"dense\"\n            id=\"priority\"\n            label=\"Приоритет\"\n            type=\"priority\"\n            fullWidth\n            variant=\"standard\"\n            inputProps={{min: 0, style: { textAlign: 'center' }}} // the change is here\n      />\n\n      <Transition setNewOrder={setNewOrder}/>\n      <DialogActions>\n          <Button onClick={handleClose}>Отменить</Button>\n          <Button onClick={handleClose} autoFocus>\n            Сформировать\n          </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport default function DialogAddOrder(props:{addOrder: (value: IDialogAddOrder) => void}) {\n  const [open, setOpen] = React.useState(false);\n  const [selectedValue, setSelectedValue] = React.useState<IDialogAddOrder>();\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n\n  return (\n    <div style={{width: '100%'}}>\n      <IconButton \n                color=\"inherit\"\n                aria-label=\"open drawer\"\n                edge=\"start\"\n                sx={{ mr: 2, left: '49.5%'}}\n                onClick={handleClickOpen}\n                >\n                <AddCircleOutlineIcon/>\n      </IconButton>\n\n      <SimpleDialog\n        selectedValue={selectedValue as IDialogAddOrder}\n        open={open}\n        onClose={handleClose}\n        addOrder={props.addOrder}\n      />\n    </div>\n  );\n}\n\n/*\n\n    <div>\n      <Typography variant=\"subtitle1\" component=\"div\">\n        Selected: {selectedValue}\n      </Typography>\n      <br />\n      <Button variant=\"outlined\" onClick={handleClickOpen}>\n        Open simple dialog\n      </Button>\n      <SimpleDialog\n        selectedValue={selectedValue}\n        open={open}\n        onClose={handleClose}\n      />\n    </div>\n\n*/",["516","517"],"/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Dialog/Transition.tsx",["518","519","520","521","522","523","524","525"],"import * as React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { TransitionGroup } from 'react-transition-group';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\n\nimport DialogAddOrderItem from './DialogAddOrderItem';\nimport IDataProduction from '../Data/IDataProduction';\n\nimport IDialogAddOrderItem from '../Data/Dialog/IDialogAddOrderItem'\nimport IDialogAddOrder from '../Data/Dialog/IDialogAddOrder'\n\nconst ORDERS = new Array() as IDialogAddOrderItem[]\n\ninterface RenderItemOptions {\n  item: IDialogAddOrderItem;\n  handleRemoveProduct: (item: IDialogAddOrderItem) => void;\n}\n\nfunction renderItem({ item, handleRemoveProduct }: RenderItemOptions) {\n  if(item ===  undefined || item === null)\n  {\n    return ;\n  }\n  return (\n    <ListItem\n      secondaryAction={\n        <IconButton\n          edge=\"end\"\n          aria-label=\"delete\"\n          title=\"Delete\"\n          onClick={() => handleRemoveProduct(item)}\n        >\n          <DeleteIcon />\n        </IconButton>\n      }\n    >\n      <ListItemText primary={item.name} />\n      <ListItemText primary={'('+item.quantity+')'} />\n    </ListItem>\n  );\n}\n\nexport default function Transition(props:{setNewOrder: (value: IDialogAddOrderItem[]) => void}) {\n  const [fruitsInBasket, setFruitsInBasket] = React.useState(new Array as IDialogAddOrderItem[]);\n\n  const handleAddProduct= (item: IDialogAddOrderItem) => {\n    setFruitsInBasket((prev) => [...prev, item]);\n  };\n\n  props.setNewOrder(fruitsInBasket);\n  \n  const handleRemoveProduct = (item: IDialogAddOrderItem) => {\n    setFruitsInBasket((prev) => [...prev.filter((i) => i.name !== item.name)]);\n  };\n\n  const addOrderButton = (\n    <DialogAddOrderItem handleAddProduct={handleAddProduct}/>\n  );\n\n  return (\n    <div>\n      {addOrderButton}\n      <Box sx={{ mt: 1 }}>\n        <List>\n          <TransitionGroup>\n            {fruitsInBasket.map((item,index) => (\n              <Collapse key={index}>\n                {renderItem({ item, handleRemoveProduct })}\n              </Collapse>\n            ))}\n          </TransitionGroup>\n        </List>\n      </Box>\n    </div>\n  );\n}","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Dialog/DialogAddOrderItem.tsx",["526","527","528","529","530","531","532","533","534","535","536","537","538","539","540"],"import * as React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport PersonIcon from '@material-ui/icons/Person';\nimport AddIcon from '@material-ui/icons/Add';\nimport Typography from '@material-ui/core/Typography';\nimport { blue } from '@material-ui/core/colors';\n\nimport TextField from '@material-ui/core/TextField';\n\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport SelectList from './SelectList'\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport IDialogAddOrderItem from '../Data/Dialog/IDialogAddOrderItem'\n\nexport interface SimpleDialogProps {\n  open: boolean;\n  selectedValue: IDialogAddOrderItem;\n  onClose: (value: IDialogAddOrderItem) => void;\n}\n\n\n\n\nfunction SimpleDialog(props: SimpleDialogProps) {\n  const { onClose, selectedValue, open } = props;\n\n  const [newData, setNewData] = React.useState<IDialogAddOrderItem>();\n\n  const handleClose = () => {\n    onClose(newData as IDialogAddOrderItem);\n  };\n\n  const handleCloseCansel = () => {\n    onClose(new Object as IDialogAddOrderItem);\n  };\n\n  const handleListItemClick = (value: IDialogAddOrderItem) => {\n    onClose(value);\n  };\n\n  const setData = (product: string, q: number) =>{\n\n    let newObject = {\n      name: product,\n      quantity: q,\n    } as IDialogAddOrderItem\n\n    //console.log(\"value 2 = \", newObject)\n    setNewData(newObject);\n  }\n\n  return (\n    <Dialog open={open}>\n      <DialogTitle>Добавить продукт</DialogTitle>\n        <SelectList\n        data={selectedValue}\n        setData={setData}\n        />\n      <DialogActions>\n          <Button onClick={handleCloseCansel}>Отменить</Button>\n          <Button onClick={handleClose} autoFocus>\n            Добавить\n          </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport default function DialogAddOrderItem(props:{handleAddProduct: (value: IDialogAddOrderItem) => void}) {\n  const [open, setOpen] = React.useState(false);\n  const [selectedValue, setSelectedValue] = React.useState<IDialogAddOrderItem>();\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (value: IDialogAddOrderItem) => {\n    setOpen(false);\n\n    if(value != undefined)\n    {\n      if(value.name != undefined || value.name != null)\n      {\n        setSelectedValue(value);\n        props.handleAddProduct(value)\n      }\n    }\n\n    //console.log(\"value = \", value)\n  };\n\n  return (\n    <div style={{width: '100%'}}>\n      <Button \n      variant=\"outlined\"\n      onClick={handleClickOpen}\n      style={{width: '100%',display:'flext', justifyContent: 'space-around'}}\n      endIcon={<AddCircleIcon />}>\n        Добавить заказ\n      </Button>\n\n      <SimpleDialog\n        selectedValue={selectedValue as IDialogAddOrderItem}\n        open={open}\n        onClose={handleClose}\n      />\n    </div>\n  );\n}\n\n/*\n\n    <div>\n      <Typography variant=\"subtitle1\" component=\"div\">\n        Selected: {selectedValue}\n      </Typography>\n      <br />\n      <Button variant=\"outlined\" onClick={handleClickOpen}>\n        Open simple dialog\n      </Button>\n      <SimpleDialog\n        selectedValue={selectedValue}\n        open={open}\n        onClose={handleClose}\n      />\n    </div>\n\n*/","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Dialog/SelectList.tsx",["541","542","543"],"import * as React from 'react';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport serverApiHost,{port} from \"../../global\";\nimport axios from 'axios'\nimport CircularProgress from '@mui/material/CircularProgress';\nimport IDialogAddOrderItem from '../Data/Dialog/IDialogAddOrderItem'\nimport { useActionProduction } from '../../hooks/useActionProductions';\nimport { useTypedSelector } from '../../hooks/leftMenuSelector';\nimport IDataOrder from '../Data/IDataOrder'\n/*const currencies = [\n  {\n    name: 'Продукт 1',\n    quantity: 1\n  },\n  {\n    name: 'Продукт 2',\n    quantity: 1\n  },\n  {\n    name: 'Продукт 3',\n    quantity: 1\n  },\n  {\n    name: 'Продукт 4',\n    quantity: 1\n  },\n];*/\n\nexport default function SelectList(props:{data: IDialogAddOrderItem, setData: (product: string, q: number) => void;}) {\n  const [product, setProduct] = React.useState<string>('');\n  const [quantity, setQuantity] = React.useState<number>(0);\n\n  //const {productions, loading} = useTypedSelector(state => state.productions);\n  //const {getAllProducts} = useActionProduction()\n\n  const [productions,SetProductions] = React.useState<IDataOrder[]>();\n  const [loading, SetLoading] = React.useState(false);\n\n  const getAllProducts = async () =>{\n    const response = await axios.get('http://'+serverApiHost+':'+port+'/api/cardVSM/getAllProducts')\n\n    if(response.status === 200)\n    {\n        let data = response.data as IDataOrder[];\n        console.log(\"Loading finish getAllProducts\")\n        console.log(data);\n\n        SetProductions(data);\n        SetLoading(true);\n    }\n\n  }\n\n\n\n  React.useEffect(() => {\n    getAllProducts();   \n  },[])\n    \n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    props.setData(event.target.value,quantity) \n    setProduct(event.target.value);\n    \n  };\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>)=>{      \n      const re = /^[0-9\\b]+$/;    \n      if (e.target.value === '' || re.test(e.target.value)) \n      {        \n        let n = Number(e.target.value);\n        props.setData(product,n)     \n        setQuantity(n)\n        \n      }\n   }\n   \n\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        '& .MuiTextField-root': { m: 1, width: '25ch' },\n      }}\n      noValidate\n      autoComplete=\"off\"\n    >\n      <div>\n      <TextField\n          id=\"standard-select-currency\"\n          select\n          label=\"Выбирите\"\n          value={product}\n          onChange={handleChange}\n          helperText=\"Выбирите продукт\"\n          variant=\"standard\"\n          inputProps={{min: 0, style: { textAlign: 'center' }}} // the change is here\n        >\n          \n          {productions?.length === 0 ? \n            <Box sx={{ display: 'flex', justifyContent: 'center' }}>\n              <CircularProgress />\n            </Box>\n          : productions?.map((option, index) => (\n            <MenuItem key={index} value={option.name}>\n              {option.name}\n            </MenuItem>\n          ))}\n        </TextField>\n        <TextField\n            onChange={onChange}\n            autoFocus\n            margin=\"dense\"\n            id=\"quantity\"\n            label=\"Количество\"\n            type=\"quantity\"\n            fullWidth\n            variant=\"standard\"\n            value={quantity > 0 ? quantity: ''}\n            inputProps={{min: 0, style: { textAlign: 'center' }}} // the change is here\n          />\n      </div>\n    </Box>\n  )}","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Data/Dialog/IDialogAddOrder.tsx",[],"/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/store/store.ts",[],"/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/store/reducers/index.ts",[],"/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/store/reducers/useLeftMenuReducer.ts",["544","545","546"],"import {useLeftMenuType,useLeftMenuAction,useLeftMenuActionType } from '../../type/useLeftMenuType'\n\nconst initialState: useLeftMenuType ={\n    drawerWidth: 240,\n    show: false,\n    error: null\n}\n\nexport const  useLeftMenuReducer =(state = initialState, action:useLeftMenuAction): useLeftMenuType => {\n    switch(action.type)\n    {\n        case useLeftMenuActionType.LEFT_SHOW:\n            return {...state, show: true}\n        break;\n        case useLeftMenuActionType.LEFT_HIDDEN:\n            return {...state, show: false}\n        break;\n        case useLeftMenuActionType.SET_WIDTH:\n            return {...state, drawerWidth: action.payload}\n        break;\n        default:\n            return state;\n    }\n}\n\n","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/type/useLeftMenuType.tsx",[],"/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/hooks/leftMenuSelector.tsx",[],"/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/hooks/useLeftMenuAction.tsx",[],"/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/store/action-creator/index.tsx",["547"],"import * as useActionLeftMenu from \"./useActionLeftMenu\";\nimport * as useActionOrders from \"./useActionLeftMenu\";\nimport * as useActionsCardVSM from \"./useActionsCardVSM\";\n\nexport default{\n    ...useActionLeftMenu,\n    ...useActionOrders,\n    ...useActionsCardVSM,\n}","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/store/action-creator/useActionLeftMenu.tsx",[],"/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Pages/PageOrderInWork.tsx",["548"],"import  React from 'react'\nimport CustomizedAccordions from '../CustomizedAccordions'\nimport { Switch, Route } from 'react-router-dom'\n\nconst PageOrderInWork = () =>\n{\n    return (\n        <Route exact path='/orderInWork' component={CustomizedAccordions}/>\n    ) \n}\n\nexport default PageOrderInWork;","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Pages/PageOrdersDefault.tsx",["549","550","551","552","553","554","555","556","557","558"],"import { Grid } from '@material-ui/core';\n\nimport  React, { useEffect,useState } from 'react'\nimport CardOrderInDefault from '../Card/Pages/CardOrderInDefault';\n\nimport { experimentalStyled as styled } from '@mui/material/styles';\nimport Paper from '@mui/material/Paper';\n\nimport {IDataColorOrderInDefault} from '../Data/DataCardOrderInDefault/IDataColorOrderInDefault'\n\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport IconButton from '@mui/material/IconButton';\nimport { useActionOrders } from '../../hooks/useActionOrders';\nimport { useTypedSelector } from '../../hooks/leftMenuSelector';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { Box } from '@material-ui/system';\nimport IDataOrder from '../Data/IDataOrder';\nimport OrderRole from '../Data/OrderRole';\n\nimport DialogAddOrder from '../Dialog/DialogAddOrder'\nimport IDialogAddOrder from '../Data/Dialog/IDialogAddOrder'\nimport IDataProduction from '../Data/IDataProduction';\n\nconst Item = styled(Paper)(({ theme }) => ({\n    ...theme.typography.body2,\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  }));\n\n\n\nconst PageOrdersDefault = () =>\n{\nconst {orders, loading} = useTypedSelector(state => state.orders);\nconst {ordersLoading,orderAdd} = useActionOrders()\n\nuseEffect(() => {\n    const timer = setTimeout(() => ordersLoading(), 800);\n    return () => {\n      clearTimeout(timer);\n    };   \n},[orders]) //orders\n\n\n\nconst [newOrder,setOrder] = useState<IDialogAddOrder>();\n\nconst addOrder= (value : IDialogAddOrder) =>\n{\n    console.log(\"NEW = \", value)\n\n    if(value.name == undefined)\n    {\n        return ;\n    }\n    orderAdd(value);\n    ordersLoading();\n}\n\n\nconst even = (n: number) => !(n % 2);\n\n//Array.from(Array(10))\nconst listData =  orders.map((item: IDataOrder, index)=>{\n\n\n    if(item === undefined)\n    {\n        return ;\n    }\n\n    let OrderColor = IDataColorOrderInDefault.NotWork;\n    switch(item.orderRole)\n    {\n        case OrderRole.Actual:\n            OrderColor = IDataColorOrderInDefault.NotWork\n            break;\n        case OrderRole.Work:\n            OrderColor = IDataColorOrderInDefault.InWork\n            break;\n        case OrderRole.Archive:\n            OrderColor = IDataColorOrderInDefault.Done\n            break;\n        default:\n            break;\n    }\n\n   return (\n       <Grid item xs={12} sm={6} md={4} lg={4} xl={3} key={index}>\n           <CardOrderInDefault OrderColor={OrderColor} data={item}/>\n       </Grid>\n   )\n})\n\n\nif(loading)\n{\n    return (\n        <Box sx={{ display: 'flex', justifyContent: 'center' }}>\n          <CircularProgress />\n        </Box>\n    )\n}\n\n\n\n    return (\n            <div>\n            <DialogAddOrder addOrder={addOrder}/>\n            <Box sx={{display: 'flex'}}>\n                <Grid container spacing={2}>\n                    {listData}\n                </Grid>\n            </Box>\n            </div>\n    ) \n}\n\nexport default PageOrdersDefault;\n\n//xs={12} sm={6} md={4} lg={4} xl={3}\n//xs={12} md={3}","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Pages/PageOrderInArchive.tsx",["559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","576","577"],"import  React, { useEffect,useState } from 'react'\nimport axios from 'axios'\nimport serverApiHost,{port} from \"../../global\";\n\nimport { Grid } from '@material-ui/core';\nimport CardOrderInNewAlgoritmDefault from '../Card/Pages/CardOrderInNewAlgoritmDefault';\n\nimport { experimentalStyled as styled } from '@mui/material/styles';\nimport Paper from '@mui/material/Paper';\n\nimport {IDataColorOrderInDefault} from '../Data/DataCardOrderInDefault/IDataColorOrderInDefault'\n\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport IconButton from '@mui/material/IconButton';\nimport Button from '@mui/material/Button';\n\nimport { useActionOrders } from '../../hooks/useActionOrders';\nimport { useTypedSelector } from '../../hooks/leftMenuSelector';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { Box } from '@material-ui/system';\nimport IDataOrder from '../Data/IDataOrder';\nimport OrderRole from '../Data/OrderRole';\n\nimport DialogAddOrder from '../Dialog/DialogAddOrder'\nimport IDialogAddOrder from '../Data/Dialog/IDialogAddOrder'\nimport IDataProduction from '../Data/IDataProduction';\n\n\n\n/////////////////////////////////\nimport Order_view from '../Data/IDataOrder/IDataOrder'\nimport DialogAddOrderNewAlgoritm from '../Dialog/DialogAddOrderNewAlgoritm';\nimport CardOrderInNewAlgoritmArchive from '../Card/Pages/CardOrderInNewAlgoritmArchive';\n\nimport TableView from '../PageExample/DemoArchive'\nimport ToggleButtonMy from '../PageExample/ToggleButtonMy'\n\n///////////////////////////////////\n\nconst Item = styled(Paper)(({ theme }) => ({\n    ...theme.typography.body2,\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  }));\n\n\n\nconst PageOrderInArchive = () =>\n{\n\nconst [orders, SetOrders] = useState<Order_view[]>();\nconst [loading, SetLoading] = useState(true);\n\n\nconst [alignment, setAlignment] = React.useState('left');\n\n  const handleChange = (\n    event: React.MouseEvent<HTMLElement>,\n    newAlignment: string,\n  ) => {\n\n    console.log(\"AAAAA\");\n    setAlignment(newAlignment);\n\n  };\n\n\nconst ordersLoading = async () => {\n    const response = await axios.get('http://'+serverApiHost+':'+port+'/api/cardVSM/getallOrdersInArchive')\n    if(response.status != 200)\n    {\n      return ;\n    }\n    let content = response.data as any;\n    let ordersFromServer =  content.orders as Order_view[];\n    SetOrders(ordersFromServer);\n    SetLoading(false);\n}\n\nconst orderAdd = async (newOrder : IDialogAddOrder) =>{\n    const response = await axios.post('http://'+serverApiHost+':'+port+'/api/cardVSM/addorderprepair',JSON.stringify(newOrder),{\n        headers: {\n          // Overwrite Axios's automatically set Content-Type\n          \"Access-Control-Allow-Origin\": \"*\",\n          'Content-Type': 'application/json'\n        }\n      })\n}\n\n\nuseEffect(() => {\n    const timer = setTimeout(async () => await ordersLoading(), 1000);\n    return () => {\n      clearTimeout(timer);\n    };   \n},[orders])\n\n\n\nconst [newOrder,setOrder] = useState<IDialogAddOrder>();\n\nconst addOrder= (value : IDialogAddOrder) =>\n{\n    //console.log(\"NEW = \", value)\n    if(value.name == undefined || value.products.length === 0)\n    {\n        //console.log(\"НЕТ \")\n        return ;\n    }\n    orderAdd(value);\n}\nconst even = (n: number) => !(n % 2);\n\n\nif(loading)\n{\n    return (\n        <Box sx={{ display: 'flex', justifyContent: 'center' }}>\n          <CircularProgress />\n        </Box>\n    )\n}\n\n\n\nconst listData =  orders?.map((item: Order_view, index)=>{\n\n    if(item === undefined)\n    {\n        return ;\n    }\n\n    let OrderColor = IDataColorOrderInDefault.NotWork;\n    switch(item.orderRole)\n    {\n        case OrderRole.Actual:\n            OrderColor = IDataColorOrderInDefault.NotWork\n            break;\n        case OrderRole.Work:\n            OrderColor = IDataColorOrderInDefault.InWork\n            break;\n        case OrderRole.ArchiveGood:\n            OrderColor = IDataColorOrderInDefault.DoneGood\n            break;\n        case OrderRole.ArchiveBad:\n            OrderColor = IDataColorOrderInDefault.DoneBad\n            break;\n        default:\n            break;\n    }\n\n   return (\n       <Grid item xs={12} sm={6} md={4} lg={4} xl={3} key={index}>\n           <CardOrderInNewAlgoritmArchive OrderColor={OrderColor} data={item}/>\n       </Grid>\n   )\n})\n\n\n\n\n    return (\n            <div>\n                <Box > {/*sx={{margin:'0px 10px 0px 10px'}}*/}\n                    <div style={{display: 'flex', justifyContent: 'space-between',alignItems: 'center', padding: '0px 10px 0px 10px'}}>\n                        <h3>Заказы в архиве</h3>\n                        <ToggleButtonMy alignment= {alignment} handleChange={handleChange}/>\n                    </div>\n                    \n                    <Box sx={{display: 'flex', padding: '0px 10px 0px 10px'}}>\n                        { alignment === 'left' ? \n                            <TableView orders={orders} view={\"archive\"}/>\n                        :\n                        \n                        <Grid container spacing={2}>\n                            {listData}\n                        </Grid>\n                        }\n                        \n                        \n                    </Box>\n                </Box>\n            </div>\n    ) \n}\n\nexport default PageOrderInArchive;","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Card/Pages/CardOrderInDefault.tsx",["578","579","580","581","582","583","584","585","586","587"],"import React,{useEffect, useState,useRef} from 'react';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport { CardHeader, IconButton } from '@material-ui/core';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport { Divider } from '@mui/material';\n\nimport {IDataColorOrderInDefault} from '../../Data/DataCardOrderInDefault/IDataColorOrderInDefault'\nimport IDataOrder from '../../Data/IDataOrder';\nimport { Redirect,useHistory, useLocation } from 'react-router'\nimport { useActionOrders } from '../../../hooks/useActionOrders';\nimport { useTypedSelector } from '../../../hooks/leftMenuSelector';\n\nimport axios from 'axios'\nimport ip from '../../../global'\n\nimport moment from 'moment';\n\nenum simulationEnum{\n  Start = 'Запустить симуляцию',\n  Stop = 'Остановить симуляцию'\n}\nconst CardOrderInDefault = (props:{OrderColor: IDataColorOrderInDefault, data: IDataOrder}) => {\n\n  const {Start,Stop} = simulationEnum;\n\n\n  /*\n  const [simulation, setSimulation] = useState({\n    text: simulationEnum.Start,\n    color: IDataColorOrderInDefault.NotWork,\n    work: false\n  });\n  */\n\n  const [simulation, setSimulation] = useState(false)\n\n  const[order, setOrder] = useState<IDataOrder>(props.data);\n\n\n  \n\n  const {startSimulation, updateInfoOrder} = useActionOrders()\n\n  const onSimulation = () => {\n\n    /*if(simulation.work)\n    {\n      let sim = !simulation.work;\n      setSimulation({...simulation, work:sim, text: Start })\n      startSimulation(props.data as IDataOrder, sim);\n    }\n    else\n    {\n      let sim = !simulation.work;\n      setSimulation({...simulation, work:sim, text: Stop })\n      startSimulation(props.data as IDataOrder, sim);\n    }*/\n    let newObj = {...order, simulation: !simulation};\n\n    setSimulation(newObj.simulation);\n    setOrder(newObj);\n    startSimulation(newObj);\n  }\n\n  //let flag = (simulation.text === simulationEnum.Stop && simulation.work)\n\n  const timer = useRef(null);\n  const GetInformation = async() =>{\n    const response = await axios.post('http://'+ip+':5001/api/manufacture/updateInfoOrder',JSON.stringify(order),\n    {\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          'Content-Type': 'application/json'\n        }\n    })\n\n    if(response.status === 200)\n    {\n       let responseData =  JSON.parse(JSON.stringify(response.data)) as IDataOrder;\n       setOrder(responseData);\n       setSimulation(responseData.simulation);\n    }\n  }\n\n   \n  useEffect(() => {\n    const timer = setTimeout(() => GetInformation(), 800); \n    return () => {\n      clearTimeout(timer);\n    };\n  },[order]);\n \n  const history = useHistory();\n\n  const openInfo = () => {\n    history.push('/orderInfo', { data: props.data});\n  }\n\n\n    // Helper\nconst StringIsNumber = (value: any,index: any) => {if(index === order?.orderRole-1) return true};\n\n// Turn enum into array\nfunction ToArray(enumme: any) {\n    return Object.keys(enumme)\n        .filter(StringIsNumber)\n        .map(key => enumme[key])\n        .at(0);\n}\n\nlet listRole = ToArray(IDataColorOrderInDefault);\n\n\nlet timeTActual = moment.unix(order?.tActual).utc().format('H:m:s')\n\n  return (\n    <Card sx={{ minWidth: 200,color: simulation ? 'white':'black',  backgroundColor: listRole }}>\n      <CardHeader\n        titleTypographyProps={{ variant: \"h6\" }}\n        action={\n         <div>\n          <IconButton \n          aria-label=\"settings\"\n          onClick={openInfo}>\n            <SettingsIcon style={{color: ''}}/>\n          </IconButton>\n         </div>\n        }\n        title={\"Заказ номер: \"+order?.name}\n        subheader={<Typography style={{color: simulation ? 'white':'black'}}>{ simulation ? timeTActual : ''}</Typography>}\n      />\n      <Divider/>\n      <CardActions>\n        <Button style={{borderColor: simulation? '':'white',backgroundColor: simulation? '#12824C':'', color: '#FFFFFF'}} size=\"small\" variant={simulation ? \"contained\":\"outlined\"} onClick={onSimulation}>\n          {simulation ? \"Остановить симуляцию\":\"Запустить симуляцию\"}\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nexport default CardOrderInDefault;","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Data/DataCardOrderInDefault/IDataColorOrderInDefault.tsx",[],"/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/hooks/useActionOrders.tsx",[],"/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/store/action-creator/useActionOrders.tsx",["588","589","590","591","592"],"import axios from \"axios\"\nimport { Dispatch } from \"react\"\nimport IDataOrder from \"../../Component/Data/IDataOrder\"\nimport { useOrdersActionType,useLeftMenuAction, OrderMy } from \"../../type/useOrdersType\"\n\nimport { fetch_orders, fetch_orders_success, fetch_orders_error,fetch_orders_add,fetch_orders_update,fetch_orders_success2 } from '../reducers/useOrdersReducer'\n\n\nimport IDialogAddOrder from '../../Component/Data/Dialog/IDialogAddOrder'\n\nimport ip,{port} from '../../global'\nimport IDataCardVSM from \"../../Component/Data/IDataCardVSM\"\nimport IDataProduction from \"../../Component/Data/IDataProduction\"\n\nexport const ordersLoading = () => {\n\n    return async (dispatch: any) => {\n\n        try{\n            dispatch(fetch_orders());\n\n            const response = await axios.get('http://'+ip+':'+port+'/api/manufacture/orders',{\n                withCredentials: false,\n                headers: {\n                  \"Access-Control-Allow-Origin\": \"*\",\n                },\n            })\n\n            \n            let data = response.data as IDataOrder[];\n            setTimeout(() => {\n\n               /* data.map((item:IDataOrder )=>{\n                    if(item.tActual != 0)\n                    {\n                        //console.log(\"fetch_orders_update = \" +item.tActual);\n                        dispatch(fetch_orders_update(item))\n                    }\n                })*/\n\n                dispatch(fetch_orders_success(data));\n            }, 0)\n        } catch(e) {\n            dispatch(fetch_orders_error('Error'));\n        }\n    }\n}\n\n\n\nexport const ordersLoading2 = () => {\n    return async (dispatch: any) => {\n\n        try{\n            dispatch(fetch_orders());\n\n            const response = await axios.get('http://'+ip+':'+port+'/api/manufacture/orders2',{\n                withCredentials: false,\n                headers: {\n                  \"Access-Control-Allow-Origin\": \"*\",\n                },\n            })\n\n\n\n            let df  = response.data as OrderMy;\n\n            setTimeout(() => {\n\n               /* data.map((item:IDataOrder )=>{\n                    if(item.tActual != 0)\n                    {\n                        //console.log(\"fetch_orders_update = \" +item.tActual);\n                        dispatch(fetch_orders_update(item))\n                    }\n                })*/\n\n                dispatch(fetch_orders_success2(df));\n            }, 0)\n        } catch(e) {\n            dispatch(fetch_orders_error('Error'));\n        }\n    }\n}\n\n\nexport const orderAdd = (newOrder: IDialogAddOrder) => {\n    return async (dispatch: any) => {\n\n        console.log(\"Add\")\n        console.log(newOrder)\n        console.log(JSON.stringify(newOrder))\n        try{\n\n            //const response = await axios.get('https://jsonplaceholder.typicode.com/users')\n\n            const response = await axios.post('http://'+ip+':'+port+'/api/manufacture/addOrder',JSON.stringify(newOrder),{\n                headers: {\n                  // Overwrite Axios's automatically set Content-Type\n                  \"Access-Control-Allow-Origin\": \"*\",\n                  'Content-Type': 'application/json'\n                }\n              })\n\n            if(response.status === 200)\n            {\n                dispatch(fetch_orders_add(newOrder));\n                console.log(\"Add Ok\")\n            }\n        } catch(e) {\n            dispatch(fetch_orders_error('Error'));\n        }\n    }\n}\n\nexport const orderUpdate = (updateOrder: IDataOrder, oldOrder: IDataOrder) => {\n    return async (dispatch: any) => {\n        let obj = {newOrder: updateOrder , oldOrder: oldOrder}\n        try{\n            const response = await axios.post('http://'+ip+':'+port+'/api/manufacture/updateOrder',JSON.stringify(obj),{\n                headers: {\n                  \"Access-Control-Allow-Origin\": \"*\",\n                  'Content-Type': 'application/json'\n                }\n              })\n\n            if(response.status === 200)\n            {\n                dispatch(fetch_orders_update(obj));\n                console.log(\"Add Ok\")\n            }\n        } catch(e) {\n            dispatch(fetch_orders_error('Error'));\n        }\n    }\n}\n\n\nexport const startSimulation = (item: IDataOrder) => {\n    return async (dispatch: any) => {\n\n        let copyObjet = {...item}\n        try\n        {\n            const response = await axios.post('http://'+ip+':'+port+'/api/manufacture/startSimulationOrder',JSON.stringify(copyObjet),\n            {\n                headers: {\n                   \"Access-Control-Allow-Origin\": \"*\",\n                  'Content-Type': 'application/json'\n                }\n            })\n\n            if(response.status === 200)\n            {\n                //dispatch(fetch_orders_update(obj));\n                console.log(\"Add Ok\")\n            }\n        } catch(e) {\n            dispatch(fetch_orders_error('Error'));\n        }\n    }\n}\n\n\nexport const updateInfoOrder = (item: IDataOrder) => {\n    return async (dispatch: any) => {\n\n        //let copyObjet = {...item}\n        try\n        {\n            const response = await axios.post('http://'+ip+':'+port+'/api/manufacture/updateInfoOrder',item,\n            {\n                headers: {\n                  \"Access-Control-Allow-Origin\": \"*\",\n                  'Content-Type': 'application/json'\n                }\n            })\n\n            if(response.status === 200)\n            {\n\n               \n                let data = response.data as IDataOrder;\n\n                console.log(\"Update item =\", data.tActual)\n                dispatch(fetch_orders_update(data));\n            }\n        } catch(e) {\n            dispatch(fetch_orders_error('Error'));\n        }\n    }\n}\n\n\n\n","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/type/useOrdersType.tsx",[],"/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/store/reducers/useOrdersReducer.tsx",["593","594","595","596","597","598","599"],"import { createSlice, PayloadAction,current } from '@reduxjs/toolkit'\nimport IDataOrder from '../../Component/Data/IDataOrder'\nimport { MyCards, OrderMy, useOrdersType } from '../../type/useOrdersType'\n\n\n/*let initialState: useOrdersType ={\n    orders: [],\n    loading: true,\n    changeList: false,\n    error: null\n}*/\n\nconst useOrdersReducer = createSlice({  \n    name: 'orders',  \n    initialState: {\n        orders: new Array as IDataOrder[],\n        orders2: new Array as OrderMy[],\n        loading: true,\n        changeList: false,\n        error: null\n    } as useOrdersType,  \n    reducers: {       \n        fetch_orders(state) {  \n            //state.loading = true     \n        },\n        fetch_orders_success: (state,action) => {   \n\n            var currentState = current(state);\n\n            if(currentState.orders.length === 0 || currentState.orders.length < action.payload.length)\n            {\n                console.log(\"sdf =\",current(state))\n\n                return {...state, orders: action.payload, loading: false }\n            }\n\n            return {...state, orders: action.payload, loading: false }\n\n\n           /* action.payload.map((item:IDataOrder,index: number )=>{\n                if(item.tActual != 0  || item.tActual != null)\n                {\n                    console.log(\"fetch_orders_update = \" +item.tActual);\n                    console.log(\"fetch_orders_update 2= \" +currentState.orders[index].orderRole, item.orderRole );\n                    fetch_orders_update(item)\n                }\n            })*/\n\n            //state.orders = action.payload \n            //state.loading = false     \n\n        },\n        fetch_orders_success2(state,action){\n            return {...state, orders2: action.payload, loading: false }\n        },     \n        fetch_orders_error(state, action) {     \n            state.loading = false    \n            state.error = action.payload    \n        },\n        fetch_orders_add(state, action){\n            console.log(\"fetch_orders_add =\",state,action)\n            //state.orders.push(action.payload);\n        },\n        fetch_orders_update(state, action){\n            var currentState = current(state);\n\n\n           let newData  = currentState.orders.map(o => {\n                if (o.id === action.payload.id) {\n                  return action.payload;\n                }\n            }) as IDataOrder[]\n\n\n            return {...state, orders: newData}\n        }   \n    },\n    /*extraReducers:{\n\n    }*/\n})\nexport default useOrdersReducer.reducer\nexport const { fetch_orders, fetch_orders_success, fetch_orders_error,fetch_orders_add,fetch_orders_update,fetch_orders_success2 } = useOrdersReducer.actions","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Data/OrderRole.tsx",[],"/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/store/reducers/useProductionReducer.tsx",["600"],"import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { useProductionType } from '../../type/useProductionType'\n\n\nconst initialState: useProductionType ={\n    productions: [],\n    loading: true,\n    error: null\n}\n\nconst useProductionReducer = createSlice({  \n    name: 'productions',  \n    initialState,  \n    reducers: {       \n        fetch_productions(state) {  \n            state.loading = true     \n        },\n        fetch_productions_success(state,action) {      \n            state.productions = action.payload;\n            state.loading = false; \n        },     \n        fetch_productions_error(state, action) {     \n            state.loading = false    \n            state.error = action.payload    \n        },\n        fetch_productions_add(state, action){\n            state.productions.push(action.payload);\n        }  \n    },\n})\nexport default useProductionReducer.reducer\nexport const { \n    fetch_productions, \n    fetch_productions_success, \n    fetch_productions_error,\n    fetch_productions_add \n} = useProductionReducer.actions","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/hooks/useActionProductions.tsx",[],["601","602"],"/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/store/action-creator/useActionProduction.tsx",["603","604","605","606"],"\nimport axios from \"axios\"\nimport { Dispatch } from \"react\"\nimport IDataOrder from \"../../Component/Data/IDataOrder\"\nimport { useOrdersActionType,useLeftMenuAction } from \"../../type/useOrdersType\"\n\nimport { fetch_productions, fetch_productions_success , fetch_productions_error} from '../reducers/useProductionReducer'\n\n\nimport IDialogAddOrder from '../../Component/Data/Dialog/IDialogAddOrder'\n\nimport ip from '../../global'\n\nexport const getAllProducts = () =>{\n    return async (dispatch: any) => {\n\n        console.log(\"getAllProducts\")\n        try{\n            dispatch(fetch_productions());\n\n            const response = await axios.get('http://'+ip+':5001/api/manufacture/getAllProducts',)\n\n            if(response.status === 200)\n            {\n                let data = response.data as IDataOrder[];\n                console.log(\"Loading finish getAllProducts\")\n                console.log(data)\n                setTimeout(() => {\n                    dispatch(fetch_productions_success(data));\n                }, 0)\n            }\n        } catch(e) {\n            dispatch(fetch_productions_error('Error'));\n        }\n    }\n}\n","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Pages/PageInformationAboutOrder.tsx",["607","608","609","610","611","612","613"],"import  React from 'react'\nimport TextField from '@material-ui/core/TextField';\nimport {useLocation, useHistory} from 'react-router'\n\nimport IDataOrder from '../Data/IDataOrder';\n\n\nimport MenuItem from '@material-ui/core/MenuItem';\nimport OrderRole from '../Data/OrderRole';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { useActionOrders } from '../../hooks/useActionOrders';\nimport { useTypedSelector } from '../../hooks/leftMenuSelector';\nimport IDialogAddOrder from '../Data/Dialog/IDialogAddOrder';\n\ninterface stateType{\n  data: IDataOrder\n}\n\n\n\n\nconst PageInformationAboutOrder = () =>\n{\n  const location = useLocation<stateType>()\n  const history = useHistory()\n\n  const [data, setData] = React.useState<IDataOrder>();\n\n  const handleChangeName = (event: React.ChangeEvent<HTMLInputElement>) => {\n\n    if(event.target.value != undefined)\n    {\n      let obj = {...data};\n      obj.name = event.target.value;\n      setData(obj as IDataOrder)\n    }\n   \n  };\n\n  const handleChangePriority = (event: React.ChangeEvent<HTMLInputElement>) => {\n    \n    if(event.target.value != undefined)\n    {\n      let obj = {...data};\n      obj.priority = Number(event.target.value);\n      setData(obj as IDataOrder)\n    }\n\n  };\n\n  const handleChangeOrderRole = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if(event.target.value != undefined)\n    {\n      let obj = {...data};\n      let name = event.target.value;\n      \n      switch(name)\n      {\n        case \"Актуальный\":\n          obj.orderRole = OrderRole.Actual;\n          break;\n        case \"В работе\":\n          obj.orderRole = OrderRole.Work;\n          break;\n        case \"Архив Правильный\":\n          obj.orderRole = OrderRole.ArchiveGood;\n          break;\n        case \"Архив Плохой\":\n          obj.orderRole = OrderRole.ArchiveBad;\n          break;\n        case \"Остановлен\":\n          obj.orderRole = OrderRole.Stoped;\n        break;\n      }\n      //let obj = {...data};\n      //obj.orderRole = Number(event.target.value);\n      setData(obj as IDataOrder)\n    }\n  };\n\n\n\n  // Helper\nconst StringIsNumber = (value: any) => isNaN(Number(value)) === false;\n\n// Turn enum into array\nfunction ToArray(enumme: any) {\n    return Object.keys(enumme)\n        .filter(StringIsNumber)\n        .map(key => enumme[key]);\n}\n  \nlet listRole = [\"Актуальный\", 'В работе', 'Архив Правильный','Архив Плохой','Остановлен'];\n\nconst {orders, loading} = useTypedSelector(state => state.orders);\nconst {orderUpdate} = useActionOrders()\n\n\nconst onBack = () => {\n  history.goBack();\n}\n\nconst onSave = () => {\n  orderUpdate(data as IDataOrder,location.state.data);\n  onBack();\n}\n  \n  if(location.state.data != null)\n  {\n    if(data === undefined)\n    {\n      setData(location.state.data);\n      return <p>Загрузка</p>\n    }\n\n    return (\n      <div style={{padding: '50px'}}>\n         <TextField\n          onChange={handleChangeName}\n          autoFocus\n          margin=\"dense\"\n          id=\"name\"\n          label=\"Название\"\n          type=\"name\"\n          fullWidth\n          variant=\"standard\"\n          value={data?.name}\n        />\n        <TextField\n          onChange={handleChangePriority}\n          autoFocus\n          margin=\"dense\"\n          id=\"priority\"\n          label=\"Приоритет\"\n          type=\"priority\"\n          fullWidth\n          variant=\"standard\"\n          value={data?.priority}\n        />\n\n        <TextField\n          id=\"standard-select-currency\"\n          select\n          label=\"Выбирите роль\"\n          value={listRole[data?.orderRole-1]}\n          onChange={handleChangeOrderRole}\n          helperText=\"\"\n          variant=\"standard\"\n        >\n          \n          { listRole.map((option, index) => (\n            <MenuItem key={index} value={option}>\n              {option}\n            </MenuItem>\n          ))}\n        </TextField>\n        <DialogActions>\n          <Button onClick={onBack}>Отменить</Button>\n          <Button onClick={onSave}>Сохранить</Button>\n      </DialogActions>\n      </div>\n  )   \n\n  }\n\n  return <p>Нет данных</p>\n\n  \n}\n\nexport default PageInformationAboutOrder;\n\n ","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/global.js",[],"/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Pages/PageExel.tsx",[],"/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/DropZone/DropZone.tsx",["614","615","616","617","618","619","620","621","622","623"],"import { file } from \"@babel/types\";\nimport React, { useMemo, CSSProperties, useCallback } from \"react\";\nimport { Suspense, useEffect, useState } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport serverApiHost,{port} from \"../../global\";\nimport IDataCardSection from \"../Data/IDataCardSection\";\n\nimport { Box } from '@material-ui/system';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios'\n//import './DropZone.css'\n\n\nconst baseStyle = {\n  flex: 1,\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  padding: \"10%\",\n  borderWidth: 2,\n  borderRadius: 2,\n  borderColor: \"#eeeeee\",\n  borderStyle: \"dashed\",\n  backgroundColor: \"#fafafa\",\n  color: \"#bdbdbd\",\n  outline: \"none\",\n  transition: \"border .24s ease-in-out\",\n};\n\nconst activeStyle = {\n  borderColor: \"#2196f3\",\n};\n\nconst acceptStyle = {\n  borderColor: \"#00e676\",\n};\n\nconst rejectStyle = {\n  borderColor: \"#ff1744\",\n};\n\nconst DropZone = (props: {}) => {\n\n  const [state, setState] = useState({\n    loading: false,\n    data: null,\n    sections: new Array() as IDataCardSection[],\n  })\n\n  var listSections: IDataCardSection[] = new Array()\n\n  const SendFile = (acceptedFiles: File[]) => {\n    //\n    (async () => {\n      setState({...state, data: null});\n      if (acceptedFiles.length > 0) {\n        try {\n          let file = acceptedFiles[0];\n          console.log(\"file = \", file);\n\n         // setLoading(true);\n         setState({...state, loading: true});\n          /* \n              console.log(\"name = \",JSON.stringify({\n                FileName: file.name,\n                Size: file.size\n              }))*/\n\n          var data = new FormData();\n          data.append(\"file\", file);\n\n\n          const response = await axios.post('http://'+serverApiHost+':'+port+'/api/exel/add',data,\n          {\n              headers: {\n                \"Access-Control-Allow-Origin\": \"*\",\n               // 'Content-Type': 'application/json'\n                'Content-Type': 'multipart/form-data'\n              }\n          })\n\n          if(response.status != 200)\n          {\n            return ;\n          }\n\n          let content = response.data as any;\n\n          console.log(\"name = \", response);\n\n          let section: IDataCardSection = {\n            sections: new Array\n          }; \n\n          if(content != null)\n          {\n            content.dataCardVSM.map((item : any, index: number)=> {\n              if(section.sections?.length === 0)\n              {\n                section.sections?.push(item.value);\n              }\n              else\n              {\n                let position = section.sections[section.sections.length-1].etapNumeric;\n                if(item.value.etapNumeric === position)\n                {\n                  section.sections?.push(item.value);\n                }\n                else\n                {\n                  listSections.push(section);\n\n                  section = {\n                    sections: new Array\n                  } as IDataCardSection;\n\n                  section.sections?.push(item.value);\n\n                }\n              }\n            })\n                   \n            console.log(\"listSections\", listSections)\n          }\n\n\n            setState({...state, data: content, sections: listSections, loading: false});\n    \n        } catch (e) {}\n      }\n    })();\n    //\n  };\n\n  const onDrop = useCallback((acceptedFiles) => {\n    console.log(\"useCallback = \", acceptedFiles);\n    SendFile(acceptedFiles);\n  }, []);\n\n  const {\n    acceptedFiles,\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragAccept,\n    isDragReject,\n  } = useDropzone({ onDrop });\n\n  const style = useMemo(\n    () => ({\n      ...baseStyle,\n      ...(isDragActive ? activeStyle : {}),\n      ...(isDragAccept ? acceptStyle : {}),\n      ...(isDragReject ? rejectStyle : {}),\n    }),\n    [isDragActive, isDragReject, isDragAccept]\n  ) as CSSProperties;\n\n  const files = acceptedFiles.map((file) => (\n    <div style={{ flex: \"\" }} key={file.name}>\n      <li>\n        {file.name} - {file.size} bytes\n      </li>\n      <Button color=\"info\"  onClick={() => SendFile(acceptedFiles)}>\n        Отправить\n      </Button>\n    </div>\n  ));\n\n  useEffect(() => {});\n\n  if (state.loading) {\n    return (\n      <div>\n        <Suspense fallback={<CircularProgress />}>\n          <Box sx={{ display: 'flex', justifyContent: 'center' }}>\n            <CircularProgress />\n          </Box>\n        </Suspense>\n      </div>\n    );\n  }\n\n  if (state.sections.length > 0) {\n    console.log(\"CARDS = \", state.sections);\n    return (\n      <div style={{display: 'flex', height: '100%'}}>\n        <Button color=\"info\"  onClick={() => setState({...state, data: null, sections: []})}>\n          Вренуться\n        </Button>\n        {/*<Demo2 sections={state.sections}/>*/}\n      </div>\n      \n    );\n  }\n  //<Demo sections={state.sections}/>\n  //sections={state.sections}/\n\n  return (\n    <div>\n      <div {...getRootProps({ style })}>\n        <input {...getInputProps()} type=\"file\" />\n        <p>Drag 'n' drop some files here, or click to select files</p>\n      </div>\n      <aside>\n        <h4>Files</h4>\n        <ul>{files}</ul>\n      </aside>\n    </div>\n  );\n};\n\nexport default DropZone;\n","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/store/reducers/useCardVSMReducer.tsx",["624"],"import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { useCardVSMType } from '../../type/useCardVSMType'\n\n\nconst initialState: useCardVSMType ={\n    cardVSMs: [],\n    loading: true,\n    error: null\n}\n\nconst useCardVSMReducer = createSlice({  \n    name: 'cardVSM',  \n    initialState,  \n    reducers: {       \n        fetch_cardVSM(state) {  \n            state.loading = true     \n        },\n        fetch_cardVSM_success(state,action) {      \n            state.cardVSMs = action.payload;\n            state.loading = false; \n        },     \n        fetch_cardVSM_error(state, action) {     \n            state.loading = false    \n            state.error = action.payload    \n        },\n        fetch_cardVSM_add(state, action){\n            //state.productions.push(action.payload);\n        }  \n    },\n})\nexport default useCardVSMReducer.reducer\nexport const { \n    fetch_cardVSM, \n    fetch_cardVSM_success, \n    fetch_cardVSM_error,\n    fetch_cardVSM_add \n} = useCardVSMReducer.actions","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/store/action-creator/useActionsCardVSM.tsx",["625","626","627","628","629","630","631","632","633"],"import axios from \"axios\"\nimport { Dispatch } from \"react\"\nimport IDataOrder from \"../../Component/Data/IDataOrder\"\nimport { useOrdersActionType,useLeftMenuAction } from \"../../type/useOrdersType\"\n\nimport {  fetch_cardVSM, \n    fetch_cardVSM_success, \n    fetch_cardVSM_error,\n    fetch_cardVSM_add \n } from '../reducers/useCardVSMReducer'\n\n\nimport IDialogAddOrder from '../../Component/Data/Dialog/IDialogAddOrder'\n\nimport ip,{port} from '../../global'\nimport IDataProduction from \"../../Component/Data/IDataProduction\"\nimport { useCardVSMType, useProductionCardVSM } from \"../../type/useCardVSMType\"\nimport IDataCardVSM from \"../../Component/Data/IDataCardVSM\"\n\n\ninterface productionCardVSM{\n    name: string,\n    productions: IDataCardVSM[]\n}\ninterface IDataCardProduct{\n    cardVSMs: productionCardVSM[]\n}\n\nexport const cardVSMLoading = (order: IDataOrder) => {\n    return async (dispatch: any) => {\n\n        try{\n           // dispatch(fetch_orders());\n            //const response = await axios.get('https://jsonplaceholder.typicode.com/users')\n\n            dispatch(fetch_cardVSM());\n\n     \n\n            const response = await axios.post('http://'+ip+':'+port+'/api/cardVSM/get',\n            order\n            ,{\n                withCredentials: false,\n                headers: {\n                  \"Access-Control-Allow-Origin\": \"*\",\n                  'Content-Type': 'application/json'\n                },\n            })\n\n            \n           const data = response.data as any;\n           console.log(\"Get card = \", data);\n\n            setTimeout(() => {\n                dispatch(fetch_cardVSM_success(data.cardVSMs));\n            }, 0)\n        } catch(e) {\n            dispatch(fetch_cardVSM_error('Error'));\n        }\n    }\n}","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/hooks/useActionCardVSM.tsx",[],"/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Data/IDataCardVSM.tsx",[],["634","635"],"/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/hooks/usePrevious.tsx",["636"],"import React,{useEffect,useRef} from 'react'\n\n\n\nconst usePrevious = (value: any) => {\n    const ref = useRef();\n    useEffect(() => {\n      ref.current = value;\n    });\n    return ref.current;\n}\n\nexport default usePrevious;",["637","638"],"/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Chat.js",["639"],"\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport ChatItem from \"./ChatItem\";\n\nconst URL = 'ws://192.168.0.2:5001/ws';\n\nconst Chat =() => {\n\tconst [user, setUser] = useState('Tarzan');\n  \tconst [message, setMessage] = useState([]);\n  \tconst [messages, setMessages] = useState([]);\n\t//const [socket, setSocket] = useState<WebSocket>(null);\n\n  \tconst submitMessage = (usr, msg) => {\n  \t\tconst message = { user: usr, message: msg };\n  \t\tsocket.current.send(JSON.stringify(message));\n  \t\tsetMessages([message, ...messages]);\n  \t}\n\n\t  const socket = useRef(null);\n\t \n\n\n  /*\tuseEffect(() => {\n\t    soket.onopen = () => {\n\t      console.log('WebSocket Connected');\n\t    }\n\n\t    soket.onmessage = (e) => {\n          console.log('Read');\n\t      const message = JSON.parse(e.data);\n\t      setMessages([message, ...messages]);\n\t    }\n\n\t    return () => {\n            soket.onclose = () => {\n\t        console.log('WebSocket Disconnected');\n\t        setWs(new WebSocket(URL));\n\t      }\n\t    }\n  \t}, ); //[ws.onmessage, ws.onopen, ws.onclose, messages]\n*/\n\n      const [isPaused, setPause] = useState(false);\n\n\t  const [reconnect, setRecconect] = useState(false);\n  \n      useEffect(() => {\n\t\tconsole.log(\"Set socket after = \", socket.current);\n\t\tif (!socket.current || reconnect === false) {\n\t\t\tconsole.log(\"Set socket = \", socket.current);\n\t\t\tsocket.current = new WebSocket(URL);\n\t\t\tsocket.current.onmessage = (e) => {\n\t\t\t\tif (isPaused) return;\n\t\t\t\tconst message = JSON.parse(e.data);\n\t\t\t\tconsole.log(\"e\", message);\n\t\t\t\tsetMessages([message, ...messages]);\n\t\t\t};\n\n\t\t\tsocket.current.onerror = (e) => {\n\t\t\t\tconsole.log(\"eror\", e.data);\n\t\t\t};\n\n\t\t\tsocket.current.onclose = e=>{\n\t\t\t\tconsole.log(\"CONNECTION CLOSED\", e.data);\n\t\t\t\tsocket.current.close(1000, \"\");\n\n\t\t\t\tsetRecconect(true);\n\t\t\t}\n\t\t}\n\t\treturn () => {\n\t\t  if (socket.current) {\n\t\t\tsocket.current.close(1000, \"\");\n\t\t\t\n\t\t  }\n\t\t};\n\t  }, [socket,reconnect]);\n\n\n\t  console.log(\"rerender\")\n  \n\t  /*\n      useEffect(() => {\n          if (!socket.current) return;\n  \n          socket.current.onmessage = e => {\n              if (isPaused) return;\n              const message = JSON.parse(e.data);\n              console.log(\"e\", message);\n              setMessages([message, ...messages]);\n          };\n      }, [isPaused]);*/\n\n\t  if(reconnect)\n\t  {\n\t\t  return (\n\t\t\t<button onClick={() => setRecconect(!reconnect)}>\n\t\t\t reconnect\n\t\t\t</button>\n\t\t  )\n\t  }\n\n  \treturn (\n\t    <div>\n\t        <label htmlFor=\"user\">\n\t          Name :\n\t          <input\n\t            type=\"text\"\n\t            id=\"user\"\n\t            placeholder=\"User\"\n\t            value={user}\n\t            onChange={e => setUser(e.target.value)}\n\t          />\n\t        </label>\n\n\t        <ul>\n\t          {messages.reverse().map((message, index) =>\n\t            <li key={index}>\n\t              <b>{message.user}</b>: <em>{message.message}</em>\n\t            </li>\n\t          )}\n\t        </ul>\n\n\t        <form\n\t          action=\"\"\n\t          onSubmit={e => {\n\t            e.preventDefault();\n\t            submitMessage(user, message);\n\t            setMessage([]);\n\t          }}\n\t        >\n\t          <input\n\t            type=\"text\"\n\t            placeholder={'Type a message ...'}\n\t            value={message}\n\t            onChange={e => setMessage(e.target.value)}\n\t          />\n\t          <input type=\"submit\" value={'Send'} />\n\t        </form>\n            <button onClick={() => setPause(!isPaused)}>\n                {isPaused ? \"Resume\" : \"Pause\"}\n            </button>\n\n\t\t\t<p>ЧАТ ИТЕМ</p>\n\t\t\t  <ChatItem/>\n\t\t\t\n\t    </div>\n  \t)\n}\n\nexport default Chat;","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/ChatItem.tsx",["640","641","642","643"],"\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport IDataOrder from \"./Component/Data/IDataOrder\"\n\nconst URL = 'ws://192.168.0.2:5001/wsItem';\n\nconst ChatItem =() => {\n\tconst [user, setUser] = useState('Tarzan');\n  \tconst [message, setMessage] = useState([]);\n  \tconst [messages, setMessages] = useState<IDataOrder[]>([]);\n\n\t  const socket = useRef(null)  as any;\n\t \n\n      const [isPaused, setPause] = useState(false);\n\n\t  const [reconnect, setRecconect] = useState(false);\n  \n      useEffect(() => {\n\t\tconsole.log(\"Set socket after = \", socket.current);\n\t\tif (!socket.current || reconnect === false) {\n\t\t\tconsole.log(\"Set socket = \", socket.current);\n\t\t\tsocket.current = new WebSocket(URL) ;\n\t\t\tsocket.current.onmessage = (e: any) => {\n\t\t\t\tif (isPaused) return;\n\t\t\t\tconst message = JSON.parse(e.data) as IDataOrder;  \n\t\t\t\tconsole.log(\"e\", message);\n\t\t\t\tconsole.log(\"e messages\", messages);\n\t\t\t\tsetMessages([message,...messages] as IDataOrder[]); //message, \n\t\t\t};\n\n\t\t\tsocket.current.onopen = () => {\n\t\t\t\t// on connecting, do nothing but log it to the console\n\t\t\t\tconsole.log('connected')\n\t\t\t\tsocket.current.send(JSON.stringify({ id: '1'}));\n\t\t\t}\n\n\t\t\t\n\n\t\t\tsocket.current.onerror = (e : any) => {\n\t\t\t\tconsole.log(\"eror\", e.data);\n\t\t\t};\n\n\t\t\tsocket.current.onclose = (e : any)=>{\n\t\t\t\tconsole.log(\"CONNECTION CLOSED\", e.data);\n\t\t\t\tsocket.current.close(1000, \"\");\n\n\t\t\t\tsetRecconect(true);\n\t\t\t}\n\t\t}\n\t\treturn () => {\n\t\t  if (socket.current) {\n\t\t\tsocket.current.close(1000, \"\");\n\t\t\t\n\t\t  }\n\t\t};\n\t  }, [socket,reconnect]);\n\n\n\t  console.log(\"rerender ITEM\")\n  \n\t  /*\n      useEffect(() => {\n          if (!socket.current) return;\n  \n          socket.current.onmessage = e => {\n              if (isPaused) return;\n              const message = JSON.parse(e.data);\n              console.log(\"e\", message);\n              setMessages([message, ...messages]);\n          };\n      }, [isPaused]);*/\n\n\t  if(reconnect)\n\t  {\n\t\t  return (\n\t\t\t<button onClick={() => setRecconect(!reconnect)}>\n\t\t\t reconnect\n\t\t\t</button>\n\t\t  )\n\t  }\n\n  \treturn (\n\t    <div>\n\t        <label htmlFor=\"user\">\n\t          Name :\n\t          <input\n\t            type=\"text\"\n\t            id=\"user\"\n\t            placeholder=\"User\"\n\t            value={user}\n\t            onChange={e => setUser(e.target.value)}\n\t          />\n\t        </label>\n\n\t        <ul>\n\t          {messages.reverse().map((message: any, index) =>\n\t\t\t  {\n\t\t\t\tconsole.log(\"message = == \", message)\n\t\t\t  \treturn (\n\t            <li key={message.id}>\n\t              <b>{message.Name}</b>: <em>{message.TActual}</em>\n\t            </li>\n\t\t\t\t  )\n\t\t\t\t  }\n\t          )}\n\t        </ul>\n\n\t    </div>\n  \t)\n}\n\nexport default ChatItem;","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Data/IDataCardSection.tsx",[],"/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Pages/PageAllCards.tsx",["644","645","646","647","648","649","650","651","652"],"import  React, { useEffect,useState } from 'react'\nimport axios from 'axios'\nimport serverApiHost from \"../../global\";\n\n\nimport ViewAllCards from '../Card/AllCardsView/ViewAllCards'\nimport IDataCardVSM from '../../Component/Data/IDataCardVSM'\nimport { Divider, ListItemIcon, ListItemText, MenuItem, MenuList } from '@material-ui/core';\nimport { Check } from '@material-ui/icons';\n\n\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport { MyCards } from '../../type/useOrdersType';\ninterface TabPanelProps {\n    children?: React.ReactNode;\n    index: number;\n    value: number;\n  }\n\n  function TabPanel(props: TabPanelProps) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <div\n        style= {{width: '100%'}}\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`vertical-tabpanel-${index}`}\n        aria-labelledby={`vertical-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n          <Box sx={{ p: 3 }}>\n            <Typography>{children}</Typography>\n          </Box>\n        )}\n      </div>\n    );\n  }\n  \n  function a11yProps(index: number) {\n    return {\n      id: `vertical-tab-${index}`,\n      'aria-controls': `vertical-tabpanel-${index}`,\n    };\n  }\n  \n\n\n\ninterface AllCards\n{\n    message: string,\n    cards: MyCards[]\n}\n\nconst PageAllCards = () =>\n{\n    const [value, setValue] = React.useState(0);\n    const handleChange = (event: React.SyntheticEvent, newValue: number) => {\n      setValue(newValue);\n    };\n\n\n    const tabStyle = {\n        default_tab:{\n            color: '#68C222',\n            width: '33.3%',\n            backgroundColor: '#FFFFFF',\n            fontSize: 15\n        },\n        active_tab:{\n            color: 'grey700',\n            width: '33.3%',\n            backgroundColor: '#FFFFFF',\n            fontSize: 15\n        }\n    };\n\n    const getStyle =  (isActive: any)  => {\n        return isActive ? tabStyle.active_tab : tabStyle.default_tab\n    }\n    \n\n    const [dataCards, setDataCards] = useState<AllCards>()\n\n    const GetInformationAboutCard = async () => {\n       \n        const response = await axios.get('http://'+serverApiHost+':5001/api/cardVSM/view')\n\n        if(response.status != 200)\n        {\n          return ;\n        }\n\n        let content = response.data as AllCards;\n\n        setDataCards(content);\n\n        console.log(\"LOADING = \",content)\n\n       \n      \n    }\n\n\n    useEffect(() => {\n         GetInformationAboutCard();\n    },[])\n    \n\n    if(dataCards === undefined)\n    {\n        return <div>\n\n        </div>;\n    }   \n\n    console.log(\"LOADING  2= \",dataCards)\n    return (\n        <Box\n        sx={{ flexGrow: 1, bgcolor: 'background.paper', display: 'flex', height: '100%' }}\n      >\n        <Tabs\n        orientation=\"vertical\"\n        variant=\"scrollable\"\n        value={value}\n        onChange={handleChange}\n        aria-label=\"Vertical tabs example\"\n        sx={{ borderRight: 1, borderColor: 'divider',}}\n        TabIndicatorProps={{style: {background:'green',color: 'black' }}}\n      >\n            {dataCards?.cards.map( (item: MyCards,i: number) => {\n                    return   <Tab  \n                                    label={<span style={{ color: value === i ?'white':'black', width: '100%', wordWrap: '-moz-initial' }}>{item.name}</span>}\n                                    {...a11yProps(0)}  \n                                    sx={{width: '100%', backgroundColor: value === i ? 'gray': 'white', }}/>\n                })}\n      </Tabs>\n      {dataCards?.cards.map( (item: MyCards,i: number) => {\n           return  <TabPanel value={value} index={i}>\n               <ViewAllCards key={i} item={item}/>\n           </TabPanel>\n      })}\n\n        </Box>\n    )   \n}\n\n\nexport default PageAllCards;",["653","654"],"/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Card/AllCardsView/ViewAllCards.js",["655","656"],"import React from 'react';\nimport {MapInteractionCSS } from 'react-map-interaction';\nimport ViewCard_all from './ViewCard_all'\n\nclass ViewAllCards extends React.Component{\n  constructor(props)\n  {\n    super(props);\n\n  }\n\n  render()\n  {\n    return (\n    <div style ={{width: '100%', height: '89vh'}}>\n      <MapInteractionCSS defaultValue={{scale: 0.5,translation : {x : 0,y: 0}}}>\n          {/*<ViewOrderCard data={this.props.sections} productionId={this.props.productionId}/> */}\n          <ViewCard_all sectionsCard={this.props.item}/>\n      </MapInteractionCSS>\n    </div>\n    );\n  }\n}\n\nexport default ViewAllCards;",["657","658"],"/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Card/AllCardsView/ViewCard_all.tsx",["659","660","661","662","663","664","665","666","667","668","669","670","671","672","673","674","675","676","677","678","679","680","681","682","683","684","685","686","687","688"],"import React,{useEffect, useState} from 'react'\n\nimport IDataCardSection from '../../Data/IDataCardSection'\nimport IDataOrderItem from '../../Data/IDataOrderItem'\nimport Divider from '@material-ui/core/Divider';\nimport ViewCard from '../ViewCard'\n\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { Box } from '@material-ui/system';\n\n\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardContent from '@material-ui/core/CardContent'\n\nimport IconButton from '@material-ui/core/IconButton'\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport SettingsIcon from '@material-ui/icons/Settings';\n\nimport IDataVSM from '../../Data/IDataVSM'\nimport IDataProduction from '../../Data/IDataProduction';\nimport IDataCardVSM from '../../Data/IDataCardVSM';\nimport { useCardVSMActionType, useProductionCardVSM } from '../../../type/useCardVSMType';\n\nimport { useActionCardVSM } from '../../../hooks/useActionCardVSM';\nimport { useTypedSelector } from '../../../hooks/leftMenuSelector';\nimport IDataOrder from '../../Data/IDataOrder';\nimport { MyCards, OrderMy } from '../../../type/useOrdersType';\n\n\n\nconst ViewCard_all =  (props: {sectionsCard: MyCards}) => {\n\n    const [BDitems, setBDItem] = useState<IDataOrderItem[]>();\n\n    const {cardVSMs, loading} = useTypedSelector(state => state.cardVSM);\n    const {cardVSMLoading} = useActionCardVSM()\n\n    const [card, setCard] = useState(cardVSMs);\n\n    \n    let cardSections = new Array as IDataCardSection[];\n    let etapSection = new Array as IDataCardVSM[];\n\n    console.log(\"props.sectionsCard: \", props.sectionsCard)\n\n    for (let index = 0; index < props.sectionsCard.sections.length; index++) \n    {\n        const element = props.sectionsCard.sections[index];\n\n        if(index === 0)\n        {\n            etapSection.push(element);\n        }\n        else\n        {\n            if(element.etapNumeric === etapSection[0].etapNumeric)\n            {\n                etapSection.push(element);\n            }\n            else\n            {\n                let cardSection = new Object as IDataCardSection;\n                cardSection.sections = etapSection.slice()\n                cardSections.push(cardSection);\n\n                etapSection = new Array as IDataCardVSM[];\n\n                etapSection.push(element);\n            }\n        }\n    }\n\n    let cardSection = new Object as IDataCardSection;\n    cardSection.sections = etapSection.slice()\n    cardSections.push(cardSection);\n\n\n    return(\n        <div>\n        <Card sx={{marginBottom: '150px'}}>\n            <CardHeader\n                action={\n                    <IconButton aria-label=\"settings\">\n                        <SettingsIcon />\n                    </IconButton>\n                }\n                title={'\\\"'+props.sectionsCard.name + '\\\"'}\n                sx={{fontWeight: 'bold',color: 'white', backgroundColor: '#575757'}}\n                style={{color: 'white'}}\n            >\n                \n            </CardHeader>\n            <CardContent sx={{backgroundColor: 'rgba(0, 0, 0, .03)'}}>\n                {/*<ViewCard sections={cardSections} /> */}\n           </CardContent>\n        </Card>\n        </div>\n\n    )\n\n\n    \n}\n\n\nexport default ViewCard_all;","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Pages/PageNewAlgoritm.tsx",["689","690","691","692","693","694","695","696","697","698","699","700","701"],"import  React, { useEffect,useState } from 'react'\nimport axios from 'axios'\nimport serverApiHost from \"../../global\";\n\n\nimport ViewAllCards from '../Card/AllCardsView/ViewAllCards'\nimport IDataCardVSM from '../../Component/Data/IDataCardVSM'\nimport { Divider, ListItemIcon, ListItemText, MenuItem, MenuList } from '@material-ui/core';\nimport { Check } from '@material-ui/icons';\n\n\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport { MyCards } from '../../type/useOrdersType';\nimport ViewAllCards_newAlgoritm from '../Card/AllCardsView/ViewAllCards_newAlgoritm';\nimport ChartLine from '../Charts/ChartLine';\n\n//////////\n\n\n\n\ninterface User_view\n{\n    name: string,\n    userRole: number\n\n}\n\ninterface Etap_view\n{\n    name: string,\n    description: string,\n    actualTimeCircle: number,\n    defaultTimeCircle: number,\n    actualTimePreporation: number,\n    defaultTimePreporation: number,\n    actualAvailability: number,\n    defaultAvailability: number,\n    parallel: boolean,\n    users: User_view[]\n}\n\ninterface Buffer_view\n{\n    name: string,\n    type: string,\n    minHold: number,\n    max: number,\n    value: number,\n    valueDefault: number,      \n    replenishmentSec: number,\n    replenishmentCount: number\n}\n\ninterface SectionEtap_view\n{\n    buffer_view: Buffer_view,\n    etap_view: Etap_view\n}\n\n\ninterface SectionLogic_view\n{\n    sectionEtap_views: SectionEtap_view[]\n}\n\n//Модель данных для отображения\ninterface Card_view\n{\n    name: string,\n    sectionLogic_views: SectionLogic_view[]\n}\n\n\n\n/////////\n\n\n\n\ninterface TabPanelProps {\n    children?: React.ReactNode;\n    index: number;\n    value: number;\n  }\n\n  function TabPanel(props: TabPanelProps) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <div\n        style= {{width: '100%'}}\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`vertical-tabpanel-${index}`}\n        aria-labelledby={`vertical-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n          <Box sx={{ p: 3 }}>\n            <Typography>{children}</Typography>\n          </Box>\n        )}\n      </div>\n    );\n  }\n  \n  function a11yProps(index: number) {\n    return {\n      id: `vertical-tab-${index}`,\n      'aria-controls': `vertical-tabpanel-${index}`,\n    };\n  }\n  \n\nconst PageNewAlgoritm = () =>\n{\n    const [value, setValue] = React.useState(0);\n    const handleChange = (event: React.SyntheticEvent, newValue: number) => {\n      setValue(newValue);\n    };\n\n\n    const tabStyle = {\n        default_tab:{\n            color: '#68C222',\n            width: '33.3%',\n            backgroundColor: '#FFFFFF',\n            fontSize: 15\n        },\n        active_tab:{\n            color: 'grey700',\n            width: '33.3%',\n            backgroundColor: '#FFFFFF',\n            fontSize: 15\n        }\n    };\n\n    const getStyle =  (isActive: any)  => {\n        return isActive ? tabStyle.active_tab : tabStyle.default_tab\n    }\n    \n\n    const [dataCards, setDataCards] = useState<Card_view[]>()\n\n    const GetInformationAboutCard = async () => {\n       \n        const response = await axios.get('http://'+serverApiHost+':5000/api/cardVSM/view')\n\n        if(response.status != 200)\n        {\n          return ;\n        }\n\n        let content = response.data as any;\n\n        let card =  content.cards  as Card_view[];\n        setDataCards(card);\n        console.log(\"LOADING = \",card)\n    }\n\n\n    useEffect(() => {\n         GetInformationAboutCard();\n    },[])\n    \n\n    if(dataCards === undefined)\n    {\n        return <div>\n\n        </div>;\n    }   \n    \n    return (\n        <Box\n        sx={{ flexGrow: 1, bgcolor: 'background.paper', display: 'flex', height: '100%' }}\n        >\n                <Tabs\n                orientation=\"vertical\"\n                variant=\"scrollable\"\n                value={value}\n                onChange={handleChange}\n                aria-label=\"Vertical tabs example\"\n                sx={{ borderRight: 1, borderColor: 'divider',}}\n                TabIndicatorProps={{style: {background:'green',color: 'black' }}}\n            >\n                    {dataCards.map( (item: Card_view,i: number) => {\n                            return   <Tab  \n                                            label={<span style={{ color: value === i ?'white':'black', width: '100%', wordWrap: '-moz-initial' }}>{item.name}</span>}\n                                            {...a11yProps(0)}  \n                                            sx={{width: '100%', backgroundColor: value === i ? 'gray': 'white', }}/>\n                        })}\n            </Tabs>\n            {dataCards.map( (item: Card_view,i: number) => {\n                return  <TabPanel value={value} index={i}>\n                    {/*<ViewAllCards key={i} item={item}/>*/}\n                    <ViewAllCards_newAlgoritm key={i} item={item}/>\n                    \n                </TabPanel>\n            })}\n        </Box>\n    )   \n}\n\n\nexport default PageNewAlgoritm;","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Pages/PageNewAlgoritmAddOrder.tsx",["702","703","704","705","706","707","708","709","710","711","712","713","714","715","716","717","718"],"import  React, { useEffect,useState,useRef } from 'react'\nimport axios from 'axios'\nimport serverApiHost,{port} from \"../../global\";\n\nimport { Grid } from '@material-ui/core';\nimport CardOrderInNewAlgoritmDefault from '../Card/Pages/CardOrderInNewAlgoritmDefault';\n\nimport { experimentalStyled as styled } from '@mui/material/styles';\nimport Paper from '@mui/material/Paper';\n\nimport {IDataColorOrderInDefault} from '../Data/DataCardOrderInDefault/IDataColorOrderInDefault'\n\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport IconButton from '@mui/material/IconButton';\nimport Button from '@mui/material/Button';\n\nimport { useActionOrders } from '../../hooks/useActionOrders';\nimport { useTypedSelector } from '../../hooks/leftMenuSelector';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { Box } from '@material-ui/system';\nimport IDataOrder from '../Data/IDataOrder';\nimport OrderRole from '../Data/OrderRole';\n\nimport DialogAddOrder from '../Dialog/DialogAddOrder'\nimport IDialogAddOrder from '../Data/Dialog/IDialogAddOrder'\nimport IDataProduction from '../Data/IDataProduction';\n\n\n\n/////////////////////////////////\nimport Order_view from '../Data/IDataOrder/IDataOrder'\nimport DialogAddOrderNewAlgoritm from '../Dialog/DialogAddOrderNewAlgoritm';\n\nimport ToggleButtonMy from '../PageExample/ToggleButtonMy'\nimport TableView from '../PageExample/DemoArchive'\n\n///////////////////////////////////\n\nconst Item = styled(Paper)(({ theme }) => ({\n    ...theme.typography.body2,\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  }));\n\n\n\nconst PageNewAlgoritmAddOrder = () =>\n{\n//const {orders, loading} = useTypedSelector(state => state.orders);\n//const {ordersLoading,orderAdd} = useActionOrders()\n\n\nconst [orders, SetOrders] = useState<Order_view[]>();\nconst [loading, SetLoading] = useState(true);\n\nconst [update, SetUpdate] = useState(false);\n\nconst ordersLoading = async () => {\n\n    const response = await axios.get('http://'+serverApiHost+':'+port+'/api/cardVSM/getallOrdersInPrepair')\n\n    if(response.status != 200)\n    {\n      return ;\n    }\n\n    let content = response.data as any;\n\n    let ordersFromServer =  content.orders as Order_view[];\n    SetOrders(ordersFromServer);\n    //console.log(\"orders = \",orders,ordersFromServer )\n    SetLoading(false);\n    SetUpdate(true);\n   // console.log(\"ordersLoading\")\n    SetUpdate(false);\n}\n\nconst orderAdd = async (newOrder : IDialogAddOrder) =>{\n    SetUpdate(true);\n\n    console.log(\"SetUpdate\")\n    const response = await axios.post('http://'+serverApiHost+':'+port+'/api/cardVSM/addorderprepair',JSON.stringify(newOrder),{\n        headers: {\n          // Overwrite Axios's automatically set Content-Type\n          \"Access-Control-Allow-Origin\": \"*\",\n          'Content-Type': 'application/json'\n        }\n      })\n\n    SetUpdate(false);\n}\n\nconst isInitialMount = useRef(true);\n\nuseEffect(() => {\n    const timer = setTimeout(async () => await ordersLoading(), 1000);\n    return () => {\n      clearTimeout(timer);\n    };   \n},[update]) //orders\n\n\n\nconst [alignment, setAlignment] = React.useState('left');\n\n  const handleChange = (\n    event: React.MouseEvent<HTMLElement>,\n    newAlignment: string,\n  ) => {\n\n    setAlignment(newAlignment);\n\n  };\n\n\nconst [newOrder,setOrder] = useState<IDialogAddOrder>();\n\nconst addOrder= (value : IDialogAddOrder) =>\n{\n    //console.log(\"NEW = \", value)\n    if(value.name == undefined || value.products.length === 0)\n    {\n        //console.log(\"НЕТ \")\n        return ;\n    }\n    orderAdd(value);\n}\n\n\nconst even = (n: number) => !(n % 2);\n\n//Array.from(Array(10))\n\n\nconst startSimulation = async (name: string, sim: boolean) => {\n    SetUpdate(true);\n    let copyObjet = {\n      name: name,\n      simulation: sim\n    }\n            const response = await axios.post('http://'+serverApiHost+':'+port+'/api/cardVSM/addorderinwork',JSON.stringify(copyObjet),\n            {\n                headers: {\n                   \"Access-Control-Allow-Origin\": \"*\",\n                  'Content-Type': 'application/json'\n                }\n            })\n\n            if(response.status === 200)\n            {\n                console.log(\"Add Ok\");\n            }\n\n     SetUpdate(false);\n  }\n\n\n\n\nif(loading)\n{\n    return (\n        <Box sx={{ display: 'flex', justifyContent: 'center' }}>\n          <CircularProgress />\n        </Box>\n    )\n}\n\nconst listData =  orders?.map((item: Order_view, index)=>{\n\n    if(item === undefined)\n    {\n        return ;\n    }\n\n    let OrderColor = IDataColorOrderInDefault.NotWork;\n    switch(item.orderRole)\n    {\n        case OrderRole.Actual:\n            OrderColor = IDataColorOrderInDefault.NotWork\n            break;\n        case OrderRole.Work:\n            OrderColor = IDataColorOrderInDefault.InWork\n            break;\n\n        case OrderRole.ArchiveBad:\n            OrderColor = IDataColorOrderInDefault.DoneBad\n            break;\n        case OrderRole.ArchiveGood:\n            OrderColor = IDataColorOrderInDefault.DoneGood\n            break;\n        default:\n            break;\n    }\n\n   return (\n       <Grid item xs={12} sm={6} md={4} lg={4} xl={3} key={index}>\n           <CardOrderInNewAlgoritmDefault OrderColor={OrderColor} data={item}/>\n       </Grid>\n   )\n})\n\n\n    return (\n            <div>\n                <Box > {/*sx={{margin:'0px 10px 0px 10px'}}*/}\n                    <div style={{display: 'flex', justifyContent: 'space-between',alignItems: 'center', padding: '0px 10px 0px 10px'}}>\n                        <div>\n                        <h3>Заказы для расчета времени</h3>\n                        <DialogAddOrderNewAlgoritm addOrder={addOrder}/>\n                        </div>\n                        <div>\n                            <ToggleButtonMy alignment= {alignment} handleChange={handleChange}/>\n                        </div>\n                    </div>\n                    <Box sx={{display: 'flex', padding: '0px 10px 0px 10px'}}>\n\n\n                    { alignment === 'left' ? \n                            <TableView orders={orders} view={\"prepair\"} startSimulation={startSimulation}/>\n                        :\n                        \n                        <Grid container spacing={2}>\n                            {listData}\n                        </Grid>\n                        }\n                    </Box>\n                </Box>\n            </div>\n    ) \n}\n\nexport default PageNewAlgoritmAddOrder;\n\n//xs={12} sm={6} md={4} lg={4} xl={3}\n//xs={12} md={3}\n/*\n  <DialogAddOrder addOrder={addOrder}/>\n            <Box sx={{display: 'flex'}}>\n                <Grid container spacing={2}>\n                    {listData}\n                </Grid>\n            </Box>\n            */","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Card/Pages/CardOrderInNewAlgoritmDefault.tsx",["719","720","721","722","723","724","725","726","727","728"],"import React,{useEffect, useState,useRef} from 'react';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport { CardHeader, IconButton } from '@material-ui/core';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport { Divider } from '@mui/material';\n\nimport {IDataColorOrderInDefault} from '../../Data/DataCardOrderInDefault/IDataColorOrderInDefault'\nimport IDataOrder from '../../Data/IDataOrder';\nimport { Redirect,useHistory, useLocation } from 'react-router'\nimport { useActionOrders } from '../../../hooks/useActionOrders';\nimport { useTypedSelector } from '../../../hooks/leftMenuSelector';\n\nimport axios from 'axios'\nimport ip, {port} from '../../../global'\n\nimport moment from 'moment';\nimport Order_view from '../../Data/IDataOrder/IDataOrder';\nimport OrderRole from '../../Data/OrderRole';\n\nenum simulationEnum{\n  Start = 'Запустить симуляцию',\n  Stop = 'Остановить симуляцию'\n}\nconst CardOrderInNewAlgoritmDefault = (props:{OrderColor: IDataColorOrderInDefault, data: Order_view}) => {\n\n  const {Start,Stop} = simulationEnum;\n\n\n  \n  const [simulation, setSimulation] = useState({\n    text: simulationEnum.Start,\n    color: IDataColorOrderInDefault.NotWork,\n    work: false\n  });\n\n\n  //const [simulation, setSimulation] = useState(false)\n\n  const[order, setOrder] = useState<Order_view>(props.data);\n\n\n  if(props.data.name != order.name)\n  {\n    setOrder(props.data);\n    setSimulation({\n      text: simulationEnum.Start,\n      color: IDataColorOrderInDefault.NotWork,\n      work: false\n    });\n  }\n\n  //const {startSimulation, updateInfoOrder} = useActionOrders()\n\n\n  const startSimulation = async (name: string, sim: boolean) => {\n\n    let copyObjet = {\n      name: name,\n      simulation: sim\n    }\n            const response = await axios.post('http://'+ip+':'+port+'/api/cardVSM/addorderinwork',JSON.stringify(copyObjet),\n            {\n                headers: {\n                   \"Access-Control-Allow-Origin\": \"*\",\n                  'Content-Type': 'application/json'\n                }\n            })\n\n            if(response.status === 200)\n            {\n                console.log(\"Add Ok\")\n            }\n  }\n\n  const onSimulation = () => {\n\n    if(simulation.work)\n    {\n      let sim = !simulation.work;\n      setSimulation({...simulation, work:sim, text: Stop , color: IDataColorOrderInDefault.Stoped  })\n      startSimulation(order.name, sim);\n    }\n    else\n    {\n      let sim = !simulation.work;\n      setSimulation({...simulation, work:sim, text: Start, color: IDataColorOrderInDefault.InWork })\n      startSimulation(order.name, sim);\n    }\n   // let newObj = {...order, simulation: !simulation};\n\n    //setSimulation(newObj.simulation);\n    //setOrder(newObj);\n    //startSimulation(newObj);\n  }\n\n  //let flag = (simulation.text === simulationEnum.Stop && simulation.work)\n\n  const timer = useRef(null);\n  const GetInformation = async() => {\n\n    let copyObjet = {\n      name: order.name,\n      simulation: order.simulation\n    }\n\n    const response = await axios.post('http://'+ip+':'+port+'/api/cardVSM/updateInfoOrder',JSON.stringify(copyObjet),\n    {\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          'Content-Type': 'application/json'\n        }\n    })\n\n    if(response.status === 200)\n    {\n       let responseData =  JSON.parse(JSON.stringify(response.data)) as Order_view;\n\n       if(responseData.simulation === false && (responseData.orderRole === OrderRole.ArchiveGood || responseData.orderRole === OrderRole.ArchiveBad ) )\n       {\n        setSimulation({...simulation, work: false, text: Stop, color: IDataColorOrderInDefault.DoneGood  })\n       }\n       setOrder(responseData);\n    }\n  }\n\n  \n   \n  useEffect(() => {\n    const timer = setTimeout(() => GetInformation(), 500); \n    return () => {\n      clearTimeout(timer);\n    };\n  },[order]);\n \n  const history = useHistory();\n\n  const openInfo = () => {\n    history.push('/orderInfo', { data: props.data});\n  }\n\n\n    // Helper\nconst StringIsNumber = (value: any,index: any) => {if(index === order?.orderRole-1) return true};\n\n// Turn enum into array\nfunction ToArray(enumme: any) {\n    return Object.keys(enumme)\n        .filter(StringIsNumber)\n        .map(key => enumme[key])\n        .at(0);\n}\n\nlet listRole = ToArray(IDataColorOrderInDefault);\n\n\n\n\n\n\nlet timeTActual = moment.unix(order?.tActual).utc().format('H:m:s')\n\n  return (\n    <Card sx={{ minWidth: 200,color: simulation.work ? 'white':'black',  backgroundColor: simulation.color }}>\n      <CardHeader\n        titleTypographyProps={{ variant: \"h6\" }}\n        action={\n         <div>\n          <IconButton \n          aria-label=\"settings\"\n          onClick={openInfo}>\n            <SettingsIcon style={{color: ''}}/>\n          </IconButton>\n         </div>\n        }\n        title={\"Заказ номер: \"+order?.name}\n        subheader={\n        <Typography style={{color: simulation.work ? 'white':'black'}}>\n          \n          Актуальное время выполнения: { order.orderRole === OrderRole.ArchiveGood || order.orderRole === OrderRole.ArchiveBad  || order.orderRole === OrderRole.Work ? timeTActual : ''}   \n                   <Divider/>\n                   <div style={{display: 'flex', justifyContent:'space-around'}} >\n                    <p>Актуальное время: {moment(Date.now()).format('MM/DD/YYYY H:m:s')}</p>\n                    <p>Срок до: {moment(order?.limitation).format('MM/DD/YYYY H:m:s')}</p>\n                  </div>\n                  <div style={{display: 'flex', justifyContent:'space-around'}} >\n                    <p>План: {moment.unix(order?.tPlan).utc().format('H:m:s') + \" (\"+order?.tPlan+\" сек)\"} </p>\n                    <p>Прогноз: {moment.unix(order?.tFuture).utc().format('H:m:s') + \" (\"+order?.tFuture+\" сек)\"}</p>\n                  </div>\n                  \n        </Typography>\n      }\n      />\n      <Divider/>\n      <CardActions>\n        <Button style={{borderColor: simulation.work ? '':'white',backgroundColor: simulation.work ? '#12824C':'', color: '#FFFFFF'}} size=\"small\" variant={simulation.work ? \"contained\":\"outlined\"} onClick={onSimulation}>\n          {simulation.work ? \"Остановить симуляцию\":\"Запустить симуляцию\"}\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nexport default CardOrderInNewAlgoritmDefault;","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Dialog/DialogAddOrderNewAlgoritm.tsx",["729","730","731","732","733","734","735","736","737","738","739","740","741","742","743","744","745","746","747","748","749","750","751","752","753"],"import * as React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport PersonIcon from '@material-ui/icons/Person';\nimport AddIcon from '@material-ui/icons/Add';\nimport Typography from '@material-ui/core/Typography';\nimport { blue } from '@material-ui/core/colors';\n\n//import TextField from '@material-ui/core/TextField';\n\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Transition from './Transition'\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport IDialogAddOrder,{IData, IDataTime, ITime} from '../Data/Dialog/IDialogAddOrder'\nimport IDialogAddOrderItem from '../Data/Dialog/IDialogAddOrderItem'\nimport IconButton from '@mui/material/IconButton';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\n\nimport TextField from '@mui/material/TextField';\nimport AdapterMoment from '@mui/lab/AdapterMoment';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport DateTimePicker from '@mui/lab/DateTimePicker';\n\nimport Divider from '@mui/material/Divider';\n\nimport moment from 'moment'\n\nexport interface SimpleDialogProps {\n  open: boolean;\n  selectedValue: IDialogAddOrder;\n  onClose: (value: IDialogAddOrder) => void;\n  addOrder: (value: IDialogAddOrder) => void\n}\n\n\n\nfunction SimpleDialog(props: SimpleDialogProps) {\n  const { onClose, selectedValue, open,addOrder } = props;\n\n  const [newOrder, setNewOrder] = React.useState<IDialogAddOrderItem[]>();\n  const [order, setOrder] = React.useState<IDialogAddOrder>();\n\n  const handleClose = () => {\n    onClose(selectedValue);\n\n\n    let update = {...order, products: newOrder as  IDialogAddOrderItem[]} as IDialogAddOrder\n    setOrder(update)\n\n\n    addOrder(update)\n  };\n\n  \n  const handleChangeName = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setOrder({...order, name: event.target.value} as IDialogAddOrder)\n  };\n\n  const handleChangePriority = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setOrder({...order, priority: Number(event.target.value)} as IDialogAddOrder)\n  };\n\n  const handleChangeTime = (event: React.ChangeEvent<HTMLInputElement>) => {\n    \n    let arrayDataTime = splitString(event.target.value, \"T\");\n\n    let arrayData = arrayDataTime[0].split(\"-\");\n    let arrayTime = arrayDataTime[1].split(\":\");\n\n\n    let DataTime = new Object as IDataTime;\n\n\n    let itime = new Object as ITime;\n    itime.hour =  arrayTime[0];\n    itime.minute =  arrayTime[1];\n\n    let idata = new Object as IData;\n    idata.year =  arrayData[0];\n    idata.month =  arrayData[1];\n    idata.day =  arrayData[2];\n\n    DataTime.data = idata;\n    DataTime.time = itime;\n\n    setOrder({...order, finishTime: DataTime} as IDialogAddOrder)\n\n  };\n\n  const splitString = (stringToSplit: string, separator: string) => {\n    var arrayOfStrings = stringToSplit.split(separator);\n  \n    //console.log('Оригинальная строка: \"' + stringToSplit + '\"');\n    //console.log('Разделитель: \"' + separator + '\"');\n    //console.log('Массив содержит ' + arrayOfStrings.length + ' элементов: ' + arrayOfStrings.join(' / '));\n\n\n    //var dateParts = arrayOfStrings[0].split(\"-\") as any;\n    //var date = new Date(dateParts[0], (dateParts[1] - 1), dateParts[2]);\n\n    //console.log(\"dateParts = \" + dateParts);\n    //console.log(\"data = \" + date);\n\n    return arrayOfStrings;\n  }\n\n\n\n\n  const [value, setValue] = React.useState<Date | null>(new Date());\n\n\n  return (\n    <Dialog open={open}>\n      <DialogTitle>Формирование заказа\n      \n      </DialogTitle>\n\n      {/*<LocalizationProvider dateAdapter={AdapterMoment}>\n        <DateTimePicker\n          renderInput={(props) => <TextField {...props} />}\n          label=\"DateTimePicker\"\n          value={value}\n          onChange={(newValue) => {\n            setValue(newValue);\n          }}\n        />\n        </LocalizationProvider>*/}\n\n     \n\n      <TextField\n            onChange={handleChangeName}\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Название заказа\"\n            type=\"name\"\n            fullWidth\n            variant=\"standard\"\n            inputProps={{min: 0, style: { textAlign: 'center' }}} // the change is here\n      />\n      <TextField\n            onChange={handleChangePriority}\n            autoFocus\n            margin=\"dense\"\n            id=\"priority\"\n            label=\"Приоритет\"\n            type=\"priority\"\n            fullWidth\n            variant=\"standard\"\n            inputProps={{min: 0, style: { textAlign: 'center' }}} // the change is here\n      />\n\n      <TextField\n        id=\"datetime-local\"\n        label=\"Срок\"\n        type=\"datetime-local\"\n        defaultValue=\"2022-01-17T12:00\"\n        sx={{ width: 250, margin: '20px' }}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={handleChangeTime}\n      /> \n     \n\n      <Transition setNewOrder={setNewOrder}/>\n      <DialogActions>\n          <Button onClick={handleClose}>Отменить</Button>\n          <Button onClick={handleClose} autoFocus>\n            Сформировать\n          </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport default function DialogAddOrderNewAlgoritm(props:{addOrder: (value: IDialogAddOrder) => void}) {\n  const [open, setOpen] = React.useState(false);\n  const [selectedValue, setSelectedValue] = React.useState<IDialogAddOrder>();\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n\n  return (\n    <div style={{width: '100%'}}>\n      <Button \n      variant=\"contained\" \n      size=\"small\"\n      onClick={handleClickOpen}\n      startIcon={<AddCircleOutlineIcon  fontSize=\"small\"/>}>\n        Добавить заказ\n      </Button>\n\n      <SimpleDialog\n        selectedValue={selectedValue as IDialogAddOrder}\n        open={open}\n        onClose={handleClose}\n        addOrder={props.addOrder}\n      />\n    </div>\n  );\n}\n\n/*\n\n    <div>\n      <Typography variant=\"subtitle1\" component=\"div\">\n        Selected: {selectedValue}\n      </Typography>\n      <br />\n      <Button variant=\"outlined\" onClick={handleClickOpen}>\n        Open simple dialog\n      </Button>\n      <SimpleDialog\n        selectedValue={selectedValue}\n        open={open}\n        onClose={handleClose}\n      />\n    </div>\n\n*/","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Card/AllCardsView/ViewAllCards_newAlgoritm.js",["754","755","756"],"import React from 'react';\nimport {MapInteractionCSS } from 'react-map-interaction';\nimport ViewCard_all from './ViewCard_all'\nimport ViewCard_all_newAlgoritm from './ViewCard_all_newAlgoritm';\n\nclass ViewAllCards_newAlgoritm extends React.Component{\n  constructor(props)\n  {\n    super(props);\n\n  }\n\n  render()\n  {\n    return (\n    <div style ={{width: '100%', height: '89vh'}}>\n      <MapInteractionCSS defaultValue={{scale: 0.5,translation : {x : 0,y: 0}}}>\n          {/*<ViewOrderCard data={this.props.sections} productionId={this.props.productionId}/> */}\n          <ViewCard_all_newAlgoritm card_view={this.props.item}/>\n      </MapInteractionCSS>\n    </div>\n    );\n  }\n}\n\nexport default ViewAllCards_newAlgoritm;","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Card/AllCardsView/ViewCard_all_newAlgoritm.tsx",["757","758","759","760","761","762","763","764","765","766","767","768","769","770","771","772","773","774","775","776","777","778"],"import React,{useEffect, useState} from 'react'\n\nimport IDataCardSection from '../../Data/IDataCardSection'\nimport IDataOrderItem from '../../Data/IDataOrderItem'\nimport Divider from '@material-ui/core/Divider';\nimport ViewCard from '../ViewCard'\n\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { Box } from '@material-ui/system';\n\n\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardContent from '@material-ui/core/CardContent'\n\nimport IconButton from '@material-ui/core/IconButton'\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport SettingsIcon from '@material-ui/icons/Settings';\n\nimport IDataVSM from '../../Data/IDataVSM'\nimport IDataProduction from '../../Data/IDataProduction';\nimport IDataCardVSM from '../../Data/IDataCardVSM';\nimport { useCardVSMActionType, useProductionCardVSM } from '../../../type/useCardVSMType';\n\nimport { useActionCardVSM } from '../../../hooks/useActionCardVSM';\nimport { useTypedSelector } from '../../../hooks/leftMenuSelector';\nimport IDataOrder from '../../Data/IDataOrder';\nimport { MyCards, OrderMy } from '../../../type/useOrdersType';\nimport { Card_view, SectionLogic_view } from '../../Data/IDataOrder/IDataOrder';\nimport ChartLine from '../../Charts/ChartLine';\n\n\n\nconst ViewCard_all_newAlgoritm =  (props: {card_view: Card_view}) => {\n\n    return(\n        <div>\n        {/*<div style={{height: \"300px\"}}>\n            <ChartLine card_view={props.card_view}/>  \n        </div> */} \n        <Card sx={{marginBottom: '150px'}}>\n            <CardHeader\n                action={\n                    <IconButton aria-label=\"settings\">\n                        <SettingsIcon />\n                    </IconButton>\n                }\n                title={'\\\"'+props.card_view.name + '\\\"'}\n                sx={{fontWeight: 'bold',color: 'white', backgroundColor: '#575757'}}\n                style={{color: 'white'}}\n            >\n                \n            </CardHeader>\n            <CardContent sx={{backgroundColor: 'rgba(0, 0, 0, .03)'}}>\n                <ViewCard sectionLogic_views={props.card_view.sectionLogic_views}/>\n           </CardContent>\n        </Card>\n        </div>\n\n    )\n\n\n    \n}\n\n\nexport default ViewCard_all_newAlgoritm;","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Card/Pages/CardOrderInNewAlgoritmArchive.tsx",["779","780","781","782","783","784","785","786","787","788","789","790","791"],"import React,{useEffect, useState,useRef} from 'react';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport { CardHeader, IconButton } from '@material-ui/core';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport { Divider } from '@mui/material';\n\nimport {IDataColorOrderInDefault} from '../../Data/DataCardOrderInDefault/IDataColorOrderInDefault'\nimport IDataOrder from '../../Data/IDataOrder';\nimport { Redirect,useHistory, useLocation } from 'react-router'\nimport { useActionOrders } from '../../../hooks/useActionOrders';\nimport { useTypedSelector } from '../../../hooks/leftMenuSelector';\n\nimport axios from 'axios'\nimport ip, {port} from '../../../global'\n\nimport moment from 'moment';\nimport Order_view from '../../Data/IDataOrder/IDataOrder';\nimport OrderRole from '../../Data/OrderRole';\n\nconst CardOrderInNewAlgoritmArchive = (props:{OrderColor: IDataColorOrderInDefault, data: Order_view}) => {\n\n\n  const [simulation, setSimulation] = useState({\n    color: IDataColorOrderInDefault.DoneGood,\n    work: false\n  });\n\n  const[order, setOrder] = useState<Order_view>(props.data);\n\n\n  if(props.data.name != order.name)\n  {\n    setOrder(props.data);\n    setSimulation({\n      color: IDataColorOrderInDefault.DoneGood,\n      work: false\n    });\n  }\n\n\n  const startSimulation = async (name: string, sim: boolean) => {\n\n    let copyObjet = {\n      name: name,\n      simulation: sim\n    }\n            const response = await axios.post('http://'+ip+':'+port+'/api/cardVSM/addorderinwork',JSON.stringify(copyObjet),\n            {\n                headers: {\n                   \"Access-Control-Allow-Origin\": \"*\",\n                  'Content-Type': 'application/json'\n                }\n            })\n\n            if(response.status === 200)\n            {\n                console.log(\"Add Ok\")\n            }\n  }\n\n\n  const timer = useRef(null);\n  const GetInformation = async() => {\n\n    let copyObjet = {\n      name: order.name,\n      simulation: order.simulation\n    }\n\n    const response = await axios.post('http://'+ip+':'+port+'/api/cardVSM/updateInfoOrder',JSON.stringify(copyObjet),\n    {\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          'Content-Type': 'application/json'\n        }\n    })\n\n    if(response.status === 200)\n    {\n       let responseData =  JSON.parse(JSON.stringify(response.data)) as Order_view;\n\n       setOrder(responseData);\n    }\n  }\n\n   \n  useEffect(() => {\n    const timer = setTimeout(() => GetInformation(), 500); \n    return () => {\n      clearTimeout(timer);\n    };\n  },[order]);\n \n  const history = useHistory();\n\n  const openInfo = () => {\n    history.push('/orderInfo', { data: props.data});\n  }\n\n\n    // Helper\nconst StringIsNumber = (value: any,index: any) => {if(index === order?.orderRole-1) return true};\n\n// Turn enum into array\nfunction ToArray(enumme: any) {\n    return Object.keys(enumme)\n        .filter(StringIsNumber)\n        .map(key => enumme[key])\n        .at(0);\n}\n\nlet listRole = ToArray(IDataColorOrderInDefault);\n\n\nlet timeTActual = moment.unix(order?.tActual).utc().format('H:m:s')\n\n  return (\n    <Card sx={{ minWidth: 100,color:'white',  backgroundColor: simulation.color }}>\n      <CardHeader\n        titleTypographyProps={{ variant: \"h6\" }}\n        action={\n         <div>\n          <IconButton \n          aria-label=\"settings\"\n          onClick={openInfo}>\n            <SettingsIcon style={{color: ''}}/>\n          </IconButton>\n         </div>\n        }\n        title={\"Заказ номер: \"+order?.name}\n      />\n      <Divider/>\n      <Typography style={{color: 'white', padding: '0px', margin: '0px'}}>\n                     <div style={{display: 'flex', justifyContent:'space-around'}} >\n                      <p>Срок до: {moment(order?.limitation).format('MM/DD/YYYY H:m:s')}</p>\n                    </div>\n      </Typography>\n      <Divider/>\n      <CardActions style={{justifyContent: 'center'}}>\n        <Typography style={{color:'white'}}> \n                   <div style={{display: 'flex', justifyContent:'space-around'}} >\n                    <p>Затраченное время: {timeTActual}</p>\n                  </div>\n        </Typography>\n      </CardActions>\n    </Card>\n  );\n}\n\nexport default CardOrderInNewAlgoritmArchive;","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/CustomizedAccordionsNewAlgoritm.tsx",["792","793","794","795","796","797","798","799","800","801","802","803","804","805","806","807","808","809","810"],"import * as React from 'react';\nimport { styled } from '@material-ui/core/styles';\nimport ArrowForwardIosSharpIcon from '@material-ui/icons/ArrowForwardIosSharp';\nimport MuiAccordion, { AccordionProps } from '@material-ui/core/Accordion';\nimport MuiAccordionSummary, {\n  AccordionSummaryProps,\n} from '@material-ui/core/AccordionSummary';\nimport MuiAccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\n\n//\nimport CustomizedAccordiongsHeaderNewAlgoritm from './CustomizedAccordiongsHeaderNewAlgoritm';\nimport View from './Card/View'\n//\nimport IDialogAddOrder from './Data/Dialog/IDialogAddOrder'\nimport IDialogAddOrderItem from './Data/Dialog/IDialogAddOrderItem'\n\n//\nimport { useActionOrders } from '../hooks/useActionOrders';\nimport { useTypedSelector } from '../hooks/leftMenuSelector';\nimport IDataOrder from './Data/IDataOrder';\n\nimport * as signalR from \"@microsoft/signalr\";\nimport useWebSocket, { ReadyState } from 'react-use-websocket';\n\nimport {OrderMy} from '../type/useOrdersType'\n\nimport ip,{URL_orderList} from '../global'\nimport serverApiHost,{port} from \"../global\";\n\nimport axios from 'axios';\nimport Order_view from './Data/IDataOrder/IDataOrder';\nimport ViewNewAlgorithm from './Card/ViewNewAlgorithm';\nlet URL = 'ws://+ip+:5001/orderlist';\n\nconst Accordion = styled((props: AccordionProps) => (\n  <MuiAccordion disableGutters elevation={0} square {...props} />\n))(({ theme }) => ({\n  border: `1px solid ${theme.palette.divider}`,\n  '&:not(:last-child)': {\n    borderBottom: 0,\n  },\n  '&:before': {\n    display: 'none',\n  },\n}));\n\nconst AccordionSummary = styled((props: AccordionSummaryProps) => (\n  <MuiAccordionSummary\n    expandIcon={<ArrowForwardIosSharpIcon sx={{ fontSize: '0.9rem' }} />}\n    {...props}\n  />\n))(({ theme }) => ({\n  backgroundColor:\n    theme.palette.mode === 'dark'\n      ? 'rgba(255, 255, 255, .05)'\n      : 'rgba(0, 0, 0, .03)',\n  flexDirection: 'row-reverse',\n  '& .MuiAccordionSummary-expandIconWrapper.Mui-expanded': {\n    transform: 'rotate(90deg)',\n  },\n  '& .MuiAccordionSummary-content': {\n    margin: 0\n  },\n}));\n\n\n\nlet count = 2;\n\n\n\n////////\n\nconst AccordionDetails = styled(MuiAccordionDetails)(({ theme }) => ({\n  padding: theme.spacing(2),\n  borderTop: '1px solid rgba(0, 0, 0, .125)',\n}));\n\nexport default function CustomizedAccordionsNewAlgoritm(props:{newOrder: IDialogAddOrder}) {\n  const [expanded, setExpanded] = React.useState<string | false>('panel1');\n\n  const handleChange =\n    (panel: string) => (event: React.SyntheticEvent, newExpanded: boolean) => {\n      setExpanded(newExpanded ? panel : false);\n    };\n\n\n    const {orders2, loading} = useTypedSelector(state => state.orders);\n    const {ordersLoading2} = useActionOrders()\n\n\n   \n\n\n \n    const socket = React.useRef(null)  as any;\n    //const [myOrders, setMyOrders] = React.useState([] as IDataOrder[]);\n    const [myOrders, setMyOrders] = React.useState([] as OrderMy[]);\n    const [reconnect, setRecconect] = React.useState(false);\n\n\n    const [orders, SetOrders] = React.useState<Order_view[]>();\n\n    const updateOrderWork = async () =>{\n      const response = await axios.post('http://'+serverApiHost+':'+port+'/api/cardVSM/getAllOrderInWork',{\n          headers: {\n            // Overwrite Axios's automatically set Content-Type\n            \"Access-Control-Allow-Origin\": \"*\",\n            'Content-Type': 'application/json'\n          }\n        })\n\n        if(response.status != 200)\n        {\n          return ;\n        }\n\n        console.log(\"updateOrderWork = \", response.data)\n\n        let content = response.data as any;\n\n        let object = content.orders as Order_view[];\n        \n        SetOrders(object)\n  }\n  \n  \n  React.useEffect(() => {\n      const timer = setTimeout(async () => await updateOrderWork(), 1000);\n      return () => {\n        clearTimeout(timer);\n      };   \n  },[orders])\n \n\n  let listData = orders?.map((item: Order_view, index: number)=>{\n      let idName = \"panel\"+index+\"a-header\"\n      let ariaControls = \"panel\"+index+\"a-content\"\n\n\n      return (  \n              <Accordion key={index} TransitionProps={{ unmountOnExit: true }}>\n                <AccordionSummary\n                  expandIcon={<ArrowForwardIosSharpIcon/>}\n                  aria-controls={ariaControls}\n                  id={idName}\n                >\n                  <Typography component={'span'} sx={{width: '100%',marginLeft:'10px'}}>\n                    <CustomizedAccordiongsHeaderNewAlgoritm data={item}/>\n                  </Typography>\n                </AccordionSummary>\n                <AccordionDetails  sx={{height: 'calc(100vh - 200px)'}}>\n                  <ViewNewAlgorithm key={index} item={item}/>\n                </AccordionDetails>\n              </Accordion>\n      )\n    })\n\n\n    return (\n      <div style={{paddingLeft: '50px', paddingRight: '50px'}}>\n      {\n       reconnect ?  \n      <button onClick={() => setRecconect(!reconnect)}>\n\t\t\t Переподключение\n\t\t\t</button> \n      :\n      null\n      }\n\n        {listData?.length === 0  ? \n        \n        <p>В работе нет заказов</p>\n        \n        :listData }\n      </div>\n    );\n}\n","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/CustomizedAccordiongsHeaderNewAlgoritm.tsx",["811","812","813","814","815","816","817","818","819","820"],"import moment from 'moment';\nimport React,{useState} from 'react'\nimport IDataOrder from './Data/IDataOrder';\n\nimport PauseIcon from '@material-ui/icons/Pause';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport ArchiveIcon from '@material-ui/icons/Archive';\nimport StopIcon from '@material-ui/icons/Stop';\nimport WorkIcon from '@material-ui/icons/Work';\n\nimport { IconButton } from '@material-ui/core';\n\nimport { useActionOrders } from '../hooks/useActionOrders';\nimport { useTypedSelector } from '../hooks/leftMenuSelector';\nimport usePrevious from '../hooks/usePrevious';\n\n\nimport ip from '../global'\nimport Order_view from './Data/IDataOrder/IDataOrder';\nlet URL = 'ws://'+ip+':5001/wsItem';\n\ninterface IDataHeader{\n    name?: string,\n    TActual: number,\n    TPlan: number\n}\n\n\n\nconst CustomizedAccordiongsHeaderNewAlgoritm = (props:{data: Order_view})  => \n{\n    const [order, setOrder] = useState<Order_view>(props.data); //props.data\n\n    const [bad,setBad] = useState(false);\n    const [textPeriod,setTextPeriod] = useState(\"\");\n\n\n    React.useEffect(() => {\n        setOrder(props.data);\n    }, [props.data]);\n\n\n  \n\n    //const {orders, loading} = useTypedSelector(state => state.orders);\n    //const {updateInfoOrder} = useActionOrders()\n\n    //const prevOrder = usePrevious(order) as IDataOrder | undefined;\n\n  /* React.useEffect(() => {\n        const timer = setTimeout(() => updateInfoOrder(order as IDataOrder), 1000); \n        return () => {\n          clearTimeout(timer);\n        };  \n    })*/\n    \n\n  /* React.useEffect(() => {\n        if(prevOrder != undefined)\n        {\n            if(prevOrder.tActual  != order.tActual)\n            {\n                setOrder(props.data)\n            }\n        }\n    },[props.data])*/\n\n   /* console.log(prevOrder, props.data)\n    if(prevOrder != undefined)\n    {\n           \n     }*/\n\n///\n\n/*\n    const socket = React.useRef(null)  as any;\n    const [reconnect, setRecconect] = React.useState(false);\n  \n      React.useEffect(() => {\n\t\tconsole.log(\"Set socket after order= \", socket.current);\n\t\tif (!socket.current || reconnect === false) {\n\t\t\tconsole.log(\"Set socket = \", socket.current);\n\t\t\tsocket.current = new WebSocket(URL) ;\n\t\t\tsocket.current.onmessage = (e: any) => {\n\t\t\t\t\n               \n\t\t\t\tconst OrdersFromServer = JSON.parse(e.data) as IDataOrder;  \n\t\t\t\t//console.log(\"e\", OrdersFromServer);\n                //console.log(\"e order\", order);\n\t\t\t\tsetOrder(OrdersFromServer);\n\t\t\t};\n\n\t\t\tsocket.current.onopen = () => {\n\t\t\t\t// on connecting, do nothing but log it to the console\n\t\t\t\tconsole.log('connected')\n\t\t\t\tsocket.current.send(JSON.stringify({ id: props.data.id}));\n\t\t\t}\n\n\t\t\t\n\n\t\t\tsocket.current.onerror = (e : any) => {\n\t\t\t\tconsole.log(\"eror\", e.data);\n        console.log(\"CONNECTION CLOSED\", e.data);\n\t\t\t\tsocket.current.close(1000, \"\");\n\n        setRecconect(true);\n\t\t\t};\n\n\t\t\tsocket.current.onclose = (e : any)=>{\n\t\t\t\tconsole.log(\"CONNECTION CLOSED\", e.data);\n\t\t\t\tsocket.current.close(1000, \"\");\n\n\t\t\t\tsetRecconect(true);\n\t\t\t}\n\t\t}\n\t\treturn () => {\n\t\t  if (socket.current) {\n\t\t\tsocket.current.close(1000, \"\");\n\t\t  }\n\t\t};\n\t  }, [socket,reconnect]);\n\n\n      if(order === null || order === undefined)\n      {\n          return (\n             <p>Не нашел</p>\n          )\n      }\n      */\n\n      //console.log(\"rerender Order = \", order?.id)\n\n\n    /* if(order?.tActual  != props.data.tActual)\n     {\n         setOrder(props.data)\n     }*/\n\n   \n   \n    const {\n        name,\n        tActual,\n        tPlan,\n        tFuture,\n        tStop,\n        tStart,\n        limitation} = order as Order_view;\n  \n\n    \n\n    let timeTActual = moment.unix(tActual).utc().format('HH:mm:ss')\n    let timeTPlan =  moment.unix(tPlan).utc().format('HH:mm:ss')\n    \n\n\n    const ConvertPeriodToString = (timePeriod: any)=>\n    {\n        var list = timePeriod.split(' ')\n\n        let text = timePeriod;\n        //console.log(list);\n\n        if(list[0] === 'in')\n        {\n\n\n            if(list[1] === 'a')\n            {\n                text = \"Отставание на несколько сукунд\"\n                if(list[2] === 'minute')\n                {\n                    text = \"Отставание на 1 м\"\n                }\n                \n            }\n            else\n            {\n                let t =list[1];\n                text = \"Отставание на \"+ t\n\n                switch(list[2])\n                {\n                    case \"hours\": \n                        text += \" ч\"\n                    break;\n                    case \"minutes\": \n                        text += \" м\"\n                    break;\n                    \n                }\n            }\n           // console.log(text)\n        }\n        else\n        {\n            if(list[0] === 'a')\n            {\n                text = \"В запасе много времени\"\n                if(list[2] === 'minute')\n                {\n                    text = \"Отставание на 1 м\"\n                }\n                \n            }\n            else\n            {\n                text = \"В запасе \" + list[0];\n                switch(list[1])\n                {\n                    case \"hours\": \n                        text += \" ч\"\n                    break;\n                    case \"minutes\": \n                        text += \" м\"\n                    break;\n                    \n                }\n            }\n           \n        }\n\n        if(textPeriod != text)\n        {\n            setTextPeriod(text);\n        }\n       \n    }\n\n  //var diff = moment(\"23:07\").unix() - moment(\"22:07\").unix();\n  \n  let timePeriod = '';\n  let timeFuture = moment.unix(tFuture).utc().format('HH:mm:ss');\n  let text = '';\n\n\n  let dateStop: Date = new Date(tStop);  \n  let dateStart: Date = new Date(tStart);  \n\n  //console.log(\"tStop =\",dateStop);\n  //console.log(\"tStart =\",dateStart);\n\n  let tt = dateStop.getTime() - dateStart.getTime();\n\n /* if(tt < 0)\n  {\n      tt = dateStart.getTime() - dateStop.getTime();\n  }*/\n  \n  let dd: Date = new Date(tt);\n\n  let timeArchive =  moment(dd).utc().format('HH:mm:ss');//moment.unix( (dateStop.getTime()  - dateStart.getTime()) ).utc().format('H:m:s');\n  if(tFuture - tActual  === 0)\n  {\n    timePeriod  = moment.unix(tFuture-tActual).utc().format('HH:mm:ss');\n    text = '';\n  }\n  else\n  {\n    if(tFuture - tActual > 0)\n    {\n           timePeriod   = moment.unix(tFuture-tActual).utc().format('HH:mm:ss');\n           text = 'Осталось';\n    }\n    else\n    {\n          timePeriod   = moment.unix(tActual-tFuture).utc().format('HH:mm:ss');\n          text = 'Отставание на';\n    }\n  }\n \n  \n\n// let timePeriod =  moment.unix(tPlan).from(moment.unix(tActual))   //ConvertPeriodToString( moment.unix(tActual).utc().from(moment.unix(tPlan).utc()) )\n\n  \n    if(tActual >= tFuture && bad === false ) //&& order.orderRole === 2 || order.orderRole === 3\n    {\n        setBad(true);\n    }\n\n    if(tActual < tFuture && bad)\n    {\n        setBad(false);\n    }\n\n\n    let orderRole;\n\n    switch(order.orderRole)\n    {\n        case 1:\n            orderRole = <PlayArrowIcon style={{color: 'gray'}}/>\n        break;\n        case 2:\n            orderRole =  <WorkIcon style={{color: 'orange'}}/>\n        break;\n        case 3:\n            orderRole =  <ArchiveIcon style={{color: 'green'}}/>\n        break;\n        case 4:\n            orderRole =  <StopIcon style={{color: 'red'}}/>\n        break;\n    }\n\n    \n    if(order.orderRole === 3)\n    {\n     \n\n        let seee = dd.getSeconds() >= tPlan\n        \n        return (\n            <div style={{display: 'grid', gridTemplateColumns: '100px auto',}}>\n                <p>{name}</p>\n                <div style={{display: 'grid', gridTemplateColumns: '1fr 1fr 1fr'}}>\n                    <div style={{display: 'flex', justifyContent:'space-around'}} >\n                        <p>Затраченоое время</p>\n                        <p style ={{backgroundColor: seee ? 'red': '', color: seee ? \"white\": \"\" }}>{timeArchive}</p>\n                    </div>\n                    <div style={{display: 'flex', justifyContent:'space-around'}} >\n                        <p>Плановое время</p>\n                        <p style ={{backgroundColor: seee ? 'red': '', color: seee ? \"white\": \"\" }}>{timeTPlan}</p>\n                    </div>\n                    <div style={{display: 'flex', justifyContent:'space-around'}} >\n                        <p>{orderRole}</p>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <div style={{display: 'grid', gridTemplateColumns: '100px auto',}}>\n                <p>{name}</p>\n                <div style={{display: 'grid', gridTemplateColumns: '1fr 1fr 1fr 1fr'}}>\n                    <div style={{display: 'flex', justifyContent:'space-around'}} >\n                        <p>Сроком до</p>\n                        <p style ={{backgroundColor: bad ? 'red': '', color: bad ? \"white\": \"\" }}>{moment(limitation).format('DD/MM/YYYY HH:mm:ss')}</p>\n                    </div>\n                    <div style={{display: 'flex', justifyContent:'space-around'}} >\n                        <p>Актуальное</p>\n                        <p style ={{backgroundColor: bad ? 'red': '', color: bad ? \"white\": \"\" }}>{timeTActual}</p>\n                        <p>{text}</p>\n                        <p>{timePeriod}</p>\n                    </div>\n                    <div style={{display: 'flex', justifyContent:'space-around'}} >\n                        <p>Плановое</p>\n                        <p>{timeTPlan}</p>\n                    </div>\n                  \n                    <div style={{display: 'flex', justifyContent:'space-around'}} >\n                        <p>Прогнозируемое</p>\n                        <p style ={{backgroundColor: bad ? 'red': '', color: bad ? \"white\": \"\" }} >{timeFuture}</p>\n                        <p>{orderRole}</p>\n                    </div>\n                </div>\n        </div>\n    )\n}\n\n\nexport default CustomizedAccordiongsHeaderNewAlgoritm;","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Card/ViewNewAlgorithm.js",["821"],"import React from 'react';\nimport {MapInteractionCSS } from 'react-map-interaction';\nimport ViewOrderCardNew from './ViewOrderCardNew'\n\nclass ViewNewAlgorithm extends React.Component{\n  constructor(props)\n  {\n    super(props);\n\n  }\n\n\n\n  render()\n  {\n    return (\n      <MapInteractionCSS defaultValue={{scale: 0.5,translation : {x : 0,y: 0}}} >\n          <ViewOrderCardNew order={this.props.item}/>\n      </MapInteractionCSS>\n    );\n  }\n}\n//<div style={{width: '200px', height: '400px', backgroundColor: 'red'}}></div>\n// \nexport default ViewNewAlgorithm;\n\n//scale: 0.25,translation : {x : 50,y: 250}}","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Card/ViewOrderCardNew.tsx",["822","823","824","825","826","827","828","829","830","831","832","833","834","835","836","837","838","839","840","841","842","843","844"],"import React,{useEffect, useState} from 'react'\n\nimport IDataCardSection from '../Data/IDataCardSection'\nimport IDataOrderItem from '../Data/IDataOrderItem'\nimport Divider from '@material-ui/core/Divider';\nimport ViewCard from './ViewCard'\n\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { Box } from '@material-ui/system';\n\n\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardContent from '@material-ui/core/CardContent'\n\nimport IconButton from '@material-ui/core/IconButton'\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport SettingsIcon from '@material-ui/icons/Settings';\n\nimport IDataVSM from '../Data/IDataVSM'\nimport IDataProduction from '../Data/IDataProduction';\nimport IDataCardVSM from '../Data/IDataCardVSM';\nimport { useCardVSMActionType, useProductionCardVSM } from '../../type/useCardVSMType';\n\nimport { useActionCardVSM } from '../../hooks/useActionCardVSM';\nimport { useTypedSelector } from '../../hooks/leftMenuSelector';\nimport IDataOrder from '../Data/IDataOrder';\nimport { MyCards, OrderMy } from '../../type/useOrdersType';\nimport Order_view, { OrderProduction_view } from '../Data/IDataOrder/IDataOrder';\nimport ViewCardNew from './ViewCardNew';\n\n/*\ninterface productionCardVSM{\n    name: string,\n    productions: IDataCardVSM[]\n}\ninterface IDataCardProduct{\n    cardVSMs: productionCardVSM[]\n}*/\n\n\nconst ViewOrderCardNew =  (props: {order: Order_view}) => {\n    const [BDitems, setBDItem] = useState<IDataOrderItem[]>();\n\n    const {cardVSMs, loading} = useTypedSelector(state => state.cardVSM);\n    const {cardVSMLoading} = useActionCardVSM()\n\n    const [card, setCard] = useState(cardVSMs);\n\n\n    let listProduct = props.order.orderProduction_views.map((item: OrderProduction_view, index: number)=>{\n\n        return(\n            <Card key={index} sx={{marginBottom: '150px'}}>\n                <CardHeader\n                    action={\n                        <IconButton aria-label=\"settings\">\n                            <SettingsIcon />\n                        </IconButton>\n                    }\n                    title={'\\\"'+item.name + '\\\" | Количество: '+item.orderProductionItems.length}\n                    sx={{fontWeight: 'bold',color: 'white', backgroundColor: '#575757'}}\n                    style={{color: 'white'}}\n                >\n                    \n                </CardHeader>\n                <CardContent sx={{backgroundColor: 'rgba(0, 0, 0, .03)'}}>\n                    <ViewCardNew sectionLogic_views={item.card_View.sectionLogic_views} orderProduct={item}/>\n               </CardContent>\n            </Card>\n\n        )\n    })\n\n    return(\n       <div>\n           {listProduct}\n       </div>\n    )\n    \n}\n\n\nexport default ViewOrderCardNew;","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Card/ViewCardNew.tsx",["845","846","847","848","849","850","851","852","853","854","855","856"],"import React,{useState} from 'react'\n\nimport IDataCardSection from '../Data/IDataCardSection'\nimport IDataOrderItem from '../Data/IDataOrderItem'\nimport Divider from '@material-ui/core/Divider';\nimport IDataCardVSM from '../Data/IDataCardVSM';\nimport Paper from '@material-ui/core/Paper'\nimport ViewItemSection from './ViewItemSection'\nimport IDataOrder from '../Data/IDataOrder';\nimport IDataOrderPart from '../Data/IDataOrderPart';\nimport { OrderProductionItem, OrderProduction_view, SectionEtap_view, SectionLogic_view } from '../Data/IDataOrder/IDataOrder';\nimport ViewItemSectionNew from './ViewItemSectionNew';\n\n\n\nconst ViewCardNew =  (props: {sectionLogic_views : SectionLogic_view[], orderProduct?:OrderProduction_view}) => {\n    \n    let flagParalel = false;\n    let flagMaxInSectionItems = 0 as number;\n    \n    props.sectionLogic_views.map((item : SectionLogic_view,index: number) =>\n      {\n         if(item.sectionEtap_views.length > flagMaxInSectionItems )\n         {\n            flagMaxInSectionItems = item.sectionEtap_views.length \n         }\n\n         if(item.sectionEtap_views.length > 1)\n         {\n            flagParalel = true;\n         }\n      }\n    )\n    \n    let card = props.sectionLogic_views.map((item : SectionLogic_view,index: number) =>\n         <ViewItemSectionNew key={index} sectionEtap_views={item.sectionEtap_views} order={props.orderProduct} numberSection={index} lastSection={props.sectionLogic_views.length} flagParalel={flagParalel} flagMaxInSectionItems={flagMaxInSectionItems}/>\n    )\n\n\n    return(\n       <div style={{display: 'grid', justifyContent: 'center', gridTemplateColumns: 'repeat('+props.sectionLogic_views.length+',1fr)'}}>\n          {card}\n       </div>\n    )\n\n}\n\n\nexport default ViewCardNew;","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Card/ViewItemSectionNew.tsx",["857","858","859","860","861","862"],"import React from 'react'\nimport IDataCardVSM from '../Data/IDataCardVSM'\nimport IDataOrderItem from '../Data/IDataOrderItem'\nimport IDataBufferVSM from '../Data/IDataBufferVSM'\nimport IDataEtapVSM from '../Data/IDataEtapVSM'\n\nimport Buffer from './Buffer'\nimport Etap from './Etap'\n\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt';\nimport IDataOrder from '../Data/IDataOrder'\nimport IDataOrderPart from '../Data/IDataOrderPart'\nimport { Buffer_view, Etap_view, OrderProduction_view, SectionEtap_view } from '../Data/IDataOrder/IDataOrder'\n\nconst ViewItemSectionNew = (props:{sectionEtap_views: SectionEtap_view[],order?: OrderProduction_view, orderProduct?: IDataOrderPart, numberSection: number, lastSection: number, flagParalel: boolean,flagMaxInSectionItems: number}) =>\n{\n  console.log(\"props.sectionEtap_views = \",props.sectionEtap_views);\n\n  if(props.sectionEtap_views.length < 0 )\n  {\n    return <div></div>\n  }\n\n  const listSections = props.sectionEtap_views.map((item : SectionEtap_view, index: number,) =>{\n\n    let flag = props.flagParalel && props.sectionEtap_views.length <= props.flagMaxInSectionItems-1 && index == 0;\n    let delta = props.sectionEtap_views.length;\n    let percentPadding = (props.flagMaxInSectionItems-delta)*50 as any;\n    if(props.sectionEtap_views.length === props.flagMaxInSectionItems)\n    {\n      percentPadding = 0;\n    }\n\n    return (\n    <div key={index} style={{display: 'block ruby', paddingTop: flag ? (percentPadding+'%') as string: '', marginBottom: props.sectionEtap_views.length < 2 ? '':'50px'}}>\n      <Buffer buffer={item.buffer_view as Buffer_view} orderProduct={props.order as OrderProduction_view}/>\n      <div style={{verticalAlign: 'middle'}}>\n        <ArrowRightAltIcon style={{width: '50px', height: '100%'}}/>\n      </div>\n      <Etap etap={item.etap_view as Etap_view} orderProduct={props.order as OrderProduction_view}/>\n      {props.numberSection !==  props.lastSection ? \n                                                      <div style={{verticalAlign: 'middle'}}>\n                                                        <ArrowRightAltIcon style={{width: '50px', height: '100%'}}/>\n                                                      </div>\n                                                  :\n                                                      null\n      }\n    </div>)\n  })\n\n \n \n\n  return(\n    <div style={{display: listSections.length < 1 ?'block ruby': '', border: '2px dashed #cec9c9', marginRight: '20px', padding: '50px'}}>\n        {listSections}\n    </div>\n  )\n}\n\nexport default ViewItemSectionNew;","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Charts/ChartLine.tsx",["863"],"import React, { PureComponent } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { Card_view } from '../Data/IDataOrder/IDataOrder';\n\nconst data = [\n  {\n    name: '1',\n    uv: 4000,\n    pv: 2400,\n    amt: 2400,\n  },\n  {\n    name: '2',\n    uv: 3000,\n    pv: 1398,\n    amt: 2210,\n  },\n  {\n    name: '3',\n    uv: 2000,\n    pv: 9800,\n    amt: 2290,\n  },\n  {\n    name: '4',\n    uv: 2780,\n    pv: 3908,\n    amt: 2000,\n  },\n  {\n    name: '5',\n    uv: 1890,\n    pv: 4800,\n    amt: 2181,\n  },\n  {\n    name: '6',\n    uv: 2390,\n    pv: 3800,\n    amt: 2500,\n  },\n  {\n    name: '7',\n    uv: 3490,\n    pv: 4300,\n    amt: 2100,\n  },\n];\n\n\nconst Chartline =  (props: {card_view: Card_view}) =>{\n\n    return (\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <LineChart\n          width={500}\n          height={400}\n          data={data}\n          margin={{\n            top: 5,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\n          <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" />\n        </LineChart>\n      </ResponsiveContainer>\n    );\n}\n\nexport default Chartline;","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/PageExample/DemoArchive.tsx",["864","865","866","867","868","869","870","871","872","873","874","875","876","877","878","879","880"],"import * as React from 'react';\n\nimport { DataGrid, GridColDef, GridValueGetterParams,GridRenderCellParams } from '@mui/x-data-grid';\n/*import {\n  DataGridPro,\n  GridApiRef,\n  GridColumns,\n  gridColumnVisibilityModelSelector,\n  GridEvents,\n  GridRowGroupingModel,\n  useGridApiRef,\n  GridColDef,\n  GridRowModel\n} from '@mui/x-data-grid-pro';*/\n\nimport moment from 'moment';\nimport Order_view,{OrderProduction_view} from '../Data/IDataOrder/IDataOrder';\n\nimport OrderRole from '../Data/OrderRole';\n\nimport ThumbUpAltIcon from '@mui/icons-material/ThumbUpAlt';\nimport ThumbDownAltIcon from '@mui/icons-material/ThumbDownAlt';\n\nimport DoneIcon from '@mui/icons-material/Done';\nimport CloseIcon from '@mui/icons-material/Close';\n\nimport Button from '@mui/material/Button';\n\nimport axios from 'axios';\nimport ip,{port} from \"../../global\";\n\n\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\nimport TextField from '@mui/material/TextField';\n\nconst DemoArchive = (props:{orders?: Order_view[], view: string, startSimulation?: (name: string, sim: boolean) => Promise<void> }) => {\n  \n  //const [tableData, setTableData] = React.useState<Order_view[]>(props.orders != undefined ? props.orders : [])\n\n  if(props.orders == undefined)\n  {\n    return <div></div>\n  }\n\n  if(props.orders?.length > 0 )\n  {\n    props.orders?.forEach((element, i) => {\n          element.id = i+1;\n    });\n  }\n\n\n  const splitTime = (time: string) => {\n\n    return (\n      <div>\n      {time.split(' ').map((item,index) => {\n         return <p key={index} style={{marginBottom: '0', marginTop: '0'}}>{item}</p>\n      })}\n      </div>\n    )\n  }\n\n  const  GetOrderRole = (item:OrderRole ) =>{\n\n    let icon = null;\n\n    switch(item)\n    {\n        case OrderRole.ArchiveBad:\n          icon = <CloseIcon/>\n            break;\n        case OrderRole.ArchiveGood:\n          icon = <DoneIcon/>\n            break;\n        default:\n            break;\n    }\n\n    return icon;\n\n  }\n\n  const GetStringDataTime = (item: moment.Moment ) : string =>  {\n\n    let d = item.format('MM/DD/YYYY').split('/');\n    let t = item.format('HH:mm:ss').split(':');\n    let dataTime = d[2] + \"-\" + d[1] + \"-\" + d[0] + \"T\"+ t[0] +\":\"+t[1];\n\n    //console.log(\"dataTime =\",dataTime)\n\n    return dataTime\n  }\n\n\n\n\n\n  const getGridDef = (v : string ) => {\n   let columns: GridColDef[] = [];\n\n    switch(v)\n    {\n      case 'archive':\n        \n        columns = [\n          { field: 'id', headerName: '№', width: 90 },\n          {\n            field: 'name',\n            headerName: 'Заказ',\n            width: 120,\n            minWidth: 120, \n            maxWidth: 150,\n            editable: false,\n          },\n          {\n            field: 'limitation',\n            headerName: 'Срок',\n            width: 100,\n            minWidth: 100, \n            maxWidth: 150,\n            editable: true,\n            renderCell: (params) => (\n              splitTime( moment(params?.value).format('MM/DD/YYYY HH:mm:ss'))\n              )\n             \n          },\n          {\n            field: 'tStart',\n            headerName: 'Добавлен',\n            type: 'number',\n            width: 120,\n            minWidth: 120, \n            maxWidth: 150,\n            editable: true,\n            renderCell: (params) => (\n                splitTime( moment(params?.row.tStart).format('MM/DD/YYYY HH:mm:ss'))\n              )\n          },\n         \n          {\n            field: 'tPlan',\n            headerName: 'План',\n            type: 'number',\n            width: 100,\n            minWidth: 100, \n            maxWidth: 150,\n            editable: true,\n            renderCell: (params) => (\n              splitTime( moment(params?.row.tStart).add(params?.value, 'seconds').format('MM/DD/YYYY HH:mm:ss'))\n             )\n          },\n          \n          {\n            field: 'tFuture',\n            headerName: 'Прогноз',\n            width: 100,\n            minWidth: 100, \n            maxWidth: 150,\n            editable: true,\n            renderCell: (params) => (\n              splitTime( moment(params?.row.tStart).add(params?.value, 'seconds').format('MM/DD/YYYY HH:mm:ss'))\n              )\n          },\n          {\n            field: 'tFuture2',\n            headerName: 'Прогноз временной',\n            width: 160,\n            minWidth: 160, \n            maxWidth: 200,\n            editable: true,\n            renderCell: (params) => (\n              splitTime( moment.unix(params?.row.tFuture).utc().format('HH:mm:ss'))\n              )\n          },\n          {\n            field: 'tStop',\n            headerName: 'Завершился',\n            width: 150,\n            editable: true,\n            renderCell: (params) => (\n              splitTime( moment(params?.row.tStop).format('MM/DD/YYYY HH:mm:ss'))\n              )\n          },\n          {\n            field: 'tActual',\n            headerName: 'Завершился за',\n            width: 150,\n            minWidth: 150, \n            maxWidth: 200,\n            editable: true,\n            renderCell: (params) => (\n              splitTime( moment.unix(params?.row.tActual).utc().format('HH:mm:ss'))\n              )\n          },\n          {\n            field: 'orderProduction_views',\n            headerName: 'Количество продуктов',\n            width: 160,\n            minWidth: 160, \n            maxWidth: 200,\n            editable: true,\n            renderCell: (params) => {\n\n              let items =  params?.value as OrderProduction_view[]\n\n              let list = items.map((item,index) => {\n\n                return <p key={index} style={{marginBottom: '0', marginTop: '0'}} >{item.name + \" ( \" + item.orderProductionItems.length + ' )'} </p>\n              })\n              \n              return (\n                  <div>\n                    {list}\n                  </div>\n              )\n             \n            }\n          },\n          {\n            field: 'orderRole',\n            headerName: 'Статус',\n            width: 150,\n            minWidth: 150, \n            maxWidth: 200,\n            editable: true,\n            renderCell: (params) => (\n              GetOrderRole(params?.value)\n              )\n          },\n          \n          \n          /*\n          {\n            field: 'fullName',\n            headerName: 'Full name',\n            description: 'This column has a value getter and is not sortable.',\n            sortable: false,\n            width: 160,\n            valueGetter: (params: GridValueGetterParams) =>\n              `${params.getValue(params.id, 'orderName') || ''} ${\n                params.getValue(params.id, 'limitation') || ''\n              }`,\n          },*/\n        ];\n      \n\n        break;\n      case 'prepair':\n\n\n\n        columns = [\n          { field: 'id', headerName: '№', width: 90 },\n          {\n            field: 'name',\n            headerName: 'Заказ',\n            width: 120,\n            minWidth: 120, \n            maxWidth: 150,\n            editable: false,\n          },\n          {\n            field: 'limitation',\n            headerName: 'Срок',\n            width: 100,\n            minWidth: 100, \n            maxWidth: 150,\n            editable: true,\n            renderCell: (params) => (\n              splitTime( moment(params?.value).format('MM/DD/YYYY HH:mm:ss'))\n              )\n          },\n          {\n            field: 'tAdd',\n            headerName: 'Добавлен',\n            type: 'number',\n            width: 120,\n            minWidth: 120, \n            maxWidth: 150,\n            editable: true,\n            renderCell: (params) => (\n                splitTime( moment(params?.value).format('MM/DD/YYYY HH:mm:ss'))\n              )\n          },\n         \n          {\n            field: 'tPlan',\n            headerName: 'План',\n            type: 'number',\n            width: 100,\n            minWidth: 100, \n            maxWidth: 150,\n            editable: true,\n            renderCell: (params) => (\n              splitTime( moment(params?.row.tAdd).add(params?.value, 'seconds').format('MM/DD/YYYY HH:mm:ss'))\n             )\n          },\n          {\n            field: 'tFuture',\n            headerName: 'Прогноз',\n            width: 100,\n            minWidth: 100, \n            maxWidth: 150,\n            editable: true,\n            renderCell: (params) => (\n              splitTime( moment(params?.row.tAdd).add(params?.value, 'seconds').format('MM/DD/YYYY HH:mm:ss'))\n              )\n          },\n          {\n            field: 'tFuture2',\n            headerName: 'Прогноз временной',\n            width: 160,\n            minWidth: 160, \n            maxWidth: 200,\n            editable: true,\n            renderCell: (params) => (\n              splitTime( moment.unix(params?.row.tFuture).utc().format('HH:mm:ss'))\n              )\n          },\n          {\n            field: 'orderProduction_views',\n            headerName: 'Количество продуктов',\n            width: 160,\n            minWidth: 160, \n            maxWidth: 200,\n            editable: true,\n            renderCell: (params) => {\n\n              let items =  params?.value as OrderProduction_view[]\n\n              let list = items.map((item,index) => {\n\n                return <p key={index} style={{marginBottom: '0', marginTop: '0'}} >{item.name + \" ( \" + item.orderProductionItems.length + ' )'} </p>\n              })\n              \n              return (\n                  <div>\n                    {list}\n                  </div>\n              )\n             \n            }\n          },\n          {\n            field: 'orderRole',\n            headerName: 'Статус',\n            width: 100,\n            minWidth: 100, \n            maxWidth: 150,\n            editable: true,\n            renderCell: (params) => {\n\n              if(moment(params?.row.tAdd).add(params?.row.tFuture, 'seconds').isBefore(params?.row.limitation))\n              {\n                return <DoneIcon/>;\n              }\n              else\n              {\n                return <CloseIcon/>\n              }\n\n            }\n          },\n          {\n            field: 'simulation',\n            headerName: 'Запустить симуляцию',\n            width: 200,\n            minWidth: 200, \n            maxWidth: 250,\n            editable: true,\n            renderCell: (params) => {\n\n              if(props.startSimulation != undefined)\n                {\n                  return  <Button variant=\"outlined\" size=\"small\" onClick={  async () => {  await props.startSimulation?.call(null,params?.row.name, true); } }>\n                  Запустить симуляцию\n                </Button>\n                }\n\n            }\n          }\n          \n        ];\n      \n\n        break;\n    }\n\n    return columns;\n  }\n\n\n\n\n\n\n\n  const convertToTime = (t: number) =>\n  {\n    return moment.unix(t).utc().format('H:m:s')\n  }\n  \n\n  return (\n    <div style={{ height: '700px', width: '100%' }}>\n      {/*<DataGridPro\n        \n        columns={getGridDef(props.view)}\n        rows={props.orders}\n\n        treeData\n        getTreeDataPath={getChildRows}\n\n        pageSize={50}\n        rowsPerPageOptions={[50]}\n        //checkboxSelection\n      />*/}\n\n      <DataGrid\n        columns={getGridDef(props.view)}\n        rows={props.orders}\n\n        pageSize={10}\n        rowsPerPageOptions={[10]}\n        //checkboxSelection\n        disableSelectionOnClick\n      />\n      \n    </div>\n  );\n}\nexport default DemoArchive;","/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/PageExample/ToggleButtonMy.tsx",["881","882","883","884","885"],"import * as React from 'react';\nimport FormatAlignLeftIcon from '@mui/icons-material/FormatAlignLeft';\nimport FormatAlignCenterIcon from '@mui/icons-material/FormatAlignCenter';\nimport FormatAlignRightIcon from '@mui/icons-material/FormatAlignRight';\nimport FormatAlignJustifyIcon from '@mui/icons-material/FormatAlignJustify';\nimport Box from '@mui/material/Box';\nimport ToggleButton from '@mui/material/ToggleButton';\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\n\nimport TableViewIcon from '@mui/icons-material/TableView';\nimport ViewComfyIcon from '@mui/icons-material/ViewComfy';\n\nconst   ToggleButtonMy = (props:{ alignment: string, handleChange: (event: React.MouseEvent<HTMLElement>, value: any) => void  }) =>  {\n  \n\n  const children = [\n    <ToggleButton value=\"left\" key=\"left\">\n      <TableViewIcon/>\n    </ToggleButton>,\n    <ToggleButton value=\"center\" key=\"center\">\n      <ViewComfyIcon />\n    </ToggleButton>,\n  ];\n\n  const control = {\n    value: props.alignment,\n    onChange: props.handleChange,\n    exclusive: true,\n  };\n\n  return (\n    <div>\n       <ToggleButtonGroup size=\"small\" {...control}>\n        {children}\n      </ToggleButtonGroup>\n    </div>\n  );\n}\nexport default ToggleButtonMy;",{"ruleId":"886","replacedBy":"887"},{"ruleId":"888","replacedBy":"889"},{"ruleId":"890","severity":1,"message":"891","line":2,"column":26,"nodeType":"892","messageId":"893","endLine":2,"endColumn":32},{"ruleId":"890","severity":1,"message":"894","line":2,"column":33,"nodeType":"892","messageId":"893","endLine":2,"endColumn":42},{"ruleId":"890","severity":1,"message":"895","line":2,"column":43,"nodeType":"892","messageId":"893","endLine":2,"endColumn":54},{"ruleId":"890","severity":1,"message":"896","line":11,"column":8,"nodeType":"892","messageId":"893","endLine":11,"endColumn":23},{"ruleId":"890","severity":1,"message":"897","line":12,"column":8,"nodeType":"892","messageId":"893","endLine":12,"endColumn":12},{"ruleId":"898","severity":1,"message":"894","line":1,"column":17,"nodeType":"892","messageId":"893","endLine":1,"endColumn":26},{"ruleId":"898","severity":1,"message":"899","line":2,"column":8,"nodeType":"892","messageId":"893","endLine":2,"endColumn":13},{"ruleId":"898","severity":1,"message":"900","line":3,"column":8,"nodeType":"892","messageId":"893","endLine":3,"endColumn":22},{"ruleId":"898","severity":1,"message":"901","line":7,"column":9,"nodeType":"892","messageId":"893","endLine":7,"endColumn":13},{"ruleId":"898","severity":1,"message":"902","line":11,"column":8,"nodeType":"892","messageId":"893","endLine":11,"endColumn":11},{"ruleId":"898","severity":1,"message":"903","line":13,"column":8,"nodeType":"892","messageId":"893","endLine":13,"endColumn":19},{"ruleId":"898","severity":1,"message":"904","line":14,"column":8,"nodeType":"892","messageId":"893","endLine":14,"endColumn":17},{"ruleId":"898","severity":1,"message":"905","line":14,"column":36,"nodeType":"892","messageId":"893","endLine":14,"endColumn":50},{"ruleId":"898","severity":1,"message":"906","line":15,"column":8,"nodeType":"892","messageId":"893","endLine":15,"endColumn":15},{"ruleId":"898","severity":1,"message":"907","line":17,"column":8,"nodeType":"892","messageId":"893","endLine":17,"endColumn":18},{"ruleId":"898","severity":1,"message":"908","line":19,"column":8,"nodeType":"892","messageId":"893","endLine":19,"endColumn":18},{"ruleId":"898","severity":1,"message":"909","line":20,"column":8,"nodeType":"892","messageId":"893","endLine":20,"endColumn":16},{"ruleId":"898","severity":1,"message":"910","line":21,"column":8,"nodeType":"892","messageId":"893","endLine":21,"endColumn":23},{"ruleId":"898","severity":1,"message":"911","line":22,"column":8,"nodeType":"892","messageId":"893","endLine":22,"endColumn":24},{"ruleId":"898","severity":1,"message":"912","line":29,"column":9,"nodeType":"892","messageId":"893","endLine":29,"endColumn":20},{"ruleId":"898","severity":1,"message":"913","line":43,"column":11,"nodeType":"892","messageId":"893","endLine":43,"endColumn":16},{"ruleId":"898","severity":1,"message":"914","line":50,"column":12,"nodeType":"892","messageId":"893","endLine":50,"endColumn":22},{"ruleId":"886","replacedBy":"887"},{"ruleId":"888","replacedBy":"889"},{"ruleId":"898","severity":1,"message":"915","line":10,"column":8,"nodeType":"892","messageId":"893","endLine":10,"endColumn":12},{"ruleId":"898","severity":1,"message":"916","line":11,"column":8,"nodeType":"892","messageId":"893","endLine":11,"endColumn":11},{"ruleId":"898","severity":1,"message":"917","line":14,"column":10,"nodeType":"892","messageId":"893","endLine":14,"endColumn":15},{"ruleId":"898","severity":1,"message":"918","line":28,"column":10,"nodeType":"892","messageId":"893","endLine":28,"endColumn":18},{"ruleId":"898","severity":1,"message":"919","line":48,"column":10,"nodeType":"892","messageId":"893","endLine":48,"endColumn":19},{"ruleId":"898","severity":1,"message":"913","line":85,"column":9,"nodeType":"892","messageId":"893","endLine":85,"endColumn":14},{"ruleId":"898","severity":1,"message":"920","line":3,"column":8,"nodeType":"892","messageId":"893","endLine":3,"endColumn":28},{"ruleId":"898","severity":1,"message":"921","line":5,"column":18,"nodeType":"892","messageId":"893","endLine":5,"endColumn":26},{"ruleId":"898","severity":1,"message":"922","line":9,"column":8,"nodeType":"892","messageId":"893","endLine":9,"endColumn":23},{"ruleId":"898","severity":1,"message":"923","line":10,"column":8,"nodeType":"892","messageId":"893","endLine":10,"endColumn":25},{"ruleId":"898","severity":1,"message":"924","line":14,"column":8,"nodeType":"892","messageId":"893","endLine":14,"endColumn":20},{"ruleId":"898","severity":1,"message":"925","line":16,"column":8,"nodeType":"892","messageId":"893","endLine":16,"endColumn":27},{"ruleId":"898","severity":1,"message":"926","line":21,"column":8,"nodeType":"892","messageId":"893","endLine":21,"endColumn":18},{"ruleId":"898","severity":1,"message":"927","line":23,"column":13,"nodeType":"892","messageId":"893","endLine":23,"endColumn":20},{"ruleId":"898","severity":1,"message":"928","line":24,"column":8,"nodeType":"892","messageId":"893","endLine":24,"endColumn":20},{"ruleId":"898","severity":1,"message":"929","line":24,"column":24,"nodeType":"892","messageId":"893","endLine":24,"endColumn":34},{"ruleId":"898","severity":1,"message":"930","line":28,"column":8,"nodeType":"892","messageId":"893","endLine":28,"endColumn":10},{"ruleId":"898","severity":1,"message":"931","line":29,"column":5,"nodeType":"892","messageId":"893","endLine":29,"endColumn":8},{"ruleId":"898","severity":1,"message":"932","line":225,"column":5,"nodeType":"892","messageId":"893","endLine":225,"endColumn":17},{"ruleId":"898","severity":1,"message":"933","line":239,"column":5,"nodeType":"892","messageId":"893","endLine":239,"endColumn":9},{"ruleId":"898","severity":1,"message":"934","line":319,"column":5,"nodeType":"892","messageId":"893","endLine":319,"endColumn":10},{"ruleId":"898","severity":1,"message":"935","line":331,"column":10,"nodeType":"892","messageId":"893","endLine":331,"endColumn":18},{"ruleId":"898","severity":1,"message":"936","line":333,"column":9,"nodeType":"892","messageId":"893","endLine":333,"endColumn":21},{"ruleId":"898","severity":1,"message":"937","line":377,"column":12,"nodeType":"892","messageId":"893","endLine":377,"endColumn":19},{"ruleId":"898","severity":1,"message":"938","line":377,"column":21,"nodeType":"892","messageId":"893","endLine":377,"endColumn":28},{"ruleId":"898","severity":1,"message":"939","line":378,"column":12,"nodeType":"892","messageId":"893","endLine":378,"endColumn":26},{"ruleId":"886","replacedBy":"940"},{"ruleId":"888","replacedBy":"941"},{"ruleId":"898","severity":1,"message":"942","line":5,"column":8,"nodeType":"892","messageId":"893","endLine":5,"endColumn":17},{"ruleId":"898","severity":1,"message":"908","line":11,"column":10,"nodeType":"892","messageId":"893","endLine":11,"endColumn":20},{"ruleId":"898","severity":1,"message":"943","line":13,"column":10,"nodeType":"892","messageId":"893","endLine":13,"endColumn":25},{"ruleId":"898","severity":1,"message":"944","line":14,"column":10,"nodeType":"892","messageId":"893","endLine":14,"endColumn":26},{"ruleId":"898","severity":1,"message":"945","line":15,"column":8,"nodeType":"892","messageId":"893","endLine":15,"endColumn":19},{"ruleId":"898","severity":1,"message":"931","line":19,"column":5,"nodeType":"892","messageId":"893","endLine":19,"endColumn":8},{"ruleId":"898","severity":1,"message":"946","line":21,"column":11,"nodeType":"892","messageId":"893","endLine":21,"endColumn":22},{"ruleId":"898","severity":1,"message":"947","line":158,"column":11,"nodeType":"892","messageId":"893","endLine":158,"endColumn":32},{"ruleId":"948","severity":1,"message":"949","line":224,"column":23,"nodeType":"950","messageId":"951","endLine":224,"endColumn":25},{"ruleId":"952","severity":1,"message":"953","line":6,"column":3,"nodeType":"954","messageId":"955","endLine":10,"endColumn":4},{"ruleId":"886","replacedBy":"956"},{"ruleId":"888","replacedBy":"957"},{"ruleId":"898","severity":1,"message":"894","line":1,"column":15,"nodeType":"892","messageId":"893","endLine":1,"endColumn":24},{"ruleId":"898","severity":1,"message":"958","line":5,"column":8,"nodeType":"892","messageId":"893","endLine":5,"endColumn":15},{"ruleId":"898","severity":1,"message":"959","line":6,"column":8,"nodeType":"892","messageId":"893","endLine":6,"endColumn":16},{"ruleId":"898","severity":1,"message":"960","line":8,"column":8,"nodeType":"892","messageId":"893","endLine":8,"endColumn":24},{"ruleId":"898","severity":1,"message":"902","line":9,"column":10,"nodeType":"892","messageId":"893","endLine":9,"endColumn":13},{"ruleId":"898","severity":1,"message":"961","line":17,"column":8,"nodeType":"892","messageId":"893","endLine":17,"endColumn":20},{"ruleId":"898","severity":1,"message":"962","line":20,"column":8,"nodeType":"892","messageId":"893","endLine":20,"endColumn":16},{"ruleId":"898","severity":1,"message":"963","line":21,"column":8,"nodeType":"892","messageId":"893","endLine":21,"endColumn":23},{"ruleId":"898","severity":1,"message":"964","line":23,"column":10,"nodeType":"892","messageId":"893","endLine":23,"endColumn":30},{"ruleId":"898","severity":1,"message":"965","line":23,"column":32,"nodeType":"892","messageId":"893","endLine":23,"endColumn":52},{"ruleId":"898","severity":1,"message":"926","line":27,"column":8,"nodeType":"892","messageId":"893","endLine":27,"endColumn":18},{"ruleId":"898","severity":1,"message":"966","line":41,"column":12,"nodeType":"892","messageId":"893","endLine":41,"endColumn":19},{"ruleId":"898","severity":1,"message":"967","line":41,"column":21,"nodeType":"892","messageId":"893","endLine":41,"endColumn":30},{"ruleId":"898","severity":1,"message":"938","line":43,"column":22,"nodeType":"892","messageId":"893","endLine":43,"endColumn":29},{"ruleId":"898","severity":1,"message":"968","line":44,"column":12,"nodeType":"892","messageId":"893","endLine":44,"endColumn":26},{"ruleId":"898","severity":1,"message":"969","line":46,"column":12,"nodeType":"892","messageId":"893","endLine":46,"endColumn":16},{"ruleId":"898","severity":1,"message":"970","line":46,"column":18,"nodeType":"892","messageId":"893","endLine":46,"endColumn":25},{"ruleId":"971","severity":1,"message":"972","line":85,"column":28,"nodeType":"973","messageId":"974","endLine":85,"endColumn":37,"fix":"975"},{"ruleId":"976","severity":1,"message":"977","line":85,"column":28,"nodeType":"973","messageId":"978","endLine":85,"endColumn":37,"fix":"979"},{"ruleId":"971","severity":1,"message":"972","line":88,"column":27,"nodeType":"973","messageId":"974","endLine":88,"endColumn":36,"fix":"980"},{"ruleId":"976","severity":1,"message":"977","line":88,"column":27,"nodeType":"973","messageId":"978","endLine":88,"endColumn":36,"fix":"981"},{"ruleId":"976","severity":1,"message":"977","line":106,"column":39,"nodeType":"973","messageId":"978","endLine":106,"endColumn":49,"fix":"982"},{"ruleId":"983","severity":1,"message":"984","line":106,"column":39,"nodeType":"973","messageId":"985","endLine":106,"endColumn":49},{"ruleId":"971","severity":1,"message":"972","line":110,"column":35,"nodeType":"973","messageId":"974","endLine":110,"endColumn":44,"fix":"986"},{"ruleId":"976","severity":1,"message":"977","line":110,"column":35,"nodeType":"973","messageId":"978","endLine":110,"endColumn":44,"fix":"987"},{"ruleId":"976","severity":1,"message":"977","line":118,"column":27,"nodeType":"973","messageId":"978","endLine":118,"endColumn":37,"fix":"988"},{"ruleId":"983","severity":1,"message":"984","line":118,"column":27,"nodeType":"973","messageId":"985","endLine":118,"endColumn":37},{"ruleId":"989","severity":1,"message":"990","line":131,"column":29,"nodeType":"991","messageId":"992","endLine":131,"endColumn":30,"suggestions":"993"},{"ruleId":"989","severity":1,"message":"990","line":131,"column":46,"nodeType":"991","messageId":"992","endLine":131,"endColumn":47,"suggestions":"994"},{"ruleId":"886","replacedBy":"956"},{"ruleId":"888","replacedBy":"957"},{"ruleId":"898","severity":1,"message":"995","line":1,"column":15,"nodeType":"892","messageId":"893","endLine":1,"endColumn":23},{"ruleId":"898","severity":1,"message":"996","line":3,"column":8,"nodeType":"892","messageId":"893","endLine":3,"endColumn":24},{"ruleId":"898","severity":1,"message":"997","line":4,"column":8,"nodeType":"892","messageId":"893","endLine":4,"endColumn":22},{"ruleId":"898","severity":1,"message":"958","line":5,"column":8,"nodeType":"892","messageId":"893","endLine":5,"endColumn":15},{"ruleId":"898","severity":1,"message":"998","line":6,"column":8,"nodeType":"892","messageId":"893","endLine":6,"endColumn":20},{"ruleId":"898","severity":1,"message":"899","line":7,"column":8,"nodeType":"892","messageId":"893","endLine":7,"endColumn":13},{"ruleId":"898","severity":1,"message":"926","line":9,"column":8,"nodeType":"892","messageId":"893","endLine":9,"endColumn":18},{"ruleId":"999","severity":1,"message":"1000","line":22,"column":75,"nodeType":"1001","messageId":"1002","endLine":22,"endColumn":77},{"ruleId":"898","severity":1,"message":"998","line":2,"column":8,"nodeType":"892","messageId":"893","endLine":2,"endColumn":20},{"ruleId":"898","severity":1,"message":"997","line":3,"column":8,"nodeType":"892","messageId":"893","endLine":3,"endColumn":22},{"ruleId":"898","severity":1,"message":"1003","line":4,"column":8,"nodeType":"892","messageId":"893","endLine":4,"endColumn":22},{"ruleId":"898","severity":1,"message":"1004","line":5,"column":8,"nodeType":"892","messageId":"893","endLine":5,"endColumn":20},{"ruleId":"898","severity":1,"message":"926","line":11,"column":8,"nodeType":"892","messageId":"893","endLine":11,"endColumn":18},{"ruleId":"948","severity":1,"message":"1005","line":19,"column":110,"nodeType":"950","messageId":"951","endLine":19,"endColumn":112},{"ruleId":"898","severity":1,"message":"894","line":1,"column":15,"nodeType":"892","messageId":"893","endLine":1,"endColumn":24},{"ruleId":"898","severity":1,"message":"961","line":10,"column":8,"nodeType":"892","messageId":"893","endLine":10,"endColumn":20},{"ruleId":"898","severity":1,"message":"907","line":16,"column":8,"nodeType":"892","messageId":"893","endLine":16,"endColumn":18},{"ruleId":"898","severity":1,"message":"997","line":19,"column":8,"nodeType":"892","messageId":"893","endLine":19,"endColumn":22},{"ruleId":"898","severity":1,"message":"1006","line":21,"column":8,"nodeType":"892","messageId":"893","endLine":21,"endColumn":13},{"ruleId":"898","severity":1,"message":"930","line":23,"column":8,"nodeType":"892","messageId":"893","endLine":23,"endColumn":10},{"ruleId":"898","severity":1,"message":"1007","line":24,"column":8,"nodeType":"892","messageId":"893","endLine":24,"endColumn":27},{"ruleId":"898","severity":1,"message":"926","line":25,"column":8,"nodeType":"892","messageId":"893","endLine":25,"endColumn":18},{"ruleId":"898","severity":1,"message":"1008","line":26,"column":8,"nodeType":"892","messageId":"893","endLine":26,"endColumn":17},{"ruleId":"898","severity":1,"message":"1009","line":28,"column":8,"nodeType":"892","messageId":"893","endLine":28,"endColumn":22},{"ruleId":"898","severity":1,"message":"1010","line":46,"column":7,"nodeType":"892","messageId":"893","endLine":46,"endColumn":11},{"ruleId":"898","severity":1,"message":"1011","line":66,"column":12,"nodeType":"892","messageId":"893","endLine":66,"endColumn":23},{"ruleId":"898","severity":1,"message":"1012","line":66,"column":25,"nodeType":"892","messageId":"893","endLine":66,"endColumn":39},{"ruleId":"898","severity":1,"message":"1013","line":71,"column":18,"nodeType":"892","messageId":"893","endLine":71,"endColumn":26},{"ruleId":"948","severity":1,"message":"949","line":79,"column":38,"nodeType":"950","messageId":"951","endLine":79,"endColumn":40},{"ruleId":"898","severity":1,"message":"961","line":5,"column":8,"nodeType":"892","messageId":"893","endLine":5,"endColumn":20},{"ruleId":"898","severity":1,"message":"907","line":8,"column":8,"nodeType":"892","messageId":"893","endLine":8,"endColumn":18},{"ruleId":"898","severity":1,"message":"1014","line":9,"column":8,"nodeType":"892","messageId":"893","endLine":9,"endColumn":12},{"ruleId":"898","severity":1,"message":"1015","line":10,"column":8,"nodeType":"892","messageId":"893","endLine":10,"endColumn":16},{"ruleId":"898","severity":1,"message":"1016","line":11,"column":8,"nodeType":"892","messageId":"893","endLine":11,"endColumn":20},{"ruleId":"898","severity":1,"message":"958","line":12,"column":8,"nodeType":"892","messageId":"893","endLine":12,"endColumn":15},{"ruleId":"898","severity":1,"message":"1004","line":14,"column":8,"nodeType":"892","messageId":"893","endLine":14,"endColumn":20},{"ruleId":"898","severity":1,"message":"926","line":17,"column":8,"nodeType":"892","messageId":"893","endLine":17,"endColumn":18},{"ruleId":"898","severity":1,"message":"1017","line":19,"column":8,"nodeType":"892","messageId":"893","endLine":19,"endColumn":24},{"ruleId":"898","severity":1,"message":"1009","line":20,"column":8,"nodeType":"892","messageId":"893","endLine":20,"endColumn":22},{"ruleId":"898","severity":1,"message":"1011","line":39,"column":12,"nodeType":"892","messageId":"893","endLine":39,"endColumn":23},{"ruleId":"898","severity":1,"message":"1012","line":39,"column":25,"nodeType":"892","messageId":"893","endLine":39,"endColumn":39},{"ruleId":"971","severity":1,"message":"972","line":40,"column":20,"nodeType":"973","messageId":"974","endLine":40,"endColumn":29,"fix":"1018"},{"ruleId":"976","severity":1,"message":"977","line":40,"column":20,"nodeType":"973","messageId":"978","endLine":40,"endColumn":29,"fix":"1019"},{"ruleId":"976","severity":1,"message":"977","line":41,"column":15,"nodeType":"973","messageId":"978","endLine":41,"endColumn":25,"fix":"1020"},{"ruleId":"983","severity":1,"message":"984","line":41,"column":15,"nodeType":"973","messageId":"985","endLine":41,"endColumn":25},{"ruleId":"948","severity":1,"message":"949","line":52,"column":33,"nodeType":"950","messageId":"951","endLine":52,"endColumn":35},{"ruleId":"898","severity":1,"message":"1021","line":1,"column":10,"nodeType":"892","messageId":"893","endLine":1,"endColumn":23},{"ruleId":"898","severity":1,"message":"1022","line":113,"column":7,"nodeType":"892","messageId":"893","endLine":113,"endColumn":14},{"ruleId":"898","severity":1,"message":"1023","line":2,"column":8,"nodeType":"892","messageId":"893","endLine":2,"endColumn":32},{"ruleId":"898","severity":1,"message":"1024","line":3,"column":8,"nodeType":"892","messageId":"893","endLine":3,"endColumn":14},{"ruleId":"898","severity":1,"message":"1014","line":4,"column":8,"nodeType":"892","messageId":"893","endLine":4,"endColumn":12},{"ruleId":"898","severity":1,"message":"1015","line":5,"column":8,"nodeType":"892","messageId":"893","endLine":5,"endColumn":16},{"ruleId":"898","severity":1,"message":"1025","line":6,"column":8,"nodeType":"892","messageId":"893","endLine":6,"endColumn":22},{"ruleId":"898","severity":1,"message":"1016","line":7,"column":8,"nodeType":"892","messageId":"893","endLine":7,"endColumn":20},{"ruleId":"898","severity":1,"message":"1026","line":10,"column":8,"nodeType":"892","messageId":"893","endLine":10,"endColumn":18},{"ruleId":"898","severity":1,"message":"1027","line":11,"column":8,"nodeType":"892","messageId":"893","endLine":11,"endColumn":15},{"ruleId":"898","severity":1,"message":"907","line":12,"column":8,"nodeType":"892","messageId":"893","endLine":12,"endColumn":18},{"ruleId":"898","severity":1,"message":"1028","line":13,"column":10,"nodeType":"892","messageId":"893","endLine":13,"endColumn":14},{"ruleId":"898","severity":1,"message":"1029","line":17,"column":8,"nodeType":"892","messageId":"893","endLine":17,"endColumn":21},{"ruleId":"898","severity":1,"message":"958","line":26,"column":8,"nodeType":"892","messageId":"893","endLine":26,"endColumn":15},{"ruleId":"898","severity":1,"message":"1030","line":105,"column":25,"nodeType":"892","messageId":"893","endLine":105,"endColumn":41},{"ruleId":"886","replacedBy":"1031"},{"ruleId":"888","replacedBy":"1032"},{"ruleId":"898","severity":1,"message":"1033","line":3,"column":8,"nodeType":"892","messageId":"893","endLine":3,"endColumn":14},{"ruleId":"898","severity":1,"message":"1029","line":11,"column":8,"nodeType":"892","messageId":"893","endLine":11,"endColumn":21},{"ruleId":"898","severity":1,"message":"963","line":14,"column":8,"nodeType":"892","messageId":"893","endLine":14,"endColumn":23},{"ruleId":"898","severity":1,"message":"896","line":17,"column":8,"nodeType":"892","messageId":"893","endLine":17,"endColumn":23},{"ruleId":"898","severity":1,"message":"1034","line":19,"column":7,"nodeType":"892","messageId":"893","endLine":19,"endColumn":13},{"ruleId":"971","severity":1,"message":"972","line":19,"column":16,"nodeType":"973","messageId":"974","endLine":19,"endColumn":27,"fix":"1035"},{"ruleId":"971","severity":1,"message":"972","line":51,"column":62,"nodeType":"973","messageId":"974","endLine":51,"endColumn":71,"fix":"1036"},{"ruleId":"976","severity":1,"message":"977","line":51,"column":62,"nodeType":"973","messageId":"978","endLine":51,"endColumn":71,"fix":"1037"},{"ruleId":"898","severity":1,"message":"1024","line":3,"column":8,"nodeType":"892","messageId":"893","endLine":3,"endColumn":14},{"ruleId":"898","severity":1,"message":"1014","line":4,"column":8,"nodeType":"892","messageId":"893","endLine":4,"endColumn":12},{"ruleId":"898","severity":1,"message":"1015","line":5,"column":8,"nodeType":"892","messageId":"893","endLine":5,"endColumn":16},{"ruleId":"898","severity":1,"message":"1025","line":6,"column":8,"nodeType":"892","messageId":"893","endLine":6,"endColumn":22},{"ruleId":"898","severity":1,"message":"1016","line":7,"column":8,"nodeType":"892","messageId":"893","endLine":7,"endColumn":20},{"ruleId":"898","severity":1,"message":"1026","line":10,"column":8,"nodeType":"892","messageId":"893","endLine":10,"endColumn":18},{"ruleId":"898","severity":1,"message":"1027","line":11,"column":8,"nodeType":"892","messageId":"893","endLine":11,"endColumn":15},{"ruleId":"898","severity":1,"message":"907","line":12,"column":8,"nodeType":"892","messageId":"893","endLine":12,"endColumn":18},{"ruleId":"898","severity":1,"message":"1028","line":13,"column":10,"nodeType":"892","messageId":"893","endLine":13,"endColumn":14},{"ruleId":"898","severity":1,"message":"1038","line":15,"column":8,"nodeType":"892","messageId":"893","endLine":15,"endColumn":17},{"ruleId":"976","severity":1,"message":"977","line":42,"column":13,"nodeType":"973","messageId":"978","endLine":42,"endColumn":23,"fix":"1039"},{"ruleId":"983","severity":1,"message":"984","line":42,"column":13,"nodeType":"973","messageId":"985","endLine":42,"endColumn":23},{"ruleId":"898","severity":1,"message":"1040","line":45,"column":9,"nodeType":"892","messageId":"893","endLine":45,"endColumn":28},{"ruleId":"948","severity":1,"message":"949","line":88,"column":14,"nodeType":"950","messageId":"951","endLine":88,"endColumn":16},{"ruleId":"948","severity":1,"message":"949","line":90,"column":21,"nodeType":"950","messageId":"951","endLine":90,"endColumn":23},{"ruleId":"898","severity":1,"message":"1041","line":10,"column":10,"nodeType":"892","messageId":"893","endLine":10,"endColumn":29},{"ruleId":"898","severity":1,"message":"944","line":11,"column":10,"nodeType":"892","messageId":"893","endLine":11,"endColumn":26},{"ruleId":"898","severity":1,"message":"938","line":40,"column":10,"nodeType":"892","messageId":"893","endLine":40,"endColumn":17},{"ruleId":"1042","severity":1,"message":"1043","line":14,"column":9,"nodeType":"1044","messageId":"1045","endLine":14,"endColumn":15},{"ruleId":"1042","severity":1,"message":"1043","line":17,"column":9,"nodeType":"1044","messageId":"1045","endLine":17,"endColumn":15},{"ruleId":"1042","severity":1,"message":"1043","line":20,"column":9,"nodeType":"1044","messageId":"1045","endLine":20,"endColumn":15},{"ruleId":"1046","severity":1,"message":"1047","line":5,"column":1,"nodeType":"1048","endLine":9,"endColumn":2},{"ruleId":"898","severity":1,"message":"1049","line":3,"column":10,"nodeType":"892","messageId":"893","endLine":3,"endColumn":16},{"ruleId":"898","severity":1,"message":"1050","line":11,"column":8,"nodeType":"892","messageId":"893","endLine":11,"endColumn":28},{"ruleId":"898","severity":1,"message":"908","line":12,"column":8,"nodeType":"892","messageId":"893","endLine":12,"endColumn":18},{"ruleId":"898","severity":1,"message":"963","line":22,"column":8,"nodeType":"892","messageId":"893","endLine":22,"endColumn":23},{"ruleId":"898","severity":1,"message":"1051","line":24,"column":7,"nodeType":"892","messageId":"893","endLine":24,"endColumn":11},{"ruleId":"1052","severity":1,"message":"1053","line":43,"column":3,"nodeType":"1054","endLine":43,"endColumn":11,"suggestions":"1055"},{"ruleId":"898","severity":1,"message":"1056","line":47,"column":8,"nodeType":"892","messageId":"893","endLine":47,"endColumn":16},{"ruleId":"898","severity":1,"message":"1057","line":47,"column":17,"nodeType":"892","messageId":"893","endLine":47,"endColumn":25},{"ruleId":"948","severity":1,"message":"1005","line":53,"column":19,"nodeType":"950","messageId":"951","endLine":53,"endColumn":21},{"ruleId":"898","severity":1,"message":"1058","line":62,"column":7,"nodeType":"892","messageId":"893","endLine":62,"endColumn":11},{"ruleId":"999","severity":1,"message":"1000","line":70,"column":9,"nodeType":"1059","messageId":"1060","endLine":70,"endColumn":17},{"ruleId":"898","severity":1,"message":"1061","line":6,"column":8,"nodeType":"892","messageId":"893","endLine":6,"endColumn":37},{"ruleId":"898","severity":1,"message":"1050","line":13,"column":8,"nodeType":"892","messageId":"893","endLine":13,"endColumn":28},{"ruleId":"898","severity":1,"message":"908","line":14,"column":8,"nodeType":"892","messageId":"893","endLine":14,"endColumn":18},{"ruleId":"898","severity":1,"message":"1033","line":15,"column":8,"nodeType":"892","messageId":"893","endLine":15,"endColumn":14},{"ruleId":"898","severity":1,"message":"943","line":17,"column":10,"nodeType":"892","messageId":"893","endLine":17,"endColumn":25},{"ruleId":"898","severity":1,"message":"944","line":18,"column":10,"nodeType":"892","messageId":"893","endLine":18,"endColumn":26},{"ruleId":"898","severity":1,"message":"926","line":21,"column":8,"nodeType":"892","messageId":"893","endLine":21,"endColumn":18},{"ruleId":"898","severity":1,"message":"900","line":24,"column":8,"nodeType":"892","messageId":"893","endLine":24,"endColumn":22},{"ruleId":"898","severity":1,"message":"963","line":26,"column":8,"nodeType":"892","messageId":"893","endLine":26,"endColumn":23},{"ruleId":"898","severity":1,"message":"1062","line":32,"column":8,"nodeType":"892","messageId":"893","endLine":32,"endColumn":33},{"ruleId":"898","severity":1,"message":"1051","line":40,"column":7,"nodeType":"892","messageId":"893","endLine":40,"endColumn":11},{"ruleId":"948","severity":1,"message":"949","line":71,"column":24,"nodeType":"950","messageId":"951","endLine":71,"endColumn":26},{"ruleId":"898","severity":1,"message":"1063","line":82,"column":11,"nodeType":"892","messageId":"893","endLine":82,"endColumn":19},{"ruleId":"898","severity":1,"message":"1056","line":101,"column":8,"nodeType":"892","messageId":"893","endLine":101,"endColumn":16},{"ruleId":"898","severity":1,"message":"1057","line":101,"column":17,"nodeType":"892","messageId":"893","endLine":101,"endColumn":25},{"ruleId":"898","severity":1,"message":"1064","line":103,"column":7,"nodeType":"892","messageId":"893","endLine":103,"endColumn":15},{"ruleId":"948","severity":1,"message":"1005","line":106,"column":19,"nodeType":"950","messageId":"951","endLine":106,"endColumn":21},{"ruleId":"898","severity":1,"message":"1058","line":113,"column":7,"nodeType":"892","messageId":"893","endLine":113,"endColumn":11},{"ruleId":"999","severity":1,"message":"1000","line":131,"column":9,"nodeType":"1059","messageId":"1060","endLine":131,"endColumn":17},{"ruleId":"898","severity":1,"message":"902","line":2,"column":8,"nodeType":"892","messageId":"893","endLine":2,"endColumn":11},{"ruleId":"898","severity":1,"message":"1065","line":5,"column":8,"nodeType":"892","messageId":"893","endLine":5,"endColumn":19},{"ruleId":"898","severity":1,"message":"1066","line":14,"column":10,"nodeType":"892","messageId":"893","endLine":14,"endColumn":18},{"ruleId":"898","severity":1,"message":"1067","line":14,"column":31,"nodeType":"892","messageId":"893","endLine":14,"endColumn":42},{"ruleId":"898","severity":1,"message":"944","line":16,"column":10,"nodeType":"892","messageId":"893","endLine":16,"endColumn":26},{"ruleId":"898","severity":1,"message":"1068","line":29,"column":10,"nodeType":"892","messageId":"893","endLine":29,"endColumn":15},{"ruleId":"898","severity":1,"message":"1069","line":29,"column":16,"nodeType":"892","messageId":"893","endLine":29,"endColumn":20},{"ruleId":"898","severity":1,"message":"1070","line":47,"column":27,"nodeType":"892","messageId":"893","endLine":47,"endColumn":42},{"ruleId":"898","severity":1,"message":"1071","line":72,"column":9,"nodeType":"892","messageId":"893","endLine":72,"endColumn":14},{"ruleId":"1052","severity":1,"message":"1072","line":96,"column":5,"nodeType":"1054","endLine":96,"endColumn":12,"suggestions":"1073"},{"ruleId":"898","severity":1,"message":"1074","line":2,"column":10,"nodeType":"892","messageId":"893","endLine":2,"endColumn":18},{"ruleId":"898","severity":1,"message":"1075","line":4,"column":10,"nodeType":"892","messageId":"893","endLine":4,"endColumn":29},{"ruleId":"898","severity":1,"message":"1076","line":4,"column":30,"nodeType":"892","messageId":"893","endLine":4,"endColumn":47},{"ruleId":"898","severity":1,"message":"998","line":12,"column":8,"nodeType":"892","messageId":"893","endLine":12,"endColumn":20},{"ruleId":"898","severity":1,"message":"963","line":13,"column":8,"nodeType":"892","messageId":"893","endLine":13,"endColumn":23},{"ruleId":"898","severity":1,"message":"1077","line":1,"column":23,"nodeType":"892","messageId":"893","endLine":1,"endColumn":36},{"ruleId":"898","severity":1,"message":"1078","line":3,"column":10,"nodeType":"892","messageId":"893","endLine":3,"endColumn":17},{"ruleId":"971","severity":1,"message":"972","line":16,"column":17,"nodeType":"973","messageId":"974","endLine":16,"endColumn":26,"fix":"1079"},{"ruleId":"976","severity":1,"message":"977","line":16,"column":17,"nodeType":"973","messageId":"978","endLine":16,"endColumn":26,"fix":"1080"},{"ruleId":"971","severity":1,"message":"972","line":17,"column":18,"nodeType":"973","messageId":"974","endLine":17,"endColumn":27,"fix":"1081"},{"ruleId":"976","severity":1,"message":"977","line":17,"column":18,"nodeType":"973","messageId":"978","endLine":17,"endColumn":27,"fix":"1082"},{"ruleId":"999","severity":1,"message":"1083","line":68,"column":53,"nodeType":"1001","messageId":"1084","endLine":68,"endColumn":55},{"ruleId":"898","severity":1,"message":"1077","line":1,"column":23,"nodeType":"892","messageId":"893","endLine":1,"endColumn":36},{"ruleId":"886","replacedBy":"1085"},{"ruleId":"888","replacedBy":"1086"},{"ruleId":"898","severity":1,"message":"1074","line":3,"column":10,"nodeType":"892","messageId":"893","endLine":3,"endColumn":18},{"ruleId":"898","severity":1,"message":"1075","line":5,"column":10,"nodeType":"892","messageId":"893","endLine":5,"endColumn":29},{"ruleId":"898","severity":1,"message":"1076","line":5,"column":30,"nodeType":"892","messageId":"893","endLine":5,"endColumn":47},{"ruleId":"898","severity":1,"message":"896","line":10,"column":8,"nodeType":"892","messageId":"893","endLine":10,"endColumn":23},{"ruleId":"898","severity":1,"message":"896","line":14,"column":8,"nodeType":"892","messageId":"893","endLine":14,"endColumn":23},{"ruleId":"948","severity":1,"message":"949","line":32,"column":27,"nodeType":"950","messageId":"951","endLine":32,"endColumn":29},{"ruleId":"948","severity":1,"message":"949","line":43,"column":27,"nodeType":"950","messageId":"951","endLine":43,"endColumn":29},{"ruleId":"948","severity":1,"message":"949","line":53,"column":27,"nodeType":"950","messageId":"951","endLine":53,"endColumn":29},{"ruleId":"898","severity":1,"message":"1087","line":88,"column":10,"nodeType":"892","messageId":"893","endLine":88,"endColumn":17},{"ruleId":"898","severity":1,"message":"1088","line":96,"column":8,"nodeType":"892","messageId":"893","endLine":96,"endColumn":14},{"ruleId":"898","severity":1,"message":"938","line":96,"column":16,"nodeType":"892","messageId":"893","endLine":96,"endColumn":23},{"ruleId":"898","severity":1,"message":"1089","line":1,"column":10,"nodeType":"892","messageId":"893","endLine":1,"endColumn":14},{"ruleId":"971","severity":1,"message":"972","line":49,"column":15,"nodeType":"973","messageId":"974","endLine":49,"endColumn":26,"fix":"1090"},{"ruleId":"971","severity":1,"message":"972","line":52,"column":42,"nodeType":"973","messageId":"974","endLine":52,"endColumn":53,"fix":"1091"},{"ruleId":"948","severity":1,"message":"949","line":84,"column":30,"nodeType":"950","messageId":"951","endLine":84,"endColumn":32},{"ruleId":"971","severity":1,"message":"972","line":94,"column":23,"nodeType":"973","messageId":"974","endLine":94,"endColumn":32,"fix":"1092"},{"ruleId":"976","severity":1,"message":"977","line":94,"column":23,"nodeType":"973","messageId":"978","endLine":94,"endColumn":32,"fix":"1093"},{"ruleId":"999","severity":1,"message":"1000","line":99,"column":64,"nodeType":"1001","messageId":"1002","endLine":99,"endColumn":66},{"ruleId":"971","severity":1,"message":"972","line":116,"column":31,"nodeType":"973","messageId":"974","endLine":116,"endColumn":40,"fix":"1094"},{"ruleId":"976","severity":1,"message":"977","line":116,"column":31,"nodeType":"973","messageId":"978","endLine":116,"endColumn":40,"fix":"1095"},{"ruleId":"1052","severity":1,"message":"1096","line":140,"column":6,"nodeType":"1054","endLine":140,"endColumn":8,"suggestions":"1097"},{"ruleId":"898","severity":1,"message":"1077","line":1,"column":23,"nodeType":"892","messageId":"893","endLine":1,"endColumn":36},{"ruleId":"898","severity":1,"message":"1074","line":2,"column":10,"nodeType":"892","messageId":"893","endLine":2,"endColumn":18},{"ruleId":"898","severity":1,"message":"1075","line":4,"column":10,"nodeType":"892","messageId":"893","endLine":4,"endColumn":29},{"ruleId":"898","severity":1,"message":"1076","line":4,"column":30,"nodeType":"892","messageId":"893","endLine":4,"endColumn":47},{"ruleId":"898","severity":1,"message":"1098","line":9,"column":5,"nodeType":"892","messageId":"893","endLine":9,"endColumn":22},{"ruleId":"898","severity":1,"message":"896","line":13,"column":8,"nodeType":"892","messageId":"893","endLine":13,"endColumn":23},{"ruleId":"898","severity":1,"message":"963","line":16,"column":8,"nodeType":"892","messageId":"893","endLine":16,"endColumn":23},{"ruleId":"898","severity":1,"message":"1099","line":17,"column":10,"nodeType":"892","messageId":"893","endLine":17,"endColumn":24},{"ruleId":"898","severity":1,"message":"965","line":17,"column":26,"nodeType":"892","messageId":"893","endLine":17,"endColumn":46},{"ruleId":"898","severity":1,"message":"1100","line":25,"column":11,"nodeType":"892","messageId":"893","endLine":25,"endColumn":27},{"ruleId":"886","replacedBy":"1101"},{"ruleId":"888","replacedBy":"1102"},{"ruleId":"898","severity":1,"message":"1103","line":1,"column":8,"nodeType":"892","messageId":"893","endLine":1,"endColumn":13},{"ruleId":"886","replacedBy":"1104"},{"ruleId":"888","replacedBy":"1105"},{"ruleId":"1052","severity":1,"message":"1106","line":77,"column":7,"nodeType":"1054","endLine":77,"endColumn":25,"suggestions":"1107"},{"ruleId":"898","severity":1,"message":"1108","line":10,"column":11,"nodeType":"892","messageId":"893","endLine":10,"endColumn":18},{"ruleId":"898","severity":1,"message":"1109","line":10,"column":20,"nodeType":"892","messageId":"893","endLine":10,"endColumn":30},{"ruleId":"898","severity":1,"message":"1110","line":16,"column":24,"nodeType":"892","messageId":"893","endLine":16,"endColumn":32},{"ruleId":"1052","severity":1,"message":"1106","line":58,"column":7,"nodeType":"1054","endLine":58,"endColumn":25,"suggestions":"1111"},{"ruleId":"898","severity":1,"message":"998","line":7,"column":8,"nodeType":"892","messageId":"893","endLine":7,"endColumn":20},{"ruleId":"898","severity":1,"message":"958","line":8,"column":10,"nodeType":"892","messageId":"893","endLine":8,"endColumn":17},{"ruleId":"898","severity":1,"message":"1112","line":8,"column":19,"nodeType":"892","messageId":"893","endLine":8,"endColumn":31},{"ruleId":"898","severity":1,"message":"1016","line":8,"column":33,"nodeType":"892","messageId":"893","endLine":8,"endColumn":45},{"ruleId":"898","severity":1,"message":"1113","line":8,"column":47,"nodeType":"892","messageId":"893","endLine":8,"endColumn":55},{"ruleId":"898","severity":1,"message":"1114","line":8,"column":57,"nodeType":"892","messageId":"893","endLine":8,"endColumn":65},{"ruleId":"898","severity":1,"message":"1115","line":9,"column":10,"nodeType":"892","messageId":"893","endLine":9,"endColumn":15},{"ruleId":"898","severity":1,"message":"1116","line":83,"column":11,"nodeType":"892","messageId":"893","endLine":83,"endColumn":19},{"ruleId":"948","severity":1,"message":"949","line":94,"column":28,"nodeType":"950","messageId":"951","endLine":94,"endColumn":30},{"ruleId":"886","replacedBy":"1117"},{"ruleId":"888","replacedBy":"1118"},{"ruleId":"952","severity":1,"message":"953","line":6,"column":3,"nodeType":"954","messageId":"955","endLine":10,"endColumn":4},{"ruleId":"1119","severity":1,"message":"1120","line":18,"column":11,"nodeType":"1121","messageId":"1122","endLine":18,"endColumn":57},{"ruleId":"886","replacedBy":"1117"},{"ruleId":"888","replacedBy":"1118"},{"ruleId":"898","severity":1,"message":"894","line":1,"column":15,"nodeType":"892","messageId":"893","endLine":1,"endColumn":24},{"ruleId":"898","severity":1,"message":"958","line":5,"column":8,"nodeType":"892","messageId":"893","endLine":5,"endColumn":15},{"ruleId":"898","severity":1,"message":"959","line":6,"column":8,"nodeType":"892","messageId":"893","endLine":6,"endColumn":16},{"ruleId":"898","severity":1,"message":"960","line":8,"column":8,"nodeType":"892","messageId":"893","endLine":8,"endColumn":24},{"ruleId":"898","severity":1,"message":"902","line":9,"column":10,"nodeType":"892","messageId":"893","endLine":9,"endColumn":13},{"ruleId":"898","severity":1,"message":"961","line":17,"column":8,"nodeType":"892","messageId":"893","endLine":17,"endColumn":20},{"ruleId":"898","severity":1,"message":"962","line":20,"column":8,"nodeType":"892","messageId":"893","endLine":20,"endColumn":16},{"ruleId":"898","severity":1,"message":"963","line":21,"column":8,"nodeType":"892","messageId":"893","endLine":21,"endColumn":23},{"ruleId":"898","severity":1,"message":"964","line":23,"column":10,"nodeType":"892","messageId":"893","endLine":23,"endColumn":30},{"ruleId":"898","severity":1,"message":"965","line":23,"column":32,"nodeType":"892","messageId":"893","endLine":23,"endColumn":52},{"ruleId":"898","severity":1,"message":"926","line":27,"column":8,"nodeType":"892","messageId":"893","endLine":27,"endColumn":18},{"ruleId":"898","severity":1,"message":"1123","line":28,"column":19,"nodeType":"892","messageId":"893","endLine":28,"endColumn":26},{"ruleId":"898","severity":1,"message":"966","line":34,"column":12,"nodeType":"892","messageId":"893","endLine":34,"endColumn":19},{"ruleId":"898","severity":1,"message":"967","line":34,"column":21,"nodeType":"892","messageId":"893","endLine":34,"endColumn":30},{"ruleId":"898","severity":1,"message":"938","line":36,"column":22,"nodeType":"892","messageId":"893","endLine":36,"endColumn":29},{"ruleId":"898","severity":1,"message":"968","line":37,"column":12,"nodeType":"892","messageId":"893","endLine":37,"endColumn":26},{"ruleId":"898","severity":1,"message":"969","line":39,"column":12,"nodeType":"892","messageId":"893","endLine":39,"endColumn":16},{"ruleId":"898","severity":1,"message":"970","line":39,"column":18,"nodeType":"892","messageId":"893","endLine":39,"endColumn":25},{"ruleId":"971","severity":1,"message":"972","line":42,"column":24,"nodeType":"973","messageId":"974","endLine":42,"endColumn":33,"fix":"1124"},{"ruleId":"976","severity":1,"message":"977","line":42,"column":24,"nodeType":"973","messageId":"978","endLine":42,"endColumn":33,"fix":"1125"},{"ruleId":"971","severity":1,"message":"972","line":43,"column":23,"nodeType":"973","messageId":"974","endLine":43,"endColumn":32,"fix":"1126"},{"ruleId":"976","severity":1,"message":"977","line":43,"column":23,"nodeType":"973","messageId":"978","endLine":43,"endColumn":32,"fix":"1127"},{"ruleId":"976","severity":1,"message":"977","line":63,"column":35,"nodeType":"973","messageId":"978","endLine":63,"endColumn":45,"fix":"1128"},{"ruleId":"983","severity":1,"message":"984","line":63,"column":35,"nodeType":"973","messageId":"985","endLine":63,"endColumn":45},{"ruleId":"971","severity":1,"message":"972","line":67,"column":31,"nodeType":"973","messageId":"974","endLine":67,"endColumn":40,"fix":"1129"},{"ruleId":"976","severity":1,"message":"977","line":67,"column":31,"nodeType":"973","messageId":"978","endLine":67,"endColumn":40,"fix":"1130"},{"ruleId":"976","severity":1,"message":"977","line":74,"column":23,"nodeType":"973","messageId":"978","endLine":74,"endColumn":33,"fix":"1131"},{"ruleId":"983","severity":1,"message":"984","line":74,"column":23,"nodeType":"973","messageId":"985","endLine":74,"endColumn":33},{"ruleId":"989","severity":1,"message":"990","line":88,"column":25,"nodeType":"991","messageId":"992","endLine":88,"endColumn":26,"suggestions":"1132"},{"ruleId":"989","severity":1,"message":"990","line":88,"column":56,"nodeType":"991","messageId":"992","endLine":88,"endColumn":57,"suggestions":"1133"},{"ruleId":"898","severity":1,"message":"1134","line":6,"column":8,"nodeType":"892","messageId":"893","endLine":6,"endColumn":20},{"ruleId":"898","severity":1,"message":"998","line":7,"column":8,"nodeType":"892","messageId":"893","endLine":7,"endColumn":20},{"ruleId":"898","severity":1,"message":"958","line":8,"column":10,"nodeType":"892","messageId":"893","endLine":8,"endColumn":17},{"ruleId":"898","severity":1,"message":"1112","line":8,"column":19,"nodeType":"892","messageId":"893","endLine":8,"endColumn":31},{"ruleId":"898","severity":1,"message":"1016","line":8,"column":33,"nodeType":"892","messageId":"893","endLine":8,"endColumn":45},{"ruleId":"898","severity":1,"message":"1113","line":8,"column":47,"nodeType":"892","messageId":"893","endLine":8,"endColumn":55},{"ruleId":"898","severity":1,"message":"1114","line":8,"column":57,"nodeType":"892","messageId":"893","endLine":8,"endColumn":65},{"ruleId":"898","severity":1,"message":"1115","line":9,"column":10,"nodeType":"892","messageId":"893","endLine":9,"endColumn":15},{"ruleId":"898","severity":1,"message":"1078","line":16,"column":10,"nodeType":"892","messageId":"893","endLine":16,"endColumn":17},{"ruleId":"898","severity":1,"message":"1135","line":18,"column":8,"nodeType":"892","messageId":"893","endLine":18,"endColumn":17},{"ruleId":"898","severity":1,"message":"1116","line":142,"column":11,"nodeType":"892","messageId":"893","endLine":142,"endColumn":19},{"ruleId":"948","severity":1,"message":"949","line":153,"column":28,"nodeType":"950","messageId":"951","endLine":153,"endColumn":30},{"ruleId":"1119","severity":1,"message":"1136","line":201,"column":21,"nodeType":"1121","messageId":"1122","endLine":201,"endColumn":68},{"ruleId":"898","severity":1,"message":"1050","line":13,"column":8,"nodeType":"892","messageId":"893","endLine":13,"endColumn":28},{"ruleId":"898","severity":1,"message":"908","line":14,"column":8,"nodeType":"892","messageId":"893","endLine":14,"endColumn":18},{"ruleId":"898","severity":1,"message":"1033","line":15,"column":8,"nodeType":"892","messageId":"893","endLine":15,"endColumn":14},{"ruleId":"898","severity":1,"message":"943","line":17,"column":10,"nodeType":"892","messageId":"893","endLine":17,"endColumn":25},{"ruleId":"898","severity":1,"message":"944","line":18,"column":10,"nodeType":"892","messageId":"893","endLine":18,"endColumn":26},{"ruleId":"898","severity":1,"message":"926","line":21,"column":8,"nodeType":"892","messageId":"893","endLine":21,"endColumn":18},{"ruleId":"898","severity":1,"message":"900","line":24,"column":8,"nodeType":"892","messageId":"893","endLine":24,"endColumn":22},{"ruleId":"898","severity":1,"message":"963","line":26,"column":8,"nodeType":"892","messageId":"893","endLine":26,"endColumn":23},{"ruleId":"898","severity":1,"message":"1051","line":39,"column":7,"nodeType":"892","messageId":"893","endLine":39,"endColumn":11},{"ruleId":"948","severity":1,"message":"949","line":63,"column":24,"nodeType":"950","messageId":"951","endLine":63,"endColumn":26},{"ruleId":"898","severity":1,"message":"1063","line":83,"column":11,"nodeType":"892","messageId":"893","endLine":83,"endColumn":19},{"ruleId":"898","severity":1,"message":"1137","line":94,"column":7,"nodeType":"892","messageId":"893","endLine":94,"endColumn":21},{"ruleId":"898","severity":1,"message":"1056","line":117,"column":8,"nodeType":"892","messageId":"893","endLine":117,"endColumn":16},{"ruleId":"898","severity":1,"message":"1057","line":117,"column":17,"nodeType":"892","messageId":"893","endLine":117,"endColumn":25},{"ruleId":"948","severity":1,"message":"1005","line":122,"column":19,"nodeType":"950","messageId":"951","endLine":122,"endColumn":21},{"ruleId":"898","severity":1,"message":"1058","line":131,"column":7,"nodeType":"892","messageId":"893","endLine":131,"endColumn":11},{"ruleId":"999","severity":1,"message":"1000","line":174,"column":9,"nodeType":"1059","messageId":"1060","endLine":174,"endColumn":17},{"ruleId":"898","severity":1,"message":"902","line":2,"column":8,"nodeType":"892","messageId":"893","endLine":2,"endColumn":11},{"ruleId":"898","severity":1,"message":"926","line":12,"column":8,"nodeType":"892","messageId":"893","endLine":12,"endColumn":18},{"ruleId":"898","severity":1,"message":"1066","line":13,"column":10,"nodeType":"892","messageId":"893","endLine":13,"endColumn":18},{"ruleId":"898","severity":1,"message":"1067","line":13,"column":31,"nodeType":"892","messageId":"893","endLine":13,"endColumn":42},{"ruleId":"898","severity":1,"message":"943","line":14,"column":10,"nodeType":"892","messageId":"893","endLine":14,"endColumn":25},{"ruleId":"898","severity":1,"message":"944","line":15,"column":10,"nodeType":"892","messageId":"893","endLine":15,"endColumn":26},{"ruleId":"948","severity":1,"message":"949","line":46,"column":22,"nodeType":"950","messageId":"951","endLine":46,"endColumn":24},{"ruleId":"898","severity":1,"message":"1071","line":102,"column":9,"nodeType":"892","messageId":"893","endLine":102,"endColumn":14},{"ruleId":"1052","severity":1,"message":"1072","line":137,"column":5,"nodeType":"1054","endLine":137,"endColumn":12,"suggestions":"1138"},{"ruleId":"898","severity":1,"message":"1139","line":157,"column":5,"nodeType":"892","messageId":"893","endLine":157,"endColumn":13},{"ruleId":"898","severity":1,"message":"1024","line":3,"column":8,"nodeType":"892","messageId":"893","endLine":3,"endColumn":14},{"ruleId":"898","severity":1,"message":"1014","line":4,"column":8,"nodeType":"892","messageId":"893","endLine":4,"endColumn":12},{"ruleId":"898","severity":1,"message":"1015","line":5,"column":8,"nodeType":"892","messageId":"893","endLine":5,"endColumn":16},{"ruleId":"898","severity":1,"message":"1025","line":6,"column":8,"nodeType":"892","messageId":"893","endLine":6,"endColumn":22},{"ruleId":"898","severity":1,"message":"1016","line":7,"column":8,"nodeType":"892","messageId":"893","endLine":7,"endColumn":20},{"ruleId":"898","severity":1,"message":"1026","line":10,"column":8,"nodeType":"892","messageId":"893","endLine":10,"endColumn":18},{"ruleId":"898","severity":1,"message":"1027","line":11,"column":8,"nodeType":"892","messageId":"893","endLine":11,"endColumn":15},{"ruleId":"898","severity":1,"message":"907","line":12,"column":8,"nodeType":"892","messageId":"893","endLine":12,"endColumn":18},{"ruleId":"898","severity":1,"message":"1028","line":13,"column":10,"nodeType":"892","messageId":"893","endLine":13,"endColumn":14},{"ruleId":"898","severity":1,"message":"1029","line":17,"column":8,"nodeType":"892","messageId":"893","endLine":17,"endColumn":21},{"ruleId":"898","severity":1,"message":"908","line":23,"column":8,"nodeType":"892","messageId":"893","endLine":23,"endColumn":18},{"ruleId":"898","severity":1,"message":"1140","line":27,"column":8,"nodeType":"892","messageId":"893","endLine":27,"endColumn":21},{"ruleId":"898","severity":1,"message":"1141","line":28,"column":8,"nodeType":"892","messageId":"893","endLine":28,"endColumn":28},{"ruleId":"898","severity":1,"message":"1142","line":29,"column":8,"nodeType":"892","messageId":"893","endLine":29,"endColumn":22},{"ruleId":"898","severity":1,"message":"958","line":31,"column":8,"nodeType":"892","messageId":"893","endLine":31,"endColumn":15},{"ruleId":"898","severity":1,"message":"1143","line":33,"column":8,"nodeType":"892","messageId":"893","endLine":33,"endColumn":14},{"ruleId":"976","severity":1,"message":"977","line":78,"column":20,"nodeType":"973","messageId":"978","endLine":78,"endColumn":30,"fix":"1144"},{"ruleId":"983","severity":1,"message":"984","line":78,"column":20,"nodeType":"973","messageId":"985","endLine":78,"endColumn":30},{"ruleId":"976","severity":1,"message":"977","line":81,"column":17,"nodeType":"973","messageId":"978","endLine":81,"endColumn":27,"fix":"1145"},{"ruleId":"983","severity":1,"message":"984","line":81,"column":17,"nodeType":"973","messageId":"985","endLine":81,"endColumn":27},{"ruleId":"976","severity":1,"message":"977","line":85,"column":17,"nodeType":"973","messageId":"978","endLine":85,"endColumn":27,"fix":"1146"},{"ruleId":"983","severity":1,"message":"984","line":85,"column":17,"nodeType":"973","messageId":"985","endLine":85,"endColumn":27},{"ruleId":"898","severity":1,"message":"1147","line":117,"column":10,"nodeType":"892","messageId":"893","endLine":117,"endColumn":15},{"ruleId":"898","severity":1,"message":"1148","line":117,"column":17,"nodeType":"892","messageId":"893","endLine":117,"endColumn":25},{"ruleId":"898","severity":1,"message":"1030","line":188,"column":25,"nodeType":"892","messageId":"893","endLine":188,"endColumn":41},{"ruleId":"890","severity":1,"message":"1149","line":3,"column":8,"nodeType":"892","messageId":"893","endLine":3,"endColumn":20},{"ruleId":"952","severity":1,"message":"953","line":7,"column":3,"nodeType":"954","messageId":"955","endLine":11,"endColumn":4},{"ruleId":"1119","severity":1,"message":"1150","line":19,"column":11,"nodeType":"1121","messageId":"1122","endLine":19,"endColumn":66},{"ruleId":"898","severity":1,"message":"894","line":1,"column":15,"nodeType":"892","messageId":"893","endLine":1,"endColumn":24},{"ruleId":"898","severity":1,"message":"995","line":1,"column":26,"nodeType":"892","messageId":"893","endLine":1,"endColumn":34},{"ruleId":"898","severity":1,"message":"996","line":3,"column":8,"nodeType":"892","messageId":"893","endLine":3,"endColumn":24},{"ruleId":"898","severity":1,"message":"997","line":4,"column":8,"nodeType":"892","messageId":"893","endLine":4,"endColumn":22},{"ruleId":"898","severity":1,"message":"958","line":5,"column":8,"nodeType":"892","messageId":"893","endLine":5,"endColumn":15},{"ruleId":"898","severity":1,"message":"960","line":8,"column":8,"nodeType":"892","messageId":"893","endLine":8,"endColumn":24},{"ruleId":"898","severity":1,"message":"902","line":9,"column":10,"nodeType":"892","messageId":"893","endLine":9,"endColumn":13},{"ruleId":"898","severity":1,"message":"961","line":17,"column":8,"nodeType":"892","messageId":"893","endLine":17,"endColumn":20},{"ruleId":"898","severity":1,"message":"962","line":20,"column":8,"nodeType":"892","messageId":"893","endLine":20,"endColumn":16},{"ruleId":"898","severity":1,"message":"963","line":21,"column":8,"nodeType":"892","messageId":"893","endLine":21,"endColumn":23},{"ruleId":"898","severity":1,"message":"998","line":22,"column":8,"nodeType":"892","messageId":"893","endLine":22,"endColumn":20},{"ruleId":"898","severity":1,"message":"964","line":23,"column":10,"nodeType":"892","messageId":"893","endLine":23,"endColumn":30},{"ruleId":"898","severity":1,"message":"965","line":23,"column":32,"nodeType":"892","messageId":"893","endLine":23,"endColumn":52},{"ruleId":"898","severity":1,"message":"1151","line":25,"column":10,"nodeType":"892","messageId":"893","endLine":25,"endColumn":26},{"ruleId":"898","severity":1,"message":"944","line":26,"column":10,"nodeType":"892","messageId":"893","endLine":26,"endColumn":26},{"ruleId":"898","severity":1,"message":"926","line":27,"column":8,"nodeType":"892","messageId":"893","endLine":27,"endColumn":18},{"ruleId":"898","severity":1,"message":"1078","line":28,"column":10,"nodeType":"892","messageId":"893","endLine":28,"endColumn":17},{"ruleId":"898","severity":1,"message":"1123","line":28,"column":19,"nodeType":"892","messageId":"893","endLine":28,"endColumn":26},{"ruleId":"898","severity":1,"message":"1152","line":29,"column":21,"nodeType":"892","messageId":"893","endLine":29,"endColumn":38},{"ruleId":"898","severity":1,"message":"1135","line":30,"column":8,"nodeType":"892","messageId":"893","endLine":30,"endColumn":17},{"ruleId":"989","severity":1,"message":"990","line":48,"column":25,"nodeType":"991","messageId":"992","endLine":48,"endColumn":26,"suggestions":"1153"},{"ruleId":"989","severity":1,"message":"990","line":48,"column":53,"nodeType":"991","messageId":"992","endLine":48,"endColumn":54,"suggestions":"1154"},{"ruleId":"898","severity":1,"message":"902","line":2,"column":8,"nodeType":"892","messageId":"893","endLine":2,"endColumn":11},{"ruleId":"898","severity":1,"message":"1033","line":5,"column":8,"nodeType":"892","messageId":"893","endLine":5,"endColumn":14},{"ruleId":"898","severity":1,"message":"926","line":12,"column":8,"nodeType":"892","messageId":"893","endLine":12,"endColumn":18},{"ruleId":"898","severity":1,"message":"1066","line":13,"column":10,"nodeType":"892","messageId":"893","endLine":13,"endColumn":18},{"ruleId":"898","severity":1,"message":"1067","line":13,"column":31,"nodeType":"892","messageId":"893","endLine":13,"endColumn":42},{"ruleId":"898","severity":1,"message":"943","line":14,"column":10,"nodeType":"892","messageId":"893","endLine":14,"endColumn":25},{"ruleId":"898","severity":1,"message":"944","line":15,"column":10,"nodeType":"892","messageId":"893","endLine":15,"endColumn":26},{"ruleId":"898","severity":1,"message":"1008","line":22,"column":8,"nodeType":"892","messageId":"893","endLine":22,"endColumn":17},{"ruleId":"948","severity":1,"message":"949","line":35,"column":22,"nodeType":"950","messageId":"951","endLine":35,"endColumn":24},{"ruleId":"898","severity":1,"message":"1155","line":45,"column":9,"nodeType":"892","messageId":"893","endLine":45,"endColumn":24},{"ruleId":"898","severity":1,"message":"1071","line":66,"column":9,"nodeType":"892","messageId":"893","endLine":66,"endColumn":14},{"ruleId":"1052","severity":1,"message":"1072","line":96,"column":5,"nodeType":"1054","endLine":96,"endColumn":12,"suggestions":"1156"},{"ruleId":"898","severity":1,"message":"1139","line":116,"column":5,"nodeType":"892","messageId":"893","endLine":116,"endColumn":13},{"ruleId":"898","severity":1,"message":"1157","line":13,"column":8,"nodeType":"892","messageId":"893","endLine":13,"endColumn":12},{"ruleId":"898","severity":1,"message":"925","line":16,"column":8,"nodeType":"892","messageId":"893","endLine":16,"endColumn":27},{"ruleId":"898","severity":1,"message":"926","line":21,"column":8,"nodeType":"892","messageId":"893","endLine":21,"endColumn":18},{"ruleId":"898","severity":1,"message":"927","line":23,"column":13,"nodeType":"892","messageId":"893","endLine":23,"endColumn":20},{"ruleId":"898","severity":1,"message":"928","line":24,"column":8,"nodeType":"892","messageId":"893","endLine":24,"endColumn":20},{"ruleId":"898","severity":1,"message":"929","line":24,"column":24,"nodeType":"892","messageId":"893","endLine":24,"endColumn":34},{"ruleId":"898","severity":1,"message":"930","line":28,"column":8,"nodeType":"892","messageId":"893","endLine":28,"endColumn":10},{"ruleId":"898","severity":1,"message":"1158","line":28,"column":12,"nodeType":"892","messageId":"893","endLine":28,"endColumn":25},{"ruleId":"898","severity":1,"message":"931","line":34,"column":5,"nodeType":"892","messageId":"893","endLine":34,"endColumn":8},{"ruleId":"898","severity":1,"message":"934","line":69,"column":5,"nodeType":"892","messageId":"893","endLine":69,"endColumn":10},{"ruleId":"898","severity":1,"message":"935","line":81,"column":10,"nodeType":"892","messageId":"893","endLine":81,"endColumn":18},{"ruleId":"898","severity":1,"message":"936","line":83,"column":9,"nodeType":"892","messageId":"893","endLine":83,"endColumn":21},{"ruleId":"898","severity":1,"message":"937","line":89,"column":12,"nodeType":"892","messageId":"893","endLine":89,"endColumn":19},{"ruleId":"898","severity":1,"message":"938","line":89,"column":21,"nodeType":"892","messageId":"893","endLine":89,"endColumn":28},{"ruleId":"898","severity":1,"message":"939","line":90,"column":12,"nodeType":"892","messageId":"893","endLine":90,"endColumn":26},{"ruleId":"898","severity":1,"message":"1159","line":97,"column":11,"nodeType":"892","messageId":"893","endLine":97,"endColumn":17},{"ruleId":"898","severity":1,"message":"1160","line":99,"column":12,"nodeType":"892","messageId":"893","endLine":99,"endColumn":20},{"ruleId":"898","severity":1,"message":"1161","line":99,"column":22,"nodeType":"892","messageId":"893","endLine":99,"endColumn":33},{"ruleId":"948","severity":1,"message":"949","line":114,"column":28,"nodeType":"950","messageId":"951","endLine":114,"endColumn":30},{"ruleId":"898","severity":1,"message":"926","line":3,"column":8,"nodeType":"892","messageId":"893","endLine":3,"endColumn":18},{"ruleId":"898","severity":1,"message":"942","line":5,"column":8,"nodeType":"892","messageId":"893","endLine":5,"endColumn":17},{"ruleId":"898","severity":1,"message":"908","line":11,"column":10,"nodeType":"892","messageId":"893","endLine":11,"endColumn":20},{"ruleId":"898","severity":1,"message":"943","line":13,"column":10,"nodeType":"892","messageId":"893","endLine":13,"endColumn":25},{"ruleId":"898","severity":1,"message":"944","line":14,"column":10,"nodeType":"892","messageId":"893","endLine":14,"endColumn":26},{"ruleId":"898","severity":1,"message":"945","line":15,"column":8,"nodeType":"892","messageId":"893","endLine":15,"endColumn":19},{"ruleId":"898","severity":1,"message":"931","line":20,"column":5,"nodeType":"892","messageId":"893","endLine":20,"endColumn":8},{"ruleId":"898","severity":1,"message":"946","line":22,"column":11,"nodeType":"892","messageId":"893","endLine":22,"endColumn":22},{"ruleId":"898","severity":1,"message":"947","line":160,"column":11,"nodeType":"892","messageId":"893","endLine":160,"endColumn":32},{"ruleId":"948","severity":1,"message":"949","line":226,"column":23,"nodeType":"950","messageId":"951","endLine":226,"endColumn":25},{"ruleId":"952","severity":1,"message":"953","line":6,"column":3,"nodeType":"954","messageId":"955","endLine":10,"endColumn":4},{"ruleId":"898","severity":1,"message":"894","line":1,"column":15,"nodeType":"892","messageId":"893","endLine":1,"endColumn":24},{"ruleId":"898","severity":1,"message":"996","line":3,"column":8,"nodeType":"892","messageId":"893","endLine":3,"endColumn":24},{"ruleId":"898","severity":1,"message":"958","line":5,"column":8,"nodeType":"892","messageId":"893","endLine":5,"endColumn":15},{"ruleId":"898","severity":1,"message":"959","line":6,"column":8,"nodeType":"892","messageId":"893","endLine":6,"endColumn":16},{"ruleId":"898","severity":1,"message":"960","line":8,"column":8,"nodeType":"892","messageId":"893","endLine":8,"endColumn":24},{"ruleId":"898","severity":1,"message":"902","line":9,"column":10,"nodeType":"892","messageId":"893","endLine":9,"endColumn":13},{"ruleId":"898","severity":1,"message":"961","line":17,"column":8,"nodeType":"892","messageId":"893","endLine":17,"endColumn":20},{"ruleId":"898","severity":1,"message":"962","line":20,"column":8,"nodeType":"892","messageId":"893","endLine":20,"endColumn":16},{"ruleId":"898","severity":1,"message":"963","line":21,"column":8,"nodeType":"892","messageId":"893","endLine":21,"endColumn":23},{"ruleId":"898","severity":1,"message":"998","line":22,"column":8,"nodeType":"892","messageId":"893","endLine":22,"endColumn":20},{"ruleId":"898","severity":1,"message":"964","line":23,"column":10,"nodeType":"892","messageId":"893","endLine":23,"endColumn":30},{"ruleId":"898","severity":1,"message":"965","line":23,"column":32,"nodeType":"892","messageId":"893","endLine":23,"endColumn":52},{"ruleId":"898","severity":1,"message":"926","line":27,"column":8,"nodeType":"892","messageId":"893","endLine":27,"endColumn":18},{"ruleId":"898","severity":1,"message":"1078","line":28,"column":10,"nodeType":"892","messageId":"893","endLine":28,"endColumn":17},{"ruleId":"898","severity":1,"message":"1123","line":28,"column":19,"nodeType":"892","messageId":"893","endLine":28,"endColumn":26},{"ruleId":"898","severity":1,"message":"966","line":43,"column":12,"nodeType":"892","messageId":"893","endLine":43,"endColumn":19},{"ruleId":"898","severity":1,"message":"967","line":43,"column":21,"nodeType":"892","messageId":"893","endLine":43,"endColumn":30},{"ruleId":"898","severity":1,"message":"938","line":45,"column":22,"nodeType":"892","messageId":"893","endLine":45,"endColumn":29},{"ruleId":"898","severity":1,"message":"968","line":46,"column":12,"nodeType":"892","messageId":"893","endLine":46,"endColumn":26},{"ruleId":"898","severity":1,"message":"969","line":48,"column":12,"nodeType":"892","messageId":"893","endLine":48,"endColumn":16},{"ruleId":"898","severity":1,"message":"970","line":48,"column":18,"nodeType":"892","messageId":"893","endLine":48,"endColumn":25},{"ruleId":"989","severity":1,"message":"990","line":61,"column":29,"nodeType":"991","messageId":"992","endLine":61,"endColumn":30,"suggestions":"1162"},{"ruleId":"989","severity":1,"message":"990","line":61,"column":46,"nodeType":"991","messageId":"992","endLine":61,"endColumn":47,"suggestions":"1163"},{"ruleId":"898","severity":1,"message":"995","line":1,"column":15,"nodeType":"892","messageId":"893","endLine":1,"endColumn":23},{"ruleId":"898","severity":1,"message":"996","line":3,"column":8,"nodeType":"892","messageId":"893","endLine":3,"endColumn":24},{"ruleId":"898","severity":1,"message":"997","line":4,"column":8,"nodeType":"892","messageId":"893","endLine":4,"endColumn":22},{"ruleId":"898","severity":1,"message":"958","line":5,"column":8,"nodeType":"892","messageId":"893","endLine":5,"endColumn":15},{"ruleId":"898","severity":1,"message":"998","line":6,"column":8,"nodeType":"892","messageId":"893","endLine":6,"endColumn":20},{"ruleId":"898","severity":1,"message":"899","line":7,"column":8,"nodeType":"892","messageId":"893","endLine":7,"endColumn":13},{"ruleId":"898","severity":1,"message":"1164","line":8,"column":8,"nodeType":"892","messageId":"893","endLine":8,"endColumn":23},{"ruleId":"898","severity":1,"message":"926","line":9,"column":8,"nodeType":"892","messageId":"893","endLine":9,"endColumn":18},{"ruleId":"898","severity":1,"message":"1009","line":10,"column":8,"nodeType":"892","messageId":"893","endLine":10,"endColumn":22},{"ruleId":"898","severity":1,"message":"1165","line":11,"column":10,"nodeType":"892","messageId":"893","endLine":11,"endColumn":29},{"ruleId":"898","severity":1,"message":"1166","line":11,"column":53,"nodeType":"892","messageId":"893","endLine":11,"endColumn":69},{"ruleId":"999","severity":1,"message":"1000","line":21,"column":75,"nodeType":"1001","messageId":"1002","endLine":21,"endColumn":77},{"ruleId":"898","severity":1,"message":"998","line":2,"column":8,"nodeType":"892","messageId":"893","endLine":2,"endColumn":20},{"ruleId":"898","severity":1,"message":"997","line":3,"column":8,"nodeType":"892","messageId":"893","endLine":3,"endColumn":22},{"ruleId":"898","severity":1,"message":"1003","line":4,"column":8,"nodeType":"892","messageId":"893","endLine":4,"endColumn":22},{"ruleId":"898","severity":1,"message":"1004","line":5,"column":8,"nodeType":"892","messageId":"893","endLine":5,"endColumn":20},{"ruleId":"898","severity":1,"message":"926","line":11,"column":8,"nodeType":"892","messageId":"893","endLine":11,"endColumn":18},{"ruleId":"948","severity":1,"message":"1005","line":26,"column":110,"nodeType":"950","messageId":"951","endLine":26,"endColumn":112},{"ruleId":"898","severity":1,"message":"1167","line":1,"column":17,"nodeType":"892","messageId":"893","endLine":1,"endColumn":30},{"ruleId":"898","severity":1,"message":"1168","line":3,"column":32,"nodeType":"892","messageId":"893","endLine":3,"endColumn":53},{"ruleId":"898","severity":1,"message":"1169","line":3,"column":54,"nodeType":"892","messageId":"893","endLine":3,"endColumn":74},{"ruleId":"898","severity":1,"message":"1170","line":21,"column":8,"nodeType":"892","messageId":"893","endLine":21,"endColumn":22},{"ruleId":"898","severity":1,"message":"1171","line":22,"column":8,"nodeType":"892","messageId":"893","endLine":22,"endColumn":24},{"ruleId":"898","severity":1,"message":"1006","line":29,"column":8,"nodeType":"892","messageId":"893","endLine":29,"endColumn":13},{"ruleId":"898","severity":1,"message":"930","line":30,"column":8,"nodeType":"892","messageId":"893","endLine":30,"endColumn":10},{"ruleId":"898","severity":1,"message":"1172","line":30,"column":12,"nodeType":"892","messageId":"893","endLine":30,"endColumn":16},{"ruleId":"898","severity":1,"message":"1173","line":33,"column":8,"nodeType":"892","messageId":"893","endLine":33,"endColumn":18},{"ruleId":"898","severity":1,"message":"1113","line":34,"column":8,"nodeType":"892","messageId":"893","endLine":34,"endColumn":16},{"ruleId":"898","severity":1,"message":"1174","line":35,"column":8,"nodeType":"892","messageId":"893","endLine":35,"endColumn":19},{"ruleId":"898","severity":1,"message":"1175","line":36,"column":8,"nodeType":"892","messageId":"893","endLine":36,"endColumn":14},{"ruleId":"898","severity":1,"message":"1176","line":36,"column":18,"nodeType":"892","messageId":"893","endLine":36,"endColumn":35},{"ruleId":"898","severity":1,"message":"1038","line":37,"column":8,"nodeType":"892","messageId":"893","endLine":37,"endColumn":17},{"ruleId":"948","severity":1,"message":"1005","line":43,"column":19,"nodeType":"950","messageId":"951","endLine":43,"endColumn":21},{"ruleId":"898","severity":1,"message":"1177","line":87,"column":9,"nodeType":"892","messageId":"893","endLine":87,"endColumn":26},{"ruleId":"948","severity":1,"message":"949","line":377,"column":40,"nodeType":"950","messageId":"951","endLine":377,"endColumn":42},{"ruleId":"898","severity":1,"message":"1178","line":402,"column":9,"nodeType":"892","messageId":"893","endLine":402,"endColumn":22},{"ruleId":"898","severity":1,"message":"1179","line":2,"column":8,"nodeType":"892","messageId":"893","endLine":2,"endColumn":27},{"ruleId":"898","severity":1,"message":"1180","line":3,"column":8,"nodeType":"892","messageId":"893","endLine":3,"endColumn":29},{"ruleId":"898","severity":1,"message":"1181","line":4,"column":8,"nodeType":"892","messageId":"893","endLine":4,"endColumn":28},{"ruleId":"898","severity":1,"message":"1182","line":5,"column":8,"nodeType":"892","messageId":"893","endLine":5,"endColumn":30},{"ruleId":"898","severity":1,"message":"902","line":6,"column":8,"nodeType":"892","messageId":"893","endLine":6,"endColumn":11},"no-native-reassign",["1183"],"no-negated-in-lhs",["1184"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useCallback' is defined but never used.","'IDialogAddOrder' is defined but never used.","'Chat' is defined but never used.","@typescript-eslint/no-unused-vars","'Paper' is defined but never used.","'DialogAddOrder' is defined but never used.","'Link' is defined but never used.","'Box' is defined but never used.","'CssBaseline' is defined but never used.","'MuiAppBar' is defined but never used.","'MuiAppBarProps' is defined but never used.","'Toolbar' is defined but never used.","'Typography' is defined but never used.","'IconButton' is defined but never used.","'MenuIcon' is defined but never used.","'ChevronLeftIcon' is defined but never used.","'ChevronRightIcon' is defined but never used.","'useSelector' is defined but never used.","'theme' is assigned a value but never used.","'flagSelect' is assigned a value but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","'green' is defined but never used.","'TabPanel' is defined but never used.","'a11yProps' is defined but never used.","'CustomizedAccordions' is defined but never used.","'useTheme' is defined but never used.","'PageOrderInWork' is defined but never used.","'PageOrdersDefault' is defined but never used.","'PageAllCards' is defined but never used.","'IDialogAddOrderItem' is defined but never used.","'IDataOrder' is defined but never used.","'signalR' is defined but never used.","'useWebSocket' is defined but never used.","'ReadyState' is defined but never used.","'ip' is defined but never used.","'URL' is assigned a value but never used.","'shemaOrder_2' is assigned a value but never used.","'list' is assigned a value but never used.","'count' is assigned a value but never used.","'expanded' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'orders2' is assigned a value but never used.","'loading' is assigned a value but never used.","'ordersLoading2' is assigned a value but never used.",["1183"],["1184"],"'PauseIcon' is defined but never used.","'useActionOrders' is defined but never used.","'useTypedSelector' is defined but never used.","'usePrevious' is defined but never used.","'IDataHeader' is defined but never used.","'ConvertPeriodToString' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["1183"],["1184"],"'Divider' is defined but never used.","'ViewCard' is defined but never used.","'CircularProgress' is defined but never used.","'MoreVertIcon' is defined but never used.","'IDataVSM' is defined but never used.","'IDataProduction' is defined but never used.","'useCardVSMActionType' is defined but never used.","'useProductionCardVSM' is defined but never used.","'BDitems' is assigned a value but never used.","'setBDItem' is assigned a value but never used.","'cardVSMLoading' is assigned a value but never used.","'card' is assigned a value but never used.","'setCard' is assigned a value but never used.","@typescript-eslint/no-array-constructor","The array literal notation [] is preferable.","NewExpression","useLiteral",{"range":"1185","text":"1186"},"new-parens","Missing '()' invoking a constructor.","missing",{"range":"1187","text":"1188"},{"range":"1189","text":"1186"},{"range":"1190","text":"1188"},{"range":"1191","text":"1188"},"no-new-object","The object literal notation {} is preferrable.","preferLiteral",{"range":"1192","text":"1186"},{"range":"1193","text":"1188"},{"range":"1194","text":"1188"},"no-useless-escape","Unnecessary escape character: \\\".","Literal","unnecessaryEscape",["1195","1196"],["1197","1198"],"'useState' is defined but never used.","'IDataCardSection' is defined but never used.","'IDataOrderItem' is defined but never used.","'IDataCardVSM' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'IDataBufferVSM' is defined but never used.","'IDataEtapVSM' is defined but never used.","Expected '===' and instead saw '=='.","'axios' is defined but never used.","'IDatabufferVSMQueue' is defined but never used.","'OrderRole' is defined but never used.","'IDataOrderPart' is defined but never used.","'type' is assigned a value but never used.","'information' is assigned a value but never used.","'setInformation' is assigned a value but never used.","'setColor' is assigned a value but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemText' is defined but never used.","'IDataEtapSection' is defined but never used.",{"range":"1199","text":"1186"},{"range":"1200","text":"1188"},{"range":"1201","text":"1188"},"'ExecException' is defined but never used.","'PxMin_X' is assigned a value but never used.","'IDataOrderCurrentSection' is defined but never used.","'Avatar' is defined but never used.","'ListItemAvatar' is defined but never used.","'PersonIcon' is defined but never used.","'AddIcon' is defined but never used.","'blue' is defined but never used.","'AddCircleIcon' is defined but never used.","'setSelectedValue' is assigned a value but never used.",["1183"],["1184"],"'Button' is defined but never used.","'ORDERS' is assigned a value but never used.",{"range":"1202","text":"1186"},{"range":"1203","text":"1186"},{"range":"1204","text":"1188"},"'TextField' is defined but never used.",{"range":"1205","text":"1188"},"'handleListItemClick' is assigned a value but never used.","'useActionProduction' is defined but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Switch' is defined but never used.","'AddCircleOutlineIcon' is defined but never used.","'Item' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'ordersLoading'. Either include it or remove the dependency array.","ArrayExpression",["1206"],"'newOrder' is assigned a value but never used.","'setOrder' is assigned a value but never used.","'even' is assigned a value but never used.","ReturnStatement","expectedReturnValue","'CardOrderInNewAlgoritmDefault' is defined but never used.","'DialogAddOrderNewAlgoritm' is defined but never used.","'response' is assigned a value but never used.","'addOrder' is assigned a value but never used.","'CardContent' is defined but never used.","'Redirect' is defined but never used.","'useLocation' is defined but never used.","'Start' is assigned a value but never used.","'Stop' is assigned a value but never used.","'updateInfoOrder' is assigned a value but never used.","'timer' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'GetInformation'. Either include it or remove the dependency array.",["1207"],"'Dispatch' is defined but never used.","'useOrdersActionType' is defined but never used.","'useLeftMenuAction' is defined but never used.","'PayloadAction' is defined but never used.","'MyCards' is defined but never used.",{"range":"1208","text":"1186"},{"range":"1209","text":"1188"},{"range":"1210","text":"1186"},{"range":"1211","text":"1188"},"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd",["1183"],["1184"],"'ToArray' is defined but never used.","'orders' is assigned a value but never used.","'file' is defined but never used.",{"range":"1212","text":"1186"},{"range":"1213","text":"1186"},{"range":"1214","text":"1186"},{"range":"1215","text":"1188"},{"range":"1216","text":"1186"},{"range":"1217","text":"1188"},"React Hook useCallback has a missing dependency: 'SendFile'. Either include it or remove the dependency array.",["1218"],"'fetch_cardVSM_add' is defined but never used.","'useCardVSMType' is defined but never used.","'IDataCardProduct' is defined but never used.",["1183"],["1184"],"'React' is defined but never used.",["1183"],["1184"],"React Hook useEffect has missing dependencies: 'isPaused' and 'messages'. Either include them or remove the dependency array. You can also do a functional update 'setMessages(m => ...)' if you only need 'messages' in the 'setMessages' call.",["1219"],"'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.","'setPause' is assigned a value but never used.",["1220"],"'ListItemIcon' is defined but never used.","'MenuItem' is defined but never used.","'MenuList' is defined but never used.","'Check' is defined but never used.","'getStyle' is assigned a value but never used.",["1183"],["1184"],"react/jsx-pascal-case","Imported JSX component ViewCard_all must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","'OrderMy' is defined but never used.",{"range":"1221","text":"1186"},{"range":"1222","text":"1188"},{"range":"1223","text":"1186"},{"range":"1224","text":"1188"},{"range":"1225","text":"1188"},{"range":"1226","text":"1186"},{"range":"1227","text":"1188"},{"range":"1228","text":"1188"},["1229","1230"],["1231","1232"],"'ViewAllCards' is defined but never used.","'ChartLine' is defined but never used.","Imported JSX component ViewAllCards_newAlgoritm must be in PascalCase or SCREAMING_SNAKE_CASE","'isInitialMount' is assigned a value but never used.",["1233"],"'listRole' is assigned a value but never used.","'AdapterMoment' is defined but never used.","'LocalizationProvider' is defined but never used.","'DateTimePicker' is defined but never used.","'moment' is defined but never used.",{"range":"1234","text":"1188"},{"range":"1235","text":"1188"},{"range":"1236","text":"1188"},"'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'ViewCard_all' is defined but never used.","Imported JSX component ViewCard_all_newAlgoritm must be in PascalCase or SCREAMING_SNAKE_CASE","'useActionCardVSM' is defined but never used.","'SectionLogic_view' is defined but never used.",["1237","1238"],["1239","1240"],"'startSimulation' is assigned a value but never used.",["1241"],"'View' is defined but never used.","'URL_orderList' is defined but never used.","'socket' is assigned a value but never used.","'myOrders' is assigned a value but never used.","'setMyOrders' is assigned a value but never used.",["1242","1243"],["1244","1245"],"'ViewItemSection' is defined but never used.","'OrderProductionItem' is defined but never used.","'SectionEtap_view' is defined but never used.","'PureComponent' is defined but never used.","'GridValueGetterParams' is defined but never used.","'GridRenderCellParams' is defined but never used.","'ThumbUpAltIcon' is defined but never used.","'ThumbDownAltIcon' is defined but never used.","'port' is defined but never used.","'InputLabel' is defined but never used.","'FormControl' is defined but never used.","'Select' is defined but never used.","'SelectChangeEvent' is defined but never used.","'GetStringDataTime' is assigned a value but never used.","'convertToTime' is assigned a value but never used.","'FormatAlignLeftIcon' is defined but never used.","'FormatAlignCenterIcon' is defined but never used.","'FormatAlignRightIcon' is defined but never used.","'FormatAlignJustifyIcon' is defined but never used.","no-global-assign","no-unsafe-negation",[2549,2558],"[]",[2558,2558],"()",[2617,2626],[2626,2626],[3147,3147],[3319,3328],[3328,3328],[3476,3476],{"messageId":"1246","fix":"1247","desc":"1248"},{"messageId":"1249","fix":"1250","desc":"1251"},{"messageId":"1246","fix":"1252","desc":"1248"},{"messageId":"1249","fix":"1253","desc":"1251"},[1467,1476],[1476,1476],[1526,1526],[805,816],[1650,1659],[1659,1659],[1390,1390],{"desc":"1254","fix":"1255"},{"desc":"1256","fix":"1257"},[419,428],[428,428],[463,472],[472,472],[1122,1133],[1204,1215],[2338,2347],[2347,2347],[3021,3030],[3030,3030],{"desc":"1258","fix":"1259"},{"desc":"1260","fix":"1261"},{"desc":"1260","fix":"1262"},[1497,1506],[1506,1506],[1552,1561],[1561,1561],[2107,2107],[2267,2276],[2276,2276],[2403,2403],{"messageId":"1246","fix":"1263","desc":"1248"},{"messageId":"1249","fix":"1264","desc":"1251"},{"messageId":"1246","fix":"1265","desc":"1248"},{"messageId":"1249","fix":"1266","desc":"1251"},{"desc":"1256","fix":"1267"},[2674,2674],[2717,2717],[2821,2821],{"messageId":"1246","fix":"1268","desc":"1248"},{"messageId":"1249","fix":"1269","desc":"1251"},{"messageId":"1246","fix":"1270","desc":"1248"},{"messageId":"1249","fix":"1271","desc":"1251"},{"desc":"1256","fix":"1272"},{"messageId":"1246","fix":"1273","desc":"1248"},{"messageId":"1249","fix":"1274","desc":"1251"},{"messageId":"1246","fix":"1275","desc":"1248"},{"messageId":"1249","fix":"1276","desc":"1251"},"removeEscape",{"range":"1277","text":"1278"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"1279","text":"1280"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"1281","text":"1278"},{"range":"1282","text":"1280"},"Update the dependencies array to be: [orders, ordersLoading]",{"range":"1283","text":"1284"},"Update the dependencies array to be: [GetInformation, order]",{"range":"1285","text":"1286"},"Update the dependencies array to be: [SendFile]",{"range":"1287","text":"1288"},"Update the dependencies array to be: [socket, reconnect, isPaused, messages]",{"range":"1289","text":"1290"},{"range":"1291","text":"1290"},{"range":"1292","text":"1278"},{"range":"1293","text":"1280"},{"range":"1294","text":"1278"},{"range":"1295","text":"1280"},{"range":"1296","text":"1286"},{"range":"1297","text":"1278"},{"range":"1298","text":"1280"},{"range":"1299","text":"1278"},{"range":"1300","text":"1280"},{"range":"1301","text":"1286"},{"range":"1302","text":"1278"},{"range":"1303","text":"1280"},{"range":"1304","text":"1278"},{"range":"1305","text":"1280"},[3916,3917],"",[3916,3916],"\\",[3933,3934],[3933,3933],[1458,1466],"[orders, ordersLoading]",[2782,2789],"[GetInformation, order]",[3547,3549],"[SendFile]",[1896,1914],"[socket, reconnect, isPaused, messages]",[1510,1528],[2801,2802],[2801,2801],[2832,2833],[2832,2832],[3987,3994],[1782,1783],[1782,1782],[1810,1811],[1810,1810],[2714,2721],[2144,2145],[2144,2144],[2161,2162],[2161,2161]]