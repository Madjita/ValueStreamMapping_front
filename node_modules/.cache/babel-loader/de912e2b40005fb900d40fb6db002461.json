{"ast":null,"code":"var _jsxFileName = \"/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Card/Pages/CardOrderInNewAlgoritmDefault.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport { CardHeader, IconButton } from '@material-ui/core';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport { Divider } from '@mui/material';\nimport { IDataColorOrderInDefault } from '../../Data/DataCardOrderInDefault/IDataColorOrderInDefault';\nimport { useHistory } from 'react-router';\nimport { useActionOrders } from '../../../hooks/useActionOrders';\nimport axios from 'axios';\nimport ip from '../../../global';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar simulationEnum;\n\n(function (simulationEnum) {\n  simulationEnum[\"Start\"] = \"\\u0417\\u0430\\u043F\\u0443\\u0441\\u0442\\u0438\\u0442\\u044C \\u0441\\u0438\\u043C\\u0443\\u043B\\u044F\\u0446\\u0438\\u044E\";\n  simulationEnum[\"Stop\"] = \"\\u041E\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C \\u0441\\u0438\\u043C\\u0443\\u043B\\u044F\\u0446\\u0438\\u044E\";\n})(simulationEnum || (simulationEnum = {}));\n\nconst CardOrderInNewAlgoritmDefault = props => {\n  _s();\n\n  const {\n    Start,\n    Stop\n  } = simulationEnum;\n  /*\n  const [simulation, setSimulation] = useState({\n    text: simulationEnum.Start,\n    color: IDataColorOrderInDefault.NotWork,\n    work: false\n  });\n  */\n\n  const [simulation, setSimulation] = useState(false);\n  const [order, setOrder] = useState(props.data);\n  const {\n    startSimulation,\n    updateInfoOrder\n  } = useActionOrders();\n\n  const onSimulation = () => {\n    /*if(simulation.work)\n    {\n      let sim = !simulation.work;\n      setSimulation({...simulation, work:sim, text: Start })\n      startSimulation(props.data as IDataOrder, sim);\n    }\n    else\n    {\n      let sim = !simulation.work;\n      setSimulation({...simulation, work:sim, text: Stop })\n      startSimulation(props.data as IDataOrder, sim);\n    }*/\n    let newObj = { ...order,\n      simulation: !simulation\n    }; //setSimulation(newObj.simulation);\n    //setOrder(newObj);\n    //startSimulation(newObj);\n  }; //let flag = (simulation.text === simulationEnum.Stop && simulation.work)\n\n\n  const timer = useRef(null);\n\n  const GetInformation = async () => {\n    const response = await axios.post('http://' + ip + ':5001/api/manufacture/updateInfoOrder', JSON.stringify(order), {\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        'Content-Type': 'application/json'\n      }\n    });\n\n    if (response.status === 200) {\n      let responseData = JSON.parse(JSON.stringify(response.data));\n      setOrder(responseData);\n      setSimulation(responseData.simulation);\n    }\n  };\n\n  useEffect(() => {\n    const timer = setTimeout(() => GetInformation(), 800);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [order]);\n  const history = useHistory();\n\n  const openInfo = () => {\n    history.push('/orderInfo', {\n      data: props.data\n    });\n  }; // Helper\n\n\n  const StringIsNumber = (value, index) => {\n    if (index === (order === null || order === void 0 ? void 0 : order.orderRole) - 1) return true;\n  }; // Turn enum into array\n\n\n  function ToArray(enumme) {\n    return Object.keys(enumme).filter(StringIsNumber).map(key => enumme[key]).at(0);\n  }\n\n  let listRole = ToArray(IDataColorOrderInDefault);\n  let timeTActual = moment.unix(order === null || order === void 0 ? void 0 : order.tActual).utc().format('H:m:s');\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      minWidth: 200,\n      color: simulation ? 'white' : 'black',\n      backgroundColor: listRole\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      titleTypographyProps: {\n        variant: \"h6\"\n      },\n      action: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"settings\",\n          onClick: openInfo,\n          children: /*#__PURE__*/_jsxDEV(SettingsIcon, {\n            style: {\n              color: ''\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 10\n      }, this),\n      title: \"Заказ номер: \" + (order === null || order === void 0 ? void 0 : order.name),\n      subheader: /*#__PURE__*/_jsxDEV(Typography, {\n        style: {\n          color: simulation ? 'white' : 'black'\n        },\n        children: simulation ? timeTActual : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 20\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          borderColor: simulation ? '' : 'white',\n          backgroundColor: simulation ? '#12824C' : '',\n          color: '#FFFFFF'\n        },\n        size: \"small\",\n        variant: simulation ? \"contained\" : \"outlined\",\n        onClick: onSimulation,\n        children: simulation ? \"Остановить симуляцию\" : \"Запустить симуляцию\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CardOrderInNewAlgoritmDefault, \"AXbH8uk026YIn1SuNt8J7QqlV7Y=\", false, function () {\n  return [useActionOrders, useHistory];\n});\n\n_c = CardOrderInNewAlgoritmDefault;\nexport default CardOrderInNewAlgoritmDefault;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardOrderInNewAlgoritmDefault\");","map":{"version":3,"sources":["/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Card/Pages/CardOrderInNewAlgoritmDefault.tsx"],"names":["React","useEffect","useState","useRef","Card","CardActions","Button","Typography","CardHeader","IconButton","SettingsIcon","Divider","IDataColorOrderInDefault","useHistory","useActionOrders","axios","ip","moment","simulationEnum","CardOrderInNewAlgoritmDefault","props","Start","Stop","simulation","setSimulation","order","setOrder","data","startSimulation","updateInfoOrder","onSimulation","newObj","timer","GetInformation","response","post","JSON","stringify","headers","status","responseData","parse","setTimeout","clearTimeout","history","openInfo","push","StringIsNumber","value","index","orderRole","ToArray","enumme","Object","keys","filter","map","key","at","listRole","timeTActual","unix","tActual","utc","format","minWidth","color","backgroundColor","variant","name","borderColor"],"mappings":"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","sourcesContent":["import React,{useEffect, useState,useRef} from 'react';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport { CardHeader, IconButton } from '@material-ui/core';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport { Divider } from '@mui/material';\n\nimport {IDataColorOrderInDefault} from '../../Data/DataCardOrderInDefault/IDataColorOrderInDefault'\nimport IDataOrder from '../../Data/IDataOrder';\nimport { Redirect,useHistory, useLocation } from 'react-router'\nimport { useActionOrders } from '../../../hooks/useActionOrders';\nimport { useTypedSelector } from '../../../hooks/leftMenuSelector';\n\nimport axios from 'axios'\nimport ip from '../../../global'\n\nimport moment from 'moment';\nimport Order_view from '../../Data/IDataOrder/IDataOrder';\n\nenum simulationEnum{\n  Start = 'Запустить симуляцию',\n  Stop = 'Остановить симуляцию'\n}\nconst CardOrderInNewAlgoritmDefault = (props:{OrderColor: IDataColorOrderInDefault, data: Order_view}) => {\n\n  const {Start,Stop} = simulationEnum;\n\n\n  /*\n  const [simulation, setSimulation] = useState({\n    text: simulationEnum.Start,\n    color: IDataColorOrderInDefault.NotWork,\n    work: false\n  });\n  */\n\n  const [simulation, setSimulation] = useState(false)\n\n  const[order, setOrder] = useState<Order_view>(props.data);\n\n\n  \n\n  const {startSimulation, updateInfoOrder} = useActionOrders()\n\n  const onSimulation = () => {\n\n    /*if(simulation.work)\n    {\n      let sim = !simulation.work;\n      setSimulation({...simulation, work:sim, text: Start })\n      startSimulation(props.data as IDataOrder, sim);\n    }\n    else\n    {\n      let sim = !simulation.work;\n      setSimulation({...simulation, work:sim, text: Stop })\n      startSimulation(props.data as IDataOrder, sim);\n    }*/\n    let newObj = {...order, simulation: !simulation};\n\n    //setSimulation(newObj.simulation);\n    //setOrder(newObj);\n    //startSimulation(newObj);\n  }\n\n  //let flag = (simulation.text === simulationEnum.Stop && simulation.work)\n\n  const timer = useRef(null);\n  const GetInformation = async() =>{\n    const response = await axios.post('http://'+ip+':5001/api/manufacture/updateInfoOrder',JSON.stringify(order),\n    {\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          'Content-Type': 'application/json'\n        }\n    })\n\n    if(response.status === 200)\n    {\n       let responseData =  JSON.parse(JSON.stringify(response.data)) as IDataOrder;\n       setOrder(responseData);\n       setSimulation(responseData.simulation);\n    }\n  }\n\n   \n  useEffect(() => {\n    const timer = setTimeout(() => GetInformation(), 800); \n    return () => {\n      clearTimeout(timer);\n    };\n  },[order]);\n \n  const history = useHistory();\n\n  const openInfo = () => {\n    history.push('/orderInfo', { data: props.data});\n  }\n\n\n    // Helper\nconst StringIsNumber = (value: any,index: any) => {if(index === order?.orderRole-1) return true};\n\n// Turn enum into array\nfunction ToArray(enumme: any) {\n    return Object.keys(enumme)\n        .filter(StringIsNumber)\n        .map(key => enumme[key])\n        .at(0);\n}\n\nlet listRole = ToArray(IDataColorOrderInDefault);\n\n\nlet timeTActual = moment.unix(order?.tActual).utc().format('H:m:s')\n\n  return (\n    <Card sx={{ minWidth: 200,color: simulation ? 'white':'black',  backgroundColor: listRole }}>\n      <CardHeader\n        titleTypographyProps={{ variant: \"h6\" }}\n        action={\n         <div>\n          <IconButton \n          aria-label=\"settings\"\n          onClick={openInfo}>\n            <SettingsIcon style={{color: ''}}/>\n          </IconButton>\n         </div>\n        }\n        title={\"Заказ номер: \"+order?.name}\n        subheader={<Typography style={{color: simulation ? 'white':'black'}}>{ simulation ? timeTActual : ''}</Typography>}\n      />\n      <Divider/>\n      <CardActions>\n        <Button style={{borderColor: simulation? '':'white',backgroundColor: simulation? '#12824C':'', color: '#FFFFFF'}} size=\"small\" variant={simulation ? \"contained\":\"outlined\"} onClick={onSimulation}>\n          {simulation ? \"Остановить симуляцию\":\"Запустить симуляцию\"}\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nexport default CardOrderInNewAlgoritmDefault;"]},"metadata":{},"sourceType":"module"}