{"ast":null,"code":"var _jsxFileName = \"/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Dialog/DialogAddOrder.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport * as React from 'react';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Transition from './Transition';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SimpleDialog(props) {\n  _s();\n\n  const {\n    onClose,\n    selectedValue,\n    open,\n    addOrder\n  } = props;\n  const [newOrder, setNewOrder] = React.useState();\n\n  const handleClose = () => {\n    onClose(selectedValue);\n    let item;\n    item.orders = new Array();\n    addOrder(item);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"\\u0424\\u043E\\u0440\\u043C\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0437\\u0430\\u043A\\u0430\\u0437\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Transition, {\n      setNewOrder: setNewOrder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleClose,\n        children: \"Disagree\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleClose,\n        autoFocus: true,\n        children: \"Agree\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SimpleDialog, \"FsldxeXCW0VaCAWraryI88SxugA=\");\n\n_c = SimpleDialog;\nexport default function DialogAddOrder(props) {\n  _s2();\n\n  const [open, setOpen] = React.useState(false);\n  const [selectedValue, setSelectedValue] = React.useState();\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = value => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleClickOpen,\n      style: {\n        width: '100%',\n        display: 'flext',\n        justifyContent: 'space-around'\n      },\n      variant: \"contained\",\n      endIcon: /*#__PURE__*/_jsxDEV(AddCircleIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 36\n      }, this),\n      children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0437\\u0430\\u043A\\u0430\\u0437\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SimpleDialog, {\n      selectedValue: selectedValue,\n      open: open,\n      onClose: handleClose,\n      addOrder: props.addOrder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n/*\n\n    <div>\n      <Typography variant=\"subtitle1\" component=\"div\">\n        Selected: {selectedValue}\n      </Typography>\n      <br />\n      <Button variant=\"outlined\" onClick={handleClickOpen}>\n        Open simple dialog\n      </Button>\n      <SimpleDialog\n        selectedValue={selectedValue}\n        open={open}\n        onClose={handleClose}\n      />\n    </div>\n\n*/\n\n_s2(DialogAddOrder, \"kW7G0PaZYYr3+vhL3C2gYrDuVdU=\");\n\n_c2 = DialogAddOrder;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SimpleDialog\");\n$RefreshReg$(_c2, \"DialogAddOrder\");","map":{"version":3,"sources":["/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Dialog/DialogAddOrder.tsx"],"names":["React","Button","DialogTitle","Dialog","AddCircleIcon","Transition","DialogActions","SimpleDialog","props","onClose","selectedValue","open","addOrder","newOrder","setNewOrder","useState","handleClose","item","orders","Array","DialogAddOrder","setOpen","setSelectedValue","handleClickOpen","value","width","display","justifyContent"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport PersonIcon from '@material-ui/icons/Person';\nimport AddIcon from '@material-ui/icons/Add';\nimport Typography from '@material-ui/core/Typography';\nimport { blue } from '@material-ui/core/colors';\n\nimport TextField from '@material-ui/core/TextField';\n\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Transition from './Transition'\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport IDialogAddOrder from '../Data/Dialog/IDialogAddOrder'\n\nexport interface SimpleDialogProps {\n  open: boolean;\n  selectedValue: IDialogAddOrder;\n  onClose: (value: IDialogAddOrder) => void;\n  addOrder: (value: IDialogAddOrder) => void\n}\n\n\n\nfunction SimpleDialog(props: SimpleDialogProps) {\n  const { onClose, selectedValue, open,addOrder } = props;\n\n  const [newOrder, setNewOrder] = React.useState();\n\n  const handleClose = () => {\n    onClose(selectedValue);\n\n    let item: IDialogAddOrder;\n    item.orders = new Array;\n    \n    addOrder(item)\n  };\n\n  \n\n\n  return (\n    <Dialog open={open}>\n      <DialogTitle>Формирование заказа</DialogTitle>\n      <Transition setNewOrder={setNewOrder}/>\n      <DialogActions>\n          <Button onClick={handleClose}>Disagree</Button>\n          <Button onClick={handleClose} autoFocus>\n            Agree\n          </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport default function DialogAddOrder(props:{addOrder: (value: IDialogAddOrder) => void}) {\n  const [open, setOpen] = React.useState(false);\n  const [selectedValue, setSelectedValue] = React.useState();\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (value: string) => {\n    setOpen(false);\n  };\n\n\n\n  return (\n    <div style={{width: '100%'}}>\n      <Button \n      onClick={handleClickOpen}\n      style={{width: '100%',display:'flext', justifyContent: 'space-around'}}\n      variant=\"contained\" endIcon={<AddCircleIcon />}>\n        Добавить заказ\n      </Button>\n\n      <SimpleDialog\n        selectedValue={selectedValue as IDialogAddOrder}\n        open={open}\n        onClose={handleClose}\n        addOrder={props.addOrder}\n      />\n    </div>\n  );\n}\n\n/*\n\n    <div>\n      <Typography variant=\"subtitle1\" component=\"div\">\n        Selected: {selectedValue}\n      </Typography>\n      <br />\n      <Button variant=\"outlined\" onClick={handleClickOpen}>\n        Open simple dialog\n      </Button>\n      <SimpleDialog\n        selectedValue={selectedValue}\n        open={open}\n        onClose={handleClose}\n      />\n    </div>\n\n*/"]},"metadata":{},"sourceType":"module"}