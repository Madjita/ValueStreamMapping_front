{"ast":null,"code":"var _jsxFileName = \"/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Pages/PageNewAlgoritmAddOrder.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport serverApiHost, { port } from \"../../global\";\nimport { Grid } from '@material-ui/core';\nimport CardOrderInNewAlgoritmDefault from '../Card/Pages/CardOrderInNewAlgoritmDefault';\nimport { experimentalStyled as styled } from '@mui/material/styles';\nimport Paper from '@mui/material/Paper';\nimport { IDataColorOrderInDefault } from '../Data/DataCardOrderInDefault/IDataColorOrderInDefault';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { Box } from '@material-ui/system';\nimport OrderRole from '../Data/OrderRole';\nimport DialogAddOrderNewAlgoritm from '../Dialog/DialogAddOrderNewAlgoritm';\nimport ToggleButtonMy from '../PageExample/ToggleButtonMy';\nimport TableView from '../PageExample/TableView'; ///////////////////////////////////\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Item = styled(Paper)(({\n  theme\n}) => ({ ...theme.typography.body2,\n  padding: theme.spacing(2),\n  textAlign: 'center',\n  color: theme.palette.text.secondary\n}));\n\nconst PageNewAlgoritmAddOrder = () => {\n  _s();\n\n  //const {orders, loading} = useTypedSelector(state => state.orders);\n  //const {ordersLoading,orderAdd} = useActionOrders()\n  const [orders, SetOrders] = useState();\n  const [loading, SetLoading] = useState(true);\n\n  const ordersLoading = async () => {\n    const response = await axios.get('http://' + serverApiHost + ':' + port + '/api/cardVSM/getallOrdersInPrepair');\n\n    if (response.status != 200) {\n      return;\n    }\n\n    let content = response.data;\n    let ordersFromServer = content.orders;\n    SetOrders(ordersFromServer); //console.log(\"orders = \",orders,ordersFromServer )\n\n    SetLoading(false);\n  };\n\n  const orderAdd = async newOrder => {\n    const response = await axios.post('http://' + serverApiHost + ':' + port + '/api/cardVSM/addorderprepair', JSON.stringify(newOrder), {\n      headers: {\n        // Overwrite Axios's automatically set Content-Type\n        \"Access-Control-Allow-Origin\": \"*\",\n        'Content-Type': 'application/json'\n      }\n    });\n  };\n\n  useEffect(() => {\n    const timer = setTimeout(async () => await ordersLoading(), 500);\n    return () => {\n      clearTimeout(timer);\n    };\n  }); //orders\n\n  const [alignment, setAlignment] = React.useState('left');\n\n  const handleChange = (event, newAlignment) => {\n    console.log(\"AAAAA\");\n    setAlignment(newAlignment);\n  };\n\n  const [newOrder, setOrder] = useState();\n\n  const addOrder = value => {\n    //console.log(\"NEW = \", value)\n    if (value.name == undefined || value.products.length === 0) {\n      //console.log(\"НЕТ \")\n      return;\n    }\n\n    orderAdd(value);\n  };\n\n  const even = n => !(n % 2); //Array.from(Array(10))\n\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this);\n  }\n\n  const listData = orders === null || orders === void 0 ? void 0 : orders.map((item, index) => {\n    if (item === undefined) {\n      return;\n    }\n\n    let OrderColor = IDataColorOrderInDefault.NotWork;\n\n    switch (item.orderRole) {\n      case OrderRole.Actual:\n        OrderColor = IDataColorOrderInDefault.NotWork;\n        break;\n\n      case OrderRole.Work:\n        OrderColor = IDataColorOrderInDefault.InWork;\n        break;\n\n      case OrderRole.ArchiveBad:\n        OrderColor = IDataColorOrderInDefault.DoneBad;\n        break;\n\n      case OrderRole.ArchiveGood:\n        OrderColor = IDataColorOrderInDefault.DoneGood;\n        break;\n\n      default:\n        break;\n    }\n\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      md: 4,\n      lg: 4,\n      xl: 3,\n      children: /*#__PURE__*/_jsxDEV(CardOrderInNewAlgoritmDefault, {\n        OrderColor: OrderColor,\n        data: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 12\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 8\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          padding: '0px 10px 0px 10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\u0417\\u0430\\u043A\\u0430\\u0437\\u044B \\u0434\\u043B\\u044F \\u0440\\u0430\\u0441\\u0447\\u0435\\u0442\\u0430 \\u0432\\u0440\\u0435\\u043C\\u0435\\u043D\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(DialogAddOrderNewAlgoritm, {\n            addOrder: addOrder\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(ToggleButtonMy, {\n            alignment: alignment,\n            handleChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          padding: '0px 10px 0px 10px'\n        },\n        children: alignment === 'left' ? /*#__PURE__*/_jsxDEV(TableView, {\n          orders: orders\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: listData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 13\n  }, this);\n};\n\n_s(PageNewAlgoritmAddOrder, \"jB/7Zf+MNb4uzM+Y7PgsUZq7V9c=\");\n\n_c = PageNewAlgoritmAddOrder;\nexport default PageNewAlgoritmAddOrder; //xs={12} sm={6} md={4} lg={4} xl={3}\n//xs={12} md={3}\n\n/*\n  <DialogAddOrder addOrder={addOrder}/>\n            <Box sx={{display: 'flex'}}>\n                <Grid container spacing={2}>\n                    {listData}\n                </Grid>\n            </Box>\n            */\n\nvar _c;\n\n$RefreshReg$(_c, \"PageNewAlgoritmAddOrder\");","map":{"version":3,"sources":["/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Pages/PageNewAlgoritmAddOrder.tsx"],"names":["React","useEffect","useState","axios","serverApiHost","port","Grid","CardOrderInNewAlgoritmDefault","experimentalStyled","styled","Paper","IDataColorOrderInDefault","CircularProgress","Box","OrderRole","DialogAddOrderNewAlgoritm","ToggleButtonMy","TableView","Item","theme","typography","body2","padding","spacing","textAlign","color","palette","text","secondary","PageNewAlgoritmAddOrder","orders","SetOrders","loading","SetLoading","ordersLoading","response","get","status","content","data","ordersFromServer","orderAdd","newOrder","post","JSON","stringify","headers","timer","setTimeout","clearTimeout","alignment","setAlignment","handleChange","event","newAlignment","console","log","setOrder","addOrder","value","name","undefined","products","length","even","n","display","justifyContent","listData","map","item","index","OrderColor","NotWork","orderRole","Actual","Work","InWork","ArchiveBad","DoneBad","ArchiveGood","DoneGood","alignItems"],"mappings":"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","sourcesContent":["import  React, { useEffect,useState } from 'react'\nimport axios from 'axios'\nimport serverApiHost,{port} from \"../../global\";\n\nimport { Grid } from '@material-ui/core';\nimport CardOrderInNewAlgoritmDefault from '../Card/Pages/CardOrderInNewAlgoritmDefault';\n\nimport { experimentalStyled as styled } from '@mui/material/styles';\nimport Paper from '@mui/material/Paper';\n\nimport {IDataColorOrderInDefault} from '../Data/DataCardOrderInDefault/IDataColorOrderInDefault'\n\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport IconButton from '@mui/material/IconButton';\nimport Button from '@mui/material/Button';\n\nimport { useActionOrders } from '../../hooks/useActionOrders';\nimport { useTypedSelector } from '../../hooks/leftMenuSelector';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { Box } from '@material-ui/system';\nimport IDataOrder from '../Data/IDataOrder';\nimport OrderRole from '../Data/OrderRole';\n\nimport DialogAddOrder from '../Dialog/DialogAddOrder'\nimport IDialogAddOrder from '../Data/Dialog/IDialogAddOrder'\nimport IDataProduction from '../Data/IDataProduction';\n\n\n\n/////////////////////////////////\nimport Order_view from '../Data/IDataOrder/IDataOrder'\nimport DialogAddOrderNewAlgoritm from '../Dialog/DialogAddOrderNewAlgoritm';\n\nimport ToggleButtonMy from '../PageExample/ToggleButtonMy'\nimport TableView from '../PageExample/TableView'\n\n///////////////////////////////////\n\nconst Item = styled(Paper)(({ theme }) => ({\n    ...theme.typography.body2,\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  }));\n\n\n\nconst PageNewAlgoritmAddOrder = () =>\n{\n//const {orders, loading} = useTypedSelector(state => state.orders);\n//const {ordersLoading,orderAdd} = useActionOrders()\n\n\nconst [orders, SetOrders] = useState<Order_view[]>();\nconst [loading, SetLoading] = useState(true);\n\nconst ordersLoading = async () => {\n\n\n    const response = await axios.get('http://'+serverApiHost+':'+port+'/api/cardVSM/getallOrdersInPrepair')\n\n    if(response.status != 200)\n    {\n      return ;\n    }\n\n    let content = response.data as any;\n\n    let ordersFromServer =  content.orders as Order_view[];\n    SetOrders(ordersFromServer);\n    //console.log(\"orders = \",orders,ordersFromServer )\n    SetLoading(false);\n}\n\nconst orderAdd = async (newOrder : IDialogAddOrder) =>{\n    const response = await axios.post('http://'+serverApiHost+':'+port+'/api/cardVSM/addorderprepair',JSON.stringify(newOrder),{\n        headers: {\n          // Overwrite Axios's automatically set Content-Type\n          \"Access-Control-Allow-Origin\": \"*\",\n          'Content-Type': 'application/json'\n        }\n      })\n}\n\n\nuseEffect(() => {\n    const timer = setTimeout(async () => await ordersLoading(), 500);\n    return () => {\n      clearTimeout(timer);\n    };   \n}) //orders\n\n\n\nconst [alignment, setAlignment] = React.useState('left');\n\n  const handleChange = (\n    event: React.MouseEvent<HTMLElement>,\n    newAlignment: string,\n  ) => {\n\n    console.log(\"AAAAA\");\n    setAlignment(newAlignment);\n\n  };\n\n\nconst [newOrder,setOrder] = useState<IDialogAddOrder>();\n\nconst addOrder= (value : IDialogAddOrder) =>\n{\n    //console.log(\"NEW = \", value)\n    if(value.name == undefined || value.products.length === 0)\n    {\n        //console.log(\"НЕТ \")\n        return ;\n    }\n    orderAdd(value);\n}\n\n\nconst even = (n: number) => !(n % 2);\n\n//Array.from(Array(10))\n\n\n\nif(loading)\n{\n    return (\n        <Box sx={{ display: 'flex', justifyContent: 'center' }}>\n          <CircularProgress />\n        </Box>\n    )\n}\n\nconst listData =  orders?.map((item: Order_view, index)=>{\n\n    if(item === undefined)\n    {\n        return ;\n    }\n\n    let OrderColor = IDataColorOrderInDefault.NotWork;\n    switch(item.orderRole)\n    {\n        case OrderRole.Actual:\n            OrderColor = IDataColorOrderInDefault.NotWork\n            break;\n        case OrderRole.Work:\n            OrderColor = IDataColorOrderInDefault.InWork\n            break;\n\n        case OrderRole.ArchiveBad:\n            OrderColor = IDataColorOrderInDefault.DoneBad\n            break;\n        case OrderRole.ArchiveGood:\n            OrderColor = IDataColorOrderInDefault.DoneGood\n            break;\n        default:\n            break;\n    }\n\n   return (\n       <Grid item xs={12} sm={6} md={4} lg={4} xl={3} key={index}>\n           <CardOrderInNewAlgoritmDefault OrderColor={OrderColor} data={item}/>\n       </Grid>\n   )\n})\n\n\n    return (\n            <div>\n                <Box > {/*sx={{margin:'0px 10px 0px 10px'}}*/}\n                    <div style={{display: 'flex', justifyContent: 'space-between',alignItems: 'center', padding: '0px 10px 0px 10px'}}>\n                        <div>\n                        <h3>Заказы для расчета времени</h3>\n                        <DialogAddOrderNewAlgoritm addOrder={addOrder}/>\n                        </div>\n                        <div>\n                            <ToggleButtonMy alignment= {alignment} handleChange={handleChange}/>\n                        </div>\n                    </div>\n                    <Box sx={{display: 'flex', padding: '0px 10px 0px 10px'}}>\n\n\n                    { alignment === 'left' ? \n                            <TableView orders={orders}/>\n                        :\n                        \n                        <Grid container spacing={2}>\n                            {listData}\n                        </Grid>\n                        }\n                    </Box>\n                </Box>\n            </div>\n    ) \n}\n\nexport default PageNewAlgoritmAddOrder;\n\n//xs={12} sm={6} md={4} lg={4} xl={3}\n//xs={12} md={3}\n/*\n  <DialogAddOrder addOrder={addOrder}/>\n            <Box sx={{display: 'flex'}}>\n                <Grid container spacing={2}>\n                    {listData}\n                </Grid>\n            </Box>\n            */"]},"metadata":{},"sourceType":"module"}