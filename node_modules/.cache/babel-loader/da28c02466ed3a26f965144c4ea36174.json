{"ast":null,"code":"var _jsxFileName = \"/Users/sergeismogliuk/Documents/Project/Project_node/Diplom/react-diplom/react-diplom/src/components/ListView/ListView.js\";\nimport React from 'react';\nimport ListItem from \"./ListItem\";\nimport { ListActiveContextProvider } from \"../../Global\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ListView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this._showChoices = () => {\n      return this.state.list.map((item, i) => {\n        return /*#__PURE__*/_jsxDEV(ListActiveContextProvider, {\n          children: /*#__PURE__*/_jsxDEV(ListItem, {\n            title: item.choice_name,\n            checked: item.isChecked,\n            size: 50,\n            onIconPress: () => {},\n            onPress: () => {//let clonedList = this.state.list.slice();\n              //clonedList[i].isChecked = !clonedList[i].isChecked;\n              //this.setState({ list: clonedList });\n            },\n            MyKey: item.choice_id\n          }, item.choice_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 10\n        }, this);\n      });\n    };\n\n    this.state = {\n      list: []\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    const [ListActive, setContext] = useContext(ListActiveContext);\n    this.setState({\n      list: ListActive\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: this._showChoices()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default ListView;","map":{"version":3,"sources":["/Users/sergeismogliuk/Documents/Project/Project_node/Diplom/react-diplom/react-diplom/src/components/ListView/ListView.js"],"names":["React","ListItem","ListActiveContextProvider","ListView","PureComponent","constructor","props","_showChoices","state","list","map","item","i","choice_name","isChecked","choice_id","componentDidMount","render","ListActive","setContext","useContext","ListActiveContext","setState"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,QAAP,MAAqB,YAArB;AAEA,SAASC,yBAAT,QAAyC,cAAzC;;;AAEA,MAAMC,QAAN,SAAuBH,KAAK,CAACI,aAA7B,CAA2C;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAWnBC,YAXmB,GAWJ,MAAM;AACnB,aAAO,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,GAAhB,CAAoB,CAACC,IAAD,EAAOC,CAAP,KAAa;AACtC,4BACC,QAAC,yBAAD;AAAA,iCACC,QAAC,QAAD;AACE,YAAA,KAAK,EAAED,IAAI,CAACE,WADd;AAEE,YAAA,OAAO,EAAEF,IAAI,CAACG,SAFhB;AAGE,YAAA,IAAI,EAAE,EAHR;AAIE,YAAA,WAAW,EAAE,MAAM,CAAE,CAJvB;AAKE,YAAA,OAAO,EAAE,MAAM,CACb;AACA;AACA;AACD,aATH;AAWE,YAAA,KAAK,EAAIH,IAAI,CAACI;AAXhB,aAUOJ,IAAI,CAACI,SAVZ;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBADD;AAiBD,OAlBM,CAAP;AAmBD,KA/BkB;;AAGjB,SAAKP,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE;AADG,KAAb;AAGD;;AA2BDO,EAAAA,iBAAiB,GACjB,CAEC;;AAEDC,EAAAA,MAAM,GAAG;AACT,UAAM,CAACC,UAAD,EAAaC,UAAb,IAA2BC,UAAU,CAACC,iBAAD,CAA3C;AACA,SAAKC,QAAL,CAAc;AAACb,MAAAA,IAAI,EAAES;AAAP,KAAd;AACE,wBACE;AAAA,6BACE;AAAA,kBAAK,KAAKX,YAAL;AAAL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AA/CsC;;AAkDzC,eAAeJ,QAAf","sourcesContent":["import React from 'react';\n\nimport ListItem from \"./ListItem\"\n\nimport  {ListActiveContextProvider} from \"../../Global\"\n\nclass ListView extends React.PureComponent {\n    constructor(props) {\n      super(props);\n      \n      this.state = {\n          list: []\n      }\n    }\n\n\n\n  \n    _showChoices = () => {\n      return this.state.list.map((item, i) => {\n        return (\n         <ListActiveContextProvider>\n          <ListItem\n            title={item.choice_name}\n            checked={item.isChecked}\n            size={50}\n            onIconPress={() => {}}\n            onPress={() => {\n              //let clonedList = this.state.list.slice();\n              //clonedList[i].isChecked = !clonedList[i].isChecked;\n              //this.setState({ list: clonedList });\n            }}\n            key={item.choice_id}\n            MyKey = {item.choice_id}\n          />\n          </ListActiveContextProvider>\n        );\n      });\n    };\n\n    componentDidMount()\n    {\n        \n    }\n\n    render() {\n    const [ListActive, setContext] = useContext(ListActiveContext);\n    this.setState({list: ListActive})\n      return (\n        <div>\n          <ul>{this._showChoices()}</ul>\n        </div>\n      );\n    }\n  }\n  \n  export default ListView;"]},"metadata":{},"sourceType":"module"}