{"ast":null,"code":"var _jsxFileName = \"/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Dialog/DialogAddOrder.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport TextField from '@material-ui/core/TextField';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emails = ['username@gmail.com', 'user02@gmail.com'];\n\nconst SimpleAddProductView = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(TextField, {\n      autoFocus: true,\n      margin: \"dense\",\n      id: \"name\",\n      label: \"Email Address\",\n      type: \"email\",\n      fullWidth: true,\n      variant: \"standard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 14\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_c = SimpleAddProductView;\n\nfunction SimpleDialog(props) {\n  const {\n    onClose,\n    selectedValue,\n    open\n  } = props;\n\n  const handleClose = () => {\n    onClose(selectedValue);\n  };\n\n  const handleListItemClick = value => {\n    onClose(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    onClose: handleClose,\n    open: open,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"Set backup account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Transition, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = SimpleDialog;\nexport default function DialogAddOrder() {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n  const [selectedValue, setSelectedValue] = React.useState(emails[1]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = value => {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleClickOpen,\n      style: {\n        width: '100%',\n        display: 'flext',\n        justifyContent: 'space-around'\n      },\n      variant: \"contained\",\n      endIcon: /*#__PURE__*/_jsxDEV(AddCircleIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 36\n      }, this),\n      children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0437\\u0430\\u043A\\u0430\\u0437\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SimpleDialog, {\n      selectedValue: selectedValue,\n      open: open,\n      onClose: handleClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n/*\n\n    <div>\n      <Typography variant=\"subtitle1\" component=\"div\">\n        Selected: {selectedValue}\n      </Typography>\n      <br />\n      <Button variant=\"outlined\" onClick={handleClickOpen}>\n        Open simple dialog\n      </Button>\n      <SimpleDialog\n        selectedValue={selectedValue}\n        open={open}\n        onClose={handleClose}\n      />\n    </div>\n\n*/\n\n_s(DialogAddOrder, \"Do4OkZlv0qopuj/OyvdbwyP1nrE=\");\n\n_c3 = DialogAddOrder;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"SimpleAddProductView\");\n$RefreshReg$(_c2, \"SimpleDialog\");\n$RefreshReg$(_c3, \"DialogAddOrder\");","map":{"version":3,"sources":["/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Dialog/DialogAddOrder.tsx"],"names":["React","Button","DialogTitle","Dialog","TextField","AddCircleIcon","emails","SimpleAddProductView","SimpleDialog","props","onClose","selectedValue","open","handleClose","handleListItemClick","value","DialogAddOrder","setOpen","useState","setSelectedValue","handleClickOpen","width","display","justifyContent"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAMA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAMA,OAAOC,SAAP,MAAsB,6BAAtB;AAEA,OAAOC,aAAP,MAA0B,8BAA1B;;AAEA,MAAMC,MAAM,GAAG,CAAC,oBAAD,EAAuB,kBAAvB,CAAf;;AAWA,MAAMC,oBAAoB,GAAG,MAC7B;AACI,sBACI;AAAA,2BACK,QAAC,SAAD;AACD,MAAA,SAAS,MADR;AAED,MAAA,MAAM,EAAC,OAFN;AAGD,MAAA,EAAE,EAAC,MAHF;AAID,MAAA,KAAK,EAAC,eAJL;AAKD,MAAA,IAAI,EAAC,OALJ;AAMD,MAAA,SAAS,MANR;AAOD,MAAA,OAAO,EAAC;AAPP;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CAfD;;KAAMA,oB;;AAqBN,SAASC,YAAT,CAAsBC,KAAtB,EAAgD;AAC9C,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,aAAX;AAA0BC,IAAAA;AAA1B,MAAmCH,KAAzC;;AAEA,QAAMI,WAAW,GAAG,MAAM;AACxBH,IAAAA,OAAO,CAACC,aAAD,CAAP;AACD,GAFD;;AAIA,QAAMG,mBAAmB,GAAIC,KAAD,IAAmB;AAC7CL,IAAAA,OAAO,CAACK,KAAD,CAAP;AACD,GAFD;;AAIA,sBACE,QAAC,MAAD;AAAQ,IAAA,OAAO,EAAEF,WAAjB;AAA8B,IAAA,IAAI,EAAED,IAApC;AAAA,4BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;MAjBQJ,Y;AAmBT,eAAe,SAASQ,cAAT,GAA0B;AAAA;;AACvC,QAAM,CAACJ,IAAD,EAAOK,OAAP,IAAkBjB,KAAK,CAACkB,QAAN,CAAe,KAAf,CAAxB;AACA,QAAM,CAACP,aAAD,EAAgBQ,gBAAhB,IAAoCnB,KAAK,CAACkB,QAAN,CAAeZ,MAAM,CAAC,CAAD,CAArB,CAA1C;;AAEA,QAAMc,eAAe,GAAG,MAAM;AAC5BH,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAIA,QAAMJ,WAAW,GAAIE,KAAD,IAAmB;AACrCE,IAAAA,OAAO,CAAC,KAAD,CAAP;AACAE,IAAAA,gBAAgB,CAACJ,KAAD,CAAhB;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,KAAK,EAAE;AAACM,MAAAA,KAAK,EAAE;AAAR,KAAZ;AAAA,4BACE,QAAC,MAAD;AACA,MAAA,OAAO,EAAED,eADT;AAEA,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAE,MAAR;AAAeC,QAAAA,OAAO,EAAC,OAAvB;AAAgCC,QAAAA,cAAc,EAAE;AAAhD,OAFP;AAGA,MAAA,OAAO,EAAC,WAHR;AAGoB,MAAA,OAAO,eAAE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,cAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,YAAD;AACE,MAAA,aAAa,EAAEZ,aADjB;AAEE,MAAA,IAAI,EAAEC,IAFR;AAGE,MAAA,OAAO,EAAEC;AAHX;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GAhDwBG,c;;MAAAA,c","sourcesContent":["import * as React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport PersonIcon from '@material-ui/icons/Person';\nimport AddIcon from '@material-ui/icons/Add';\nimport Typography from '@material-ui/core/Typography';\nimport { blue } from '@material-ui/core/colors';\n\nimport TextField from '@material-ui/core/TextField';\n\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\n\nconst emails = ['username@gmail.com', 'user02@gmail.com'];\n\nexport interface SimpleDialogProps {\n  open: boolean;\n  selectedValue: string;\n  onClose: (value: string) => void;\n}\n\n\n\n\nconst SimpleAddProductView = () =>\n{\n    return(\n        <div>\n             <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Email Address\"\n            type=\"email\"\n            fullWidth\n            variant=\"standard\"\n          />\n        </div>\n    )\n}\n\n\n\n\n\nfunction SimpleDialog(props: SimpleDialogProps) {\n  const { onClose, selectedValue, open } = props;\n\n  const handleClose = () => {\n    onClose(selectedValue);\n  };\n\n  const handleListItemClick = (value: string) => {\n    onClose(value);\n  };\n\n  return (\n    <Dialog onClose={handleClose} open={open}>\n      <DialogTitle>Set backup account</DialogTitle>\n      <Transition/>\n    </Dialog>\n  );\n}\n\nexport default function DialogAddOrder() {\n  const [open, setOpen] = React.useState(false);\n  const [selectedValue, setSelectedValue] = React.useState(emails[1]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (value: string) => {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n\n  return (\n    <div style={{width: '100%'}}>\n      <Button \n      onClick={handleClickOpen}\n      style={{width: '100%',display:'flext', justifyContent: 'space-around'}}\n      variant=\"contained\" endIcon={<AddCircleIcon />}>\n        Добавить заказ\n      </Button>\n\n      <SimpleDialog\n        selectedValue={selectedValue}\n        open={open}\n        onClose={handleClose}\n      />\n    </div>\n  );\n}\n\n/*\n\n    <div>\n      <Typography variant=\"subtitle1\" component=\"div\">\n        Selected: {selectedValue}\n      </Typography>\n      <br />\n      <Button variant=\"outlined\" onClick={handleClickOpen}>\n        Open simple dialog\n      </Button>\n      <SimpleDialog\n        selectedValue={selectedValue}\n        open={open}\n        onClose={handleClose}\n      />\n    </div>\n\n*/"]},"metadata":{},"sourceType":"module"}