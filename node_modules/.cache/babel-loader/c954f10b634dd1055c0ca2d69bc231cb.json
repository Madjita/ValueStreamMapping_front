{"ast":null,"code":"var _jsxFileName = \"/Users/sergeismogliuk/Documents/Project/Project_node/Diplom/react-diplom/react-diplom/src/components/SVG/Triangle/Triangle.js\";\nimport React from \"react\"; //import styled from 'styled-components'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Triangle extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.findPoint = (percent, x, y) => {\n      let H_pointPx = y * percent / 100; // Нашли сколько же пикселей занимает по высоте наши проценты\n\n      let pointPx = H_pointPx; // находим точку по высоте если считать снизу\n\n      return this.findPointSin(pointPx, x / 2, y); // находим длину по X\n    };\n\n    this.findPointSin = (b, a1, b1) => {\n      return b * a1 / b1;\n    };\n\n    this.returnStr = () => {\n      let newHeight = this.state.height;\n      let x = this.state.width;\n      let y = newHeight - 20; //let y = this.state.height\n\n      let percent = this.ValueToPercent(this.state.value);\n      let point_Y = y - y * percent / 100;\n      let point_X = this.findPoint(percent, x, y);\n      let percentByze = 10;\n      let percentByze_new = percentByze * percent / 100;\n      percentByze -= percentByze_new;\n      let byze = point_Y + y * percentByze / 100; // плюс 10%\n\n      let point_Y_2 = point_Y;\n      let point_X_2 = x - point_X;\n      return \"M0,\" + y + \" \" + point_X + \",\" + point_Y + \" Q \" + x / 2 + \",\" + byze + \" \" + point_X_2 + \",\" + point_Y_2 + \" \" + point_X_2 + \",\" + point_Y_2 + \" \" + x + \",\" + y + \" Q 50,100 0,\" + y + \" 0,\" + y;\n    };\n\n    this.handleOnMouseMove = e => {//console.log(\"Trignale =\",this.state.percent)\n      //this.setState({left: this.state.left+1})\n    };\n\n    this.ValueToPercent = value => {\n      let percent = value * 100 / this.state.max;\n      return percent;\n    };\n\n    this.state = {\n      error: null,\n      isLoaded: false,\n      width: this.props.width,\n      height: this.props.height,\n      percent: this.props.percent,\n      min: this.props.min,\n      max: this.props.max,\n      value: this.props.value,\n      left: this.props.left,\n      top: this.props.top,\n      scale: this.props.scale\n    };\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => {\n      let newValue = 100; //this.state.value+1;\n\n      if (newValue > this.state.max) {\n        newValue = 0;\n      }\n\n      this.setState({\n        value: newValue\n      }); //Math.floor(Math.random() * this.state.height)\n    }, 100);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    let {\n      width,\n      height,\n      value,\n      min\n    } = this.state;\n    let viewBox = \"0 0 \" + width + \" \" + height;\n    let pointsPolygon = \"M0,\" + height + \" \" + width / 2 + \",0 \" + width + \" \" + height;\n    let D = this.returnStr();\n    let minPrecent = this.ValueToPercent(this.state.min);\n    let color = \"green\";\n\n    if (value === 0) {\n      color = \"lightgray\";\n    } else {\n      if (value < min) {\n        color = \"red\";\n      }\n    }\n\n    let PxMin_X = this.findPoint(minPrecent, width, height); //let D_min = \"M0,\"+PxMin\n\n    let newHeight = height - 20;\n    pointsPolygon = \"M0,\" + newHeight + \" \" + width / 2 + \",0 \" + width + \" \" + newHeight + \" Q 50,100 0,\" + newHeight + \" 0,\" + newHeight;\n    console.log(\"scale = \", this.state.scale);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      onMouseMove: this.handleOnMouseMove,\n      style: {\n        transform: \"scaleY(\" + this.state.scale + \")\",\n        position: \"absolute\",\n        left: this.state.left,\n        top: this.state.top\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: width,\n        height: height,\n        viewBox: viewBox,\n        fill: \"none\",\n        stroke: \"#000000\",\n        strokeWidth: \"0.5\",\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        children: [/*#__PURE__*/_jsxDEV(\"path\", {\n          d: pointsPolygon,\n          fill: \"lightgray\",\n          stroke: \"lightgray\",\n          strokeWidth: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: D,\n            fill: color,\n            stroke: color\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 10\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default Triangle;","map":{"version":3,"sources":["/Users/sergeismogliuk/Documents/Project/Project_node/Diplom/react-diplom/react-diplom/src/components/SVG/Triangle/Triangle.js"],"names":["React","Triangle","Component","constructor","props","findPoint","percent","x","y","H_pointPx","pointPx","findPointSin","b","a1","b1","returnStr","newHeight","state","height","width","ValueToPercent","value","point_Y","point_X","percentByze","percentByze_new","byze","point_Y_2","point_X_2","handleOnMouseMove","e","max","error","isLoaded","min","left","top","scale","componentDidMount","interval","setInterval","newValue","setState","componentWillUnmount","clearInterval","render","viewBox","pointsPolygon","D","minPrecent","color","PxMin_X","console","log","transform","position"],"mappings":"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","sourcesContent":["import React from \"react\";\n//import styled from 'styled-components'\n\n\nclass Triangle extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          error: null,\n          isLoaded: false,\n\t\t  width: this.props.width,\n\t\t  height: this.props.height,\n\t\t  percent: this.props.percent,\n\n\t\t  min: this.props.min,\n\t\t  max: this.props.max,\n\t\t  value: this.props.value,\n\n\t\t  left: this.props.left,\n\t\t  top: this.props.top,\n\t\t  scale: this.props.scale,\n        };\n      }\n\n\t   findPoint =(percent,x,y)=>\n\t\t{\n\t\t\tlet H_pointPx = (y*percent)/100 // Нашли сколько же пикселей занимает по высоте наши проценты\n\t\t\tlet pointPx = H_pointPx // находим точку по высоте если считать снизу\n\n\t\t\treturn this.findPointSin(pointPx,x/2,y) // находим длину по X\n\t\t}\n\n\t\tfindPointSin = (b,a1,b1) =>\n\t\t{\n\t\t\treturn (b*a1)/b1\n\t\t}\n\n\t\treturnStr=()=>\n\t\t{\n\t\t\tlet newHeight = this.state.height\n\n\t\t\tlet x = this.state.width;\n\t\t\tlet y = newHeight-20; //let y = this.state.height\n\t\t\tlet percent = this.ValueToPercent(this.state.value)\n\t\t\tlet point_Y = y - (y*percent)/100;\n\t\t\tlet point_X = this.findPoint(percent,x,y)\n\t\t\tlet percentByze = 10;\n\n\t\t\tlet percentByze_new = percentByze*percent/100\n\t\t\t\n\t\t\tpercentByze -=percentByze_new;\t\n\n\t\t\tlet byze = point_Y+((y*percentByze)/100) // плюс 10%\n\t\t\t\n\n\t\t\tlet point_Y_2 = point_Y\n\t\t\tlet point_X_2 = x - point_X\n\n\t\t\treturn (\"M0,\"+y+\" \"+point_X+\",\"+point_Y+\" Q \"+x/2+\",\"+byze+\" \"+point_X_2+\",\"+point_Y_2+\" \"+point_X_2+\",\"+point_Y_2+\" \"+x+\",\"+y+\" Q 50,100 0,\"+y+\" 0,\"+y)\n\t\t}\n\n\t\tcomponentDidMount() {\n\t\t\tthis.interval = setInterval(() => {\n\t\t\t\tlet newValue = 100//this.state.value+1;\n\n\t\t\t\tif(newValue > this.state.max)\n\t\t\t\t{\n\t\t\t\t\tnewValue = 0;\n\t\t\t\t}\n\t\t\t\tthis.setState({value: newValue}) //Math.floor(Math.random() * this.state.height)\n\t\t\t},100)\n\t\t}\n\n\t\tcomponentWillUnmount() {\n\t\t\tclearInterval(this.interval);\n\t\t  }\n\n\n\t\t  handleOnMouseMove = (e)=>{\n\t\t\t  //console.log(\"Trignale =\",this.state.percent)\n\t\t\t  //this.setState({left: this.state.left+1})\n\t\t  }\n\n\t\t  ValueToPercent = (value) =>\n\t\t  {\n\t\t\tlet percent = (value*100)/this.state.max\n\t\t\treturn percent\n\t\t  }\n\n\t\t  \n\n      render() {\n\t\tlet {width,height,value,min} = this.state\n\t\tlet viewBox = \"0 0 \"+width+\" \"+height;\n\t\tlet pointsPolygon = \"M0,\"+height+\" \"+width/2+\",0 \"+width+\" \"+height;\n\t\tlet D = this.returnStr()\n\n\t\tlet minPrecent = this.ValueToPercent(this.state.min)\n\n\t\tlet color = \"green\"\n\t\t\n\t\tif(value === 0)\n\t\t{\n\t\t\tcolor = \"lightgray\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(value < min)\n\t\t\t{\n\t\t\t\tcolor = \"red\"\n\t\t\t}\n\t\t}\n\t\t\n\n\n\t\tlet PxMin_X = this.findPoint(minPrecent,width,height) \n\t\t//let D_min = \"M0,\"+PxMin\n\t\tlet newHeight = height-20\n\t\tpointsPolygon = \"M0,\"+newHeight+\" \"+width/2+\",0 \"+width+\" \"+newHeight+\" Q 50,100 0,\"+newHeight+\" 0,\"+newHeight;\n\t\tconsole.log(\"scale = \",this.state.scale)\n        return (\n\t\t\t<div onMouseMove={this.handleOnMouseMove} style={{transform:\"scaleY(\"+this.state.scale+\")\",position:\"absolute\",left: this.state.left, top: this.state.top}}>\n\t\t\t\t<p>{this.state.value}</p>\n\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" width={width} height={height} viewBox={viewBox} fill=\"none\" stroke=\"#000000\" strokeWidth=\"0.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n\t\t\t\t  <path d={pointsPolygon} fill=\"lightgray\" stroke=\"lightgray\" strokeWidth=\"1\"></path>\n\t\t\t\t  <g><path d={D} fill={color} stroke={color}></path></g>\n\t\t\t\t</svg>\n\t\t\t</div>\n        )\n      }\n}\n\n\nexport default Triangle;"]},"metadata":{},"sourceType":"module"}