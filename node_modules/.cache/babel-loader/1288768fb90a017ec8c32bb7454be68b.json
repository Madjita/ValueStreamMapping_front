{"ast":null,"code":"var _jsxFileName = \"/Users/sergeismogliuk/Documents/Project/Project_node/Diplom/react-diplom/react-diplom/src/components/Diagrams/DiagramViewBox.js\";\nimport React from \"react\";\nimport Diagram from './Diagram';\nimport SymbolPalette from './SymbolPalette';\nimport { PortVisibility, NodeConstraints } from \"@syncfusion/ej2-react-diagrams\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet style = {\n  strokeColor: \"red\",\n  strokeDashArray: \"3,3\",\n  strokeWidth: 2\n};\nlet customer = {\n  id: 'Customer',\n  // Position of the node\n  offsetX: 500,\n  offsetY: 250,\n  // Size of the node\n  width: 100,\n  height: 70,\n  shape: {\n    type: 'Native',\n    content: \"<g id=\\\"Layer_1\\\" data-name=\\\"Layer 1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 84.96 67.16\\\">\" + \"<defs><style>.cls-1{fill:#fcd1a5;}</style></defs>\" + \"<title>customer-supplier</title>\" + \"'<path class=\\\"cls-1\\\" d=\\\"M6.51,23.71A2.31,2.31,0,0,1,7.46,22L29.33,7c0.54-.36.94-0.13,0.94,0.49v14c0,0.63.4,0.86,0.94,0.49L53.09,7C53.63,6.65,54,6.88,54,7.51v14c0,0.63.4,0.86,0.95,0.49L77.57,7c0.54-.36.94-0.13,0.94,0.49V59.26a1.11,1.11,0,0,1-1.12,1.13H7.64a1.11,1.11,0,0,1-1.12-1.12V23.71Z\\\"/></g>\",\n    shape: 'Customer' //scale: 'Meet'\n\n  },\n  //constraints: NodeConstraints.Default | NodeConstraints.Shadow,\n  style: {\n    fill: 'none',\n    ...style,\n    strokeWidth: 0\n  }\n};\nlet process = {\n  id: 'Process',\n  // Position of the node\n  offsetX: 250,\n  offsetY: 250,\n  // Size of the node\n  width: 100,\n  height: 100,\n  annotations: [{\n    content: 'New \\n Process'\n  }, {\n    content: '0',\n    offset: {\n      x: 0.5,\n      y: 0.88\n    }\n  }],\n  shape: {\n    type: 'Native',\n    content: \"<g id=\\\"Layer_1\\\" data-name=\\\"Layer 1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 88.01 69.16\\\">\" + \"<defs><style>.cls-1{fill:#fcd1a5;}.cls-2,.cls-3{fill:none;stroke-miterlimit:10;stroke-width:0.9px;}.cls-2{stroke:#fff;}.cls-3{stroke:#3d4752;}</style></defs>\" + \"<title>dedicated-process</title>\" + \"<rect class=\\\"cls-1\\\" x=\\\"6.48\\\" y=\\\"7.4\\\" width=\\\"72\\\" height=\\\"54\\\" rx=\\\"1.13\\\" ry=\\\"1.13\\\"/>\" + \"<line class=\\\"cls-2\\\" x1=\\\"6.48\\\" y1=\\\"25.4\\\" x2=\\\"78.48\\\" y2=\\\"25.4\\\"/>\" + \"<path class=\\\"cls-1\\\" d=\\\"M17.73,54.74A3.87,3.87,0,0,1,14,59a4.14,4.14,0,0,1-4-4V54.83\\\"/>\" + \"<path class=\\\"cls-3\\\" d=\\\"M17.73,54.74A3.87,3.87,0,0,1,14,59a4.14,4.14,0,0,1-4-4V54.83\\\"/>\" + \"<path class=\\\"cls-1\\\" d=\\\"M11.43,55.37A2.33,2.33,0,0,1,13.77,53a2.5,2.5,0,0,1,2.65,2.2,2.27,2.27,0,0,1-2.29,2.39A2.55,2.55,0,0,1,11.43,55.37Z\\\"/>\" + \"<path class=\\\"cls-3\\\" d=\\\"M11.43,55.37A2.33,2.33,0,0,1,13.77,53a2.5,2.5,0,0,1,2.65,2.2,2.27,2.27,0,0,1-2.29,2.39A2.55,2.55,0,0,1,11.43,55.37Z\\\"/></g>\",\n    shape: 'Process' //scale: 'Meet'\n\n  },\n  //constraints: NodeConstraints.Default | NodeConstraints.Shadow,\n  style: {\n    fill: 'none',\n    ...style,\n    strokeWidth: 0\n  }\n};\nlet external_shipment = {\n  id: 'External_Shipment',\n  // Position of the node\n  offsetX: 250,\n  offsetY: 250,\n  // Size of the node\n  width: 100,\n  height: 50,\n  // Sets the annotation for the node\n\n  /*annotations: [{\n    // Sets the horizontal alignment as left\n    // Sets the vertical alignment as Center\n    offset: {\n      x: 0.3,\n      y: 0.4\n    }\n  }],*/\n  // Sets the annotation for the connector\n  annotations: [{\n    content: 'New External shipment',\n    // Sets the margin for the content\n    margin: {\n      top: 5\n    },\n    horizontalAlignment: 'Center',\n    verticalAlignment: 'Top',\n    offset: {\n      x: 0.5,\n      y: 1\n    }\n  }],\n  shape: {\n    type: 'Native',\n    content: \"<g id=\\\"Layer_1\\\" data-name=\\\"Layer 1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 86.15 46.95\\\"><defs>\" + \"<style>.external_shipment-1{fill:#abddf3;}.external_shipment-2{fill:none;stroke:#fff;stroke-miterlimit:10;stroke-width:0.9px;}.external_shipment-3{fill:#3d4752;}</style></defs>\" + \"<title>external-shipment</title>\" + \"<rect class=\\\"external_shipment-1\\\" x=\\\"1.76\\\" y=\\\"1.95\\\" width=\\\"47.21\\\" height=\\\"37.49\\\" rx=\\\"1.13\\\" ry=\\\"1.13\\\"/>\" + \"<rect class=\\\"external_shipment-2\\\" x=\\\"1.76\\\" y=\\\"1.95\\\" width=\\\"47.21\\\" height=\\\"37.49\\\" rx=\\\"1.13\\\" ry=\\\"1.13\\\"/>\" + \"<path class=\\\"external_shipment-1\\\" d=\\\"M49,39.44,55.81,13.2h9a1.91,1.91,0,0,1,1.58,1l4.09,9.18a0.68,0.68,0,0,1-.67,1H56.93a1.11,1.11,0,0,1-1.12-1.12V13.2M49,39.44H81.64a1.11,1.11,0,0,0,1.13-1.12V25.58a1.11,1.11,0,0,0-1.12-1.12H77.18a1.92,1.92,0,0,1-1.62-1L69.71,10.5a1.92,1.92,0,0,0-1.62-1h-18A1.14,1.14,0,0,0,49,10.59V39.44\\\"/>\" + \"<path class=\\\"external_shipment-2\\\" d=\\\"M49,39.44,55.81,13.2h9a1.91,1.91,0,0,1,1.58,1l4.09,9.18a0.68,0.68,0,0,1-.67,1H56.93a1.11,1.11,0,0,1-1.12-1.12V13.2M49,39.44H81.64a1.11,1.11,0,0,0,1.13-1.12V25.58a1.11,1.11,0,0,0-1.12-1.12H77.18a1.92,1.92,0,0,1-1.62-1L69.71,10.5a1.92,1.92,0,0,0-1.62-1h-18A1.14,1.14,0,0,0,49,10.59V39.44\\\"/>\" + \"<path class=\\\"external_shipment-3\\\" d=\\\"M24,39.44C24,43.58,21,47,17.33,47s-6.84-3.37-6.84-7.51S13.6,32,17.33,32,24,35.3,24,39.44Z/>\" + \"<path class=\\\"external_shipment-2\\\" d=\\\"M24,39.44C24,43.58,21,47,17.33,47s-6.84-3.37-6.84-7.51S13.6,32,17.33,32,24,35.3,24,39.44Z/>\" + \"<path class=\\\"external_shipment-3\\\" d=\\\"M69.22,39.44c0,4.14-3,7.51-6.71,7.51s-6.71-3.37-6.71-7.51,3-7.47,6.71-7.47S69.22,35.3,69.22,39.44Z\\\"/>\" + \"<path class=\\\"external_shipment-3\\\" d=\\\"M69.22,39.44c0,4.14-3,7.51-6.71,7.51s-6.71-3.37-6.71-7.51,3-7.47,6.71-7.47S69.22,35.3,69.22,39.44Z\\\"/></g>\",\n    shape: 'External\\nShipment' //scale: 'Meet'\n\n  },\n  //constraints: NodeConstraints.Default | NodeConstraints.Shadow,\n  style: {\n    fill: 'none',\n    ...style,\n    strokeWidth: 0\n  }\n};\nlet inventory = {\n  id: 'Inventory',\n  // Position of the node\n  offsetX: 250,\n  offsetY: 250,\n  // Size of the node\n  // Sets the annotation for the node\n  width: 50,\n  height: 50,\n  annotations: [{\n    content: 'New External shipment',\n    // Sets the margin for the content\n    margin: {\n      top: 5\n    },\n    horizontalAlignment: 'Center',\n    verticalAlignment: 'Top',\n    offset: {\n      x: 0.5,\n      y: 1\n    }\n  }],\n  shape: {\n    type: 'Native',\n    content: \"<g id=\\\"Layer_1\\\" data-name=\\\"Layer 1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 65.87 62.85\\\"><defs>\" + \"<style>.Inventory-1{fill:#abddf3;}</style></defs>\" + \"<title>inventory-customer-supplier</title>\" + \"<path class=\\\"Inventory-1\\\" d=\\\"M36.23,6.39a0.56,0.56,0,0,0-1.08,0L7,58.41a0.61,0.61,0,0,0,.58,1H63.82a0.61,0.61,0,0,0,.58-1Z\\\"/></g>\",\n    shape: 'Inventory' //scale: 'Meet'\n\n  },\n  //constraints: NodeConstraints.Default | NodeConstraints.Shadow,\n  style: {\n    fill: 'none',\n    ...style,\n    strokeWidth: 0\n  }\n};\nlet production_control = {\n  id: 'Production_control',\n  // Position of the node\n  offsetX: 250,\n  offsetY: 250,\n  // Size of the node\n  // Sets the annotation for the node\n  width: 300,\n  height: 100,\n  annotations: [{\n    content: 'New Production Control',\n    // Sets the margin for the content\n    horizontalAlignment: 'Center',\n    offset: {\n      x: 0.5,\n      y: 0.2\n    }\n  }, {\n    content: 'New Production Control',\n    // Sets the margin for the content\n    horizontalAlignment: 'Center',\n    offset: {\n      x: 0.5,\n      y: 0.7\n    }\n  }],\n  shape: {\n    type: 'Native',\n    content: \"<g id=\\\"production_control\\\" data-name=\\\"Layer 1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 83.33 65.36\\\">\" + \"<defs><style>.production_control-1,.production_control-2{fill:#d2e5b3;}.production_control-2{stroke:#fff;stroke-miterlimit:10;stroke-width:0.9px;}</style></defs>\" + \"<title>production-control</title>\" + \"<rect class=\\\"production_control-1\\\" x=\\\"6.25\\\" y=\\\"5.7\\\" width=\\\"72\\\" height=\\\"54\\\" rx=\\\"1.13\\\" ry=\\\"1.13\\\"/>\" + \"<line class=\\\"production_control-2\\\" x1=\\\"6.25\\\" y1=\\\"27.3\\\" x2=\\\"78.25\\\" y2=\\\"27.3\\\"/></g>\",\n    shape: 'Production\\ncontrol' //scale: 'Meet'\n\n  },\n  //constraints: NodeConstraints.Default | NodeConstraints.Shadow,\n  style: {\n    fill: 'none',\n    ...style,\n    strokeWidth: 0\n  }\n};\nlet connector = {\n  // Name of the connector\n  id: \"connector\",\n  type: 'Bezier',\n  style: {\n    strokeColor: '#6BA5D7',\n    fill: '#6BA5D7',\n    strokeWidth: 2\n  },\n  targetDecorator: {\n    style: {\n      fill: '#6BA5D7',\n      strokeColor: '#6BA5D7',\n      strokeDashArray: '0'\n    }\n  },\n  // ID of the source and target nodes\n  sourceID: \"\",\n  targetID: \"\",\n  // Set Source Padding value\n  sourcePadding: 20,\n  // Set Target Padding value\n  targetPadding: 20\n};\nlet stright_connector = {\n  id: \"stright_connector\",\n  // Defines the segment type of the connector\n  segments: [{\n    type: 'Straight',\n    // Defines the point of the segment\n    point: {\n      x: 100,\n      y: 150\n    }\n  }, {\n    type: 'Straight',\n    // Defines the point of the segment\n    point: {\n      x: 100,\n      y: 150\n    }\n  }],\n  annotations: [{\n    // Sets the text to be displayed\n    content: 'Annotation'\n  }],\n  style: {\n    strokeColor: '#6BA5D7',\n    fill: '#6BA5D7',\n    strokeWidth: 2\n  },\n  targetDecorator: {\n    style: {\n      fill: '#6BA5D7',\n      strokeColor: '#6BA5D7'\n    }\n  },\n  type: 'Straight',\n  sourcePoint: {\n    x: 100,\n    y: 100\n  },\n  targetPoint: {\n    x: 200,\n    y: 200\n  }\n};\nlet port = {\n  style: {\n    strokeColor: '#366F8C',\n    fill: '#366F8C'\n  }\n};\nlet connectors = [];\nlet diagram = [];\n\nfunction clone(item) {\n  return JSON.parse(JSON.stringify(item));\n}\n\nlet shape = {\n  type: \"HTML\"\n};\nlet constraints = NodeConstraints.Default & ~NodeConstraints.Resize & ~NodeConstraints.Rotate;\n\nclass DiagramViewBox extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    diagram = [];\n    connectors = [];\n    let yPosition = 100;\n    let obj_connector = clone(connector);\n    let obj = clone(customer);\n    obj = clone(inventory);\n    obj.annotations[0].content = 'Стальные листы 3 дня';\n    obj.id += \"_3\";\n    obj.offsetX = 100;\n    obj.offsetY = yPosition;\n    obj.height = 0;\n    obj_connector.targetID = obj.id;\n    diagram.push(obj);\n    obj_connector = clone(connector);\n    obj_connector.id += \"_3\";\n    obj_connector.sourceID = obj.id;\n    obj_connector.sourcePadding = 40;\n    obj_connector.style.strokeDashArray = '0';\n    obj = clone(process);\n    obj.annotations[0].content = 'Штамповка';\n    obj.annotations[1].content = '15';\n    obj.id += \"_4\";\n    obj.offsetX = 280;\n    obj.offsetY = yPosition;\n    obj_connector.targetID = obj.id;\n    connectors.push(obj_connector);\n    diagram.push(obj);\n    obj_connector = clone(connector);\n    obj_connector.id += \"_4\";\n    obj_connector.sourceID = obj.id;\n    obj_connector.sourcePadding = 5;\n    obj_connector.targetPadding = 0;\n    obj_connector.style.strokeDashArray = '2,2';\n    obj = clone(inventory);\n    obj.annotations[0].content = 'Левых: 4600\\nПравых: 2400';\n    obj.id += \"_5\";\n    obj.offsetX = 400;\n    obj.offsetY = yPosition;\n    obj_connector.targetID = obj.id;\n    connectors.push(obj_connector);\n    diagram.push(obj);\n    obj_connector = clone(connector);\n    obj_connector.id += \"_5\";\n    obj_connector.sourceID = obj.id;\n    obj_connector.sourcePadding = 5;\n    obj_connector.targetPadding = 0;\n    obj_connector.style.strokeDashArray = '2,2';\n    obj = clone(process);\n    obj.annotations[0].content = 'Сварка';\n    obj.annotations[1].content = '10';\n    obj.id += \"_6\";\n    obj.offsetX = 520;\n    obj.offsetY = yPosition;\n    obj_connector.targetID = obj.id;\n    connectors.push(obj_connector);\n    diagram.push(obj);\n    obj_connector = clone(connector);\n    obj_connector.id += \"_6\";\n    obj_connector.sourceID = obj.id;\n    obj_connector.sourcePadding = 5;\n    obj_connector.targetPadding = 0;\n    obj_connector.style.strokeDashArray = '2,2';\n    obj = clone(inventory);\n    obj.annotations[0].content = 'Левых: 1500\\nПравых: 600';\n    obj.id += \"_7\";\n    obj.offsetX = 650;\n    obj.offsetY = yPosition;\n    obj_connector.targetID = obj.id;\n    connectors.push(obj_connector);\n    diagram.push(obj);\n    obj_connector = clone(connector);\n    obj_connector.id += \"_7\";\n    obj_connector.sourceID = obj.id;\n    obj_connector.sourcePadding = 5;\n    obj_connector.targetPadding = 0;\n    obj_connector.style.strokeDashArray = '2,2';\n    obj = clone(process);\n    obj.annotations[0].content = 'Шлифовка';\n    obj.annotations[1].content = '10';\n    obj.id += \"_8\";\n    obj.offsetX = 780;\n    obj.offsetY = yPosition;\n    obj_connector.targetID = obj.id;\n    connectors.push(obj_connector);\n    diagram.push(obj);\n    obj_connector = clone(connector);\n    obj_connector.id += \"_8\";\n    obj_connector.sourceID = obj.id;\n    obj_connector.sourcePadding = 5;\n    obj_connector.targetPadding = 0;\n    obj_connector.style.strokeDashArray = '2,2';\n    obj = clone(inventory);\n    obj.annotations[0].content = 'Левых: 5600\\nПравых: 850';\n    obj.id += \"_9\";\n    obj.offsetX = 900;\n    obj.offsetY = yPosition;\n    obj_connector.targetID = obj.id;\n    connectors.push(obj_connector);\n    diagram.push(obj);\n    obj_connector = clone(connector);\n    obj_connector.id += \"_10\";\n    obj_connector.sourceID = obj.id;\n    obj_connector.sourcePadding = 5;\n    obj_connector.targetPadding = 0;\n    obj_connector.style.strokeDashArray = '2,2';\n    obj = clone(process);\n    obj.annotations[0].content = 'Покраска';\n    obj.annotations[1].content = '20';\n    obj.id += \"_11\";\n    obj.offsetX = 1030;\n    obj.offsetY = yPosition;\n    obj_connector.targetID = obj.id;\n    connectors.push(obj_connector);\n    diagram.push(obj);\n    obj_connector = clone(connector);\n    obj_connector.id += \"_11\";\n    obj_connector.sourceID = obj.id;\n    obj_connector.sourcePadding = 5;\n    obj_connector.targetPadding = 0;\n    obj_connector.style.strokeDashArray = '2,2';\n    obj = clone(inventory);\n    obj.annotations[0].content = 'Левых: 1440\\nПравых: 2700';\n    obj.id += \"_12\";\n    obj.offsetX = 1150;\n    obj.offsetY = yPosition;\n    obj_connector.targetID = obj.id;\n    connectors.push(obj_connector);\n    diagram.push(obj);\n    obj_connector = clone(connector);\n    obj_connector.id += \"_12\";\n    obj_connector.sourceID = obj.id;\n    obj_connector.sourcePadding = 5;\n    obj_connector.targetPadding = 0;\n    obj_connector.style.strokeDashArray = '2,2';\n    obj = clone(process);\n    obj.annotations[0].content = 'Отгрузка';\n    obj.annotations[1].content = '5';\n    obj.id += \"_13\";\n    obj.offsetX = 1300;\n    obj.offsetY = yPosition;\n    obj_connector.targetID = obj.id;\n    connectors.push(obj_connector);\n    diagram.push(obj);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        //display:'flex',\n        width: '100%',\n        height: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(Diagram, {\n        diagram: diagram,\n        connectors: connectors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default DiagramViewBox;","map":{"version":3,"sources":["/Users/sergeismogliuk/Documents/Project/Project_node/Diplom/react-diplom/react-diplom/src/components/Diagrams/DiagramViewBox.js"],"names":["React","Diagram","SymbolPalette","PortVisibility","NodeConstraints","style","strokeColor","strokeDashArray","strokeWidth","customer","id","offsetX","offsetY","width","height","shape","type","content","fill","process","annotations","offset","x","y","external_shipment","margin","top","horizontalAlignment","verticalAlignment","inventory","production_control","connector","targetDecorator","sourceID","targetID","sourcePadding","targetPadding","stright_connector","segments","point","sourcePoint","targetPoint","port","connectors","diagram","clone","item","JSON","parse","stringify","constraints","Default","Resize","Rotate","DiagramViewBox","PureComponent","constructor","props","state","yPosition","obj_connector","obj","push","render"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport Diagram from './Diagram'\nimport SymbolPalette from './SymbolPalette'\n\nimport {PortVisibility,NodeConstraints\n} from \"@syncfusion/ej2-react-diagrams\";\n\n\n\nlet style =  { strokeColor: \"red\", strokeDashArray: \"3,3\", strokeWidth: 2 }\n\nlet customer = {\n  id:'Customer',\n  // Position of the node\n  offsetX: 500,\n  offsetY: 250,\n  // Size of the node\n  width: 100,\n  height: 70,\n  shape: { \n    type: 'Native',\n    content: \"<g id=\\\"Layer_1\\\" data-name=\\\"Layer 1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 84.96 67.16\\\">\"+\n    \"<defs><style>.cls-1{fill:#fcd1a5;}</style></defs>\"+\n    \"<title>customer-supplier</title>\"+\n    \"'<path class=\\\"cls-1\\\" d=\\\"M6.51,23.71A2.31,2.31,0,0,1,7.46,22L29.33,7c0.54-.36.94-0.13,0.94,0.49v14c0,0.63.4,0.86,0.94,0.49L53.09,7C53.63,6.65,54,6.88,54,7.51v14c0,0.63.4,0.86,0.95,0.49L77.57,7c0.54-.36.94-0.13,0.94,0.49V59.26a1.11,1.11,0,0,1-1.12,1.13H7.64a1.11,1.11,0,0,1-1.12-1.12V23.71Z\\\"/></g>\",\n    shape: 'Customer',\n    //scale: 'Meet'\n  },\n  //constraints: NodeConstraints.Default | NodeConstraints.Shadow,\n  style: {\n    fill: 'none',\n    ...style,\n    strokeWidth: 0,\n  },\n};\n\n\nlet process = {\n    id: 'Process',\n    // Position of the node\n    offsetX: 250,\n    offsetY: 250,\n    // Size of the node\n    width: 100,\n    height: 100,\n    annotations: [\n      { content: 'New \\n Process' },\n      { content: '0', offset:{\n          x: 0.5,\n          y:0.88\n      },\n    }],\n    shape: { \n      type: 'Native',\n      content: \"<g id=\\\"Layer_1\\\" data-name=\\\"Layer 1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 88.01 69.16\\\">\"+\n      \"<defs><style>.cls-1{fill:#fcd1a5;}.cls-2,.cls-3{fill:none;stroke-miterlimit:10;stroke-width:0.9px;}.cls-2{stroke:#fff;}.cls-3{stroke:#3d4752;}</style></defs>\"+\n      \"<title>dedicated-process</title>\"+\n      \"<rect class=\\\"cls-1\\\" x=\\\"6.48\\\" y=\\\"7.4\\\" width=\\\"72\\\" height=\\\"54\\\" rx=\\\"1.13\\\" ry=\\\"1.13\\\"/>\"+\n      \"<line class=\\\"cls-2\\\" x1=\\\"6.48\\\" y1=\\\"25.4\\\" x2=\\\"78.48\\\" y2=\\\"25.4\\\"/>\"+\n      \"<path class=\\\"cls-1\\\" d=\\\"M17.73,54.74A3.87,3.87,0,0,1,14,59a4.14,4.14,0,0,1-4-4V54.83\\\"/>\"+\n      \"<path class=\\\"cls-3\\\" d=\\\"M17.73,54.74A3.87,3.87,0,0,1,14,59a4.14,4.14,0,0,1-4-4V54.83\\\"/>\"+\n      \"<path class=\\\"cls-1\\\" d=\\\"M11.43,55.37A2.33,2.33,0,0,1,13.77,53a2.5,2.5,0,0,1,2.65,2.2,2.27,2.27,0,0,1-2.29,2.39A2.55,2.55,0,0,1,11.43,55.37Z\\\"/>\"+\n      \"<path class=\\\"cls-3\\\" d=\\\"M11.43,55.37A2.33,2.33,0,0,1,13.77,53a2.5,2.5,0,0,1,2.65,2.2,2.27,2.27,0,0,1-2.29,2.39A2.55,2.55,0,0,1,11.43,55.37Z\\\"/></g>\",\n      shape: 'Process',\n      //scale: 'Meet'\n    },\n    //constraints: NodeConstraints.Default | NodeConstraints.Shadow,\n    style: {\n      fill: 'none',\n      ...style,\n      strokeWidth: 0,\n    },\n  };\n\nlet external_shipment = {\n    id: 'External_Shipment',\n    // Position of the node\n    offsetX: 250,\n    offsetY: 250,\n    // Size of the node\n    width: 100,\n    height: 50,\n       // Sets the annotation for the node\n    /*annotations: [{\n      // Sets the horizontal alignment as left\n      // Sets the vertical alignment as Center\n      offset: {\n        x: 0.3,\n        y: 0.4\n      }\n    }],*/\n   // Sets the annotation for the connector\n    annotations: [{\n      content: 'New External shipment',\n      // Sets the margin for the content\n      margin: {\n          top: 5\n      },\n      horizontalAlignment: 'Center',\n      verticalAlignment: 'Top',\n      offset: {\n          x: 0.5,\n          y: 1\n      }\n    }],\n    shape: { \n      type: 'Native',\n      content: \"<g id=\\\"Layer_1\\\" data-name=\\\"Layer 1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 86.15 46.95\\\"><defs>\"+\n      \"<style>.external_shipment-1{fill:#abddf3;}.external_shipment-2{fill:none;stroke:#fff;stroke-miterlimit:10;stroke-width:0.9px;}.external_shipment-3{fill:#3d4752;}</style></defs>\"+\n      \"<title>external-shipment</title>\"+\n      \"<rect class=\\\"external_shipment-1\\\" x=\\\"1.76\\\" y=\\\"1.95\\\" width=\\\"47.21\\\" height=\\\"37.49\\\" rx=\\\"1.13\\\" ry=\\\"1.13\\\"/>\"+\n      \"<rect class=\\\"external_shipment-2\\\" x=\\\"1.76\\\" y=\\\"1.95\\\" width=\\\"47.21\\\" height=\\\"37.49\\\" rx=\\\"1.13\\\" ry=\\\"1.13\\\"/>\"+\n      \"<path class=\\\"external_shipment-1\\\" d=\\\"M49,39.44,55.81,13.2h9a1.91,1.91,0,0,1,1.58,1l4.09,9.18a0.68,0.68,0,0,1-.67,1H56.93a1.11,1.11,0,0,1-1.12-1.12V13.2M49,39.44H81.64a1.11,1.11,0,0,0,1.13-1.12V25.58a1.11,1.11,0,0,0-1.12-1.12H77.18a1.92,1.92,0,0,1-1.62-1L69.71,10.5a1.92,1.92,0,0,0-1.62-1h-18A1.14,1.14,0,0,0,49,10.59V39.44\\\"/>\"+\n      \"<path class=\\\"external_shipment-2\\\" d=\\\"M49,39.44,55.81,13.2h9a1.91,1.91,0,0,1,1.58,1l4.09,9.18a0.68,0.68,0,0,1-.67,1H56.93a1.11,1.11,0,0,1-1.12-1.12V13.2M49,39.44H81.64a1.11,1.11,0,0,0,1.13-1.12V25.58a1.11,1.11,0,0,0-1.12-1.12H77.18a1.92,1.92,0,0,1-1.62-1L69.71,10.5a1.92,1.92,0,0,0-1.62-1h-18A1.14,1.14,0,0,0,49,10.59V39.44\\\"/>\"+\n      \"<path class=\\\"external_shipment-3\\\" d=\\\"M24,39.44C24,43.58,21,47,17.33,47s-6.84-3.37-6.84-7.51S13.6,32,17.33,32,24,35.3,24,39.44Z/>\"+\n      \"<path class=\\\"external_shipment-2\\\" d=\\\"M24,39.44C24,43.58,21,47,17.33,47s-6.84-3.37-6.84-7.51S13.6,32,17.33,32,24,35.3,24,39.44Z/>\"+\n      \"<path class=\\\"external_shipment-3\\\" d=\\\"M69.22,39.44c0,4.14-3,7.51-6.71,7.51s-6.71-3.37-6.71-7.51,3-7.47,6.71-7.47S69.22,35.3,69.22,39.44Z\\\"/>\"+\n      \"<path class=\\\"external_shipment-3\\\" d=\\\"M69.22,39.44c0,4.14-3,7.51-6.71,7.51s-6.71-3.37-6.71-7.51,3-7.47,6.71-7.47S69.22,35.3,69.22,39.44Z\\\"/></g>\",\n      shape: 'External\\nShipment',\n      //scale: 'Meet'\n    },\n    //constraints: NodeConstraints.Default | NodeConstraints.Shadow,\n    style: {\n      fill: 'none',\n      ...style,\n      strokeWidth: 0,\n    },\n  };\n\nlet inventory = {\n    id: 'Inventory',\n    // Position of the node\n    offsetX: 250,\n    offsetY: 250,\n    // Size of the node\n   // Sets the annotation for the node\n    width: 50,\n    height: 50,\n    annotations: [{\n      content: 'New External shipment',\n      // Sets the margin for the content\n      margin: {\n          top: 5\n      },\n      horizontalAlignment: 'Center',\n      verticalAlignment: 'Top',\n      offset: {\n          x: 0.5,\n          y: 1\n      }\n    }],\n    shape: { \n      type: 'Native',\n      content: \"<g id=\\\"Layer_1\\\" data-name=\\\"Layer 1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 65.87 62.85\\\"><defs>\"+\n      \"<style>.Inventory-1{fill:#abddf3;}</style></defs>\"+\n      \"<title>inventory-customer-supplier</title>\"+\n      \"<path class=\\\"Inventory-1\\\" d=\\\"M36.23,6.39a0.56,0.56,0,0,0-1.08,0L7,58.41a0.61,0.61,0,0,0,.58,1H63.82a0.61,0.61,0,0,0,.58-1Z\\\"/></g>\",\n      shape: 'Inventory',\n      //scale: 'Meet'\n    },\n    //constraints: NodeConstraints.Default | NodeConstraints.Shadow,\n    style: {\n      fill: 'none',\n      ...style,\n      strokeWidth: 0,\n    },\n  };\n\nlet production_control = {\n    id: 'Production_control',\n    // Position of the node\n    offsetX: 250,\n    offsetY: 250,\n    // Size of the node\n   // Sets the annotation for the node\n    width: 300,\n    height: 100,\n    annotations: [{\n      content: 'New Production Control',\n      // Sets the margin for the content\n      horizontalAlignment: 'Center',\n      offset: {\n          x: 0.5,\n          y: 0.2\n      }\n    },\n    {\n      content: 'New Production Control',\n      // Sets the margin for the content\n      horizontalAlignment: 'Center',\n      offset: {\n          x: 0.5,\n          y: 0.7\n      }\n    }],\n    shape: { \n      type: 'Native',\n      content: \"<g id=\\\"production_control\\\" data-name=\\\"Layer 1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 83.33 65.36\\\">\"+\n      \"<defs><style>.production_control-1,.production_control-2{fill:#d2e5b3;}.production_control-2{stroke:#fff;stroke-miterlimit:10;stroke-width:0.9px;}</style></defs>\"+\n      \"<title>production-control</title>\"+\n      \"<rect class=\\\"production_control-1\\\" x=\\\"6.25\\\" y=\\\"5.7\\\" width=\\\"72\\\" height=\\\"54\\\" rx=\\\"1.13\\\" ry=\\\"1.13\\\"/>\"+\n      \"<line class=\\\"production_control-2\\\" x1=\\\"6.25\\\" y1=\\\"27.3\\\" x2=\\\"78.25\\\" y2=\\\"27.3\\\"/></g>\",\n      shape: 'Production\\ncontrol',\n      //scale: 'Meet'\n    },\n    //constraints: NodeConstraints.Default | NodeConstraints.Shadow,\n    style: {\n      fill: 'none',\n      ...style,\n      strokeWidth: 0,\n    },\n  };\n\n\nlet connector = {\n  // Name of the connector\n  id: \"connector\",\n  type: 'Bezier',\n  style: {\n      strokeColor: '#6BA5D7',\n      fill: '#6BA5D7',\n      strokeWidth: 2\n  },\n  targetDecorator: {\n      style: {\n          fill: '#6BA5D7',\n          strokeColor: '#6BA5D7',\n          strokeDashArray: '0'\n      }\n  },\n  // ID of the source and target nodes\n  sourceID: \"\",\n  targetID: \"\",\n  // Set Source Padding value\n  sourcePadding:20,\n  // Set Target Padding value\n  targetPadding:20\n  }\n\n  let stright_connector = {\n  id: \"stright_connector\",\n  // Defines the segment type of the connector\n  segments: [{\n      type: 'Straight',\n      // Defines the point of the segment\n      point: {\n          x: 100,\n          y: 150\n      }\n  },\n  {\n    type: 'Straight',\n    // Defines the point of the segment\n    point: {\n        x: 100,\n        y: 150\n    }\n  }],\n  annotations: [{\n    // Sets the text to be displayed\n    content: 'Annotation',\n}],\n  style: {\n      strokeColor: '#6BA5D7',\n      fill: '#6BA5D7',\n      strokeWidth: 2\n  },\n  targetDecorator: {\n      style: {\n          fill: '#6BA5D7',\n          strokeColor: '#6BA5D7'\n      }\n  },\n  type: 'Straight',\n  sourcePoint: {\n      x: 100,\n      y: 100\n  },\n  targetPoint: {\n      x: 200,\n      y: 200\n  }\n}\n\n\nlet port  = {\n  style: {\n      strokeColor: '#366F8C',\n      fill: '#366F8C'\n  }\n  }\n \n\n\nlet connectors = []\nlet diagram = []\n\n\nfunction clone(item)\n{\n  return JSON.parse(JSON.stringify(item))\n}\n\nlet shape = { type: \"HTML\" };\nlet constraints = NodeConstraints.Default & ~NodeConstraints.Resize & ~NodeConstraints.Rotate;\n\n\n\n\nclass DiagramViewBox extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n\n        diagram = []\n        connectors = []\n\n        let yPosition = 100\n\n        let obj_connector = clone(connector);\n\n\n        let obj = clone(customer);\n\n        obj = clone(inventory);\n        obj.annotations[0].content = 'Стальные листы 3 дня'\n        obj.id += \"_3\"\n        obj.offsetX = 100\n        obj.offsetY = yPosition\n        obj.height = 0\n        obj_connector.targetID = obj.id;\n\n        diagram.push(obj)\n\n        obj_connector = clone(connector);\n        obj_connector.id += \"_3\"\n        obj_connector.sourceID = obj.id;\n        obj_connector.sourcePadding = 40\n        obj_connector.style.strokeDashArray = '0'\n        obj = clone(process);\n        obj.annotations[0].content = 'Штамповка'\n        obj.annotations[1].content = '15'\n        obj.id += \"_4\"\n        obj.offsetX = 280\n        obj.offsetY = yPosition\n        obj_connector.targetID = obj.id;\n\n        connectors.push(obj_connector)\n        diagram.push(obj)\n\n        obj_connector = clone(connector);\n        obj_connector.id += \"_4\"\n        obj_connector.sourceID = obj.id;\n        obj_connector.sourcePadding = 5\n        obj_connector.targetPadding = 0\n        obj_connector.style.strokeDashArray = '2,2'\n        obj = clone(inventory);\n        obj.annotations[0].content = 'Левых: 4600\\nПравых: 2400'\n        obj.id += \"_5\"\n        obj.offsetX = 400\n        obj.offsetY = yPosition\n        obj_connector.targetID = obj.id;\n\n        connectors.push(obj_connector)\n        diagram.push(obj)\n\n        obj_connector = clone(connector);\n        obj_connector.id += \"_5\"\n        obj_connector.sourceID = obj.id;\n        obj_connector.sourcePadding = 5\n        obj_connector.targetPadding = 0\n        obj_connector.style.strokeDashArray = '2,2'\n        obj = clone(process);\n        obj.annotations[0].content = 'Сварка'\n        obj.annotations[1].content = '10'\n        obj.id += \"_6\"\n        obj.offsetX = 520\n        obj.offsetY = yPosition\n        obj_connector.targetID = obj.id;\n        \n        connectors.push(obj_connector)\n        diagram.push(obj)\n\n        obj_connector = clone(connector);\n        obj_connector.id += \"_6\"\n        obj_connector.sourceID = obj.id;\n        obj_connector.sourcePadding = 5\n        obj_connector.targetPadding = 0\n        obj_connector.style.strokeDashArray = '2,2'\n        obj = clone(inventory);\n        obj.annotations[0].content = 'Левых: 1500\\nПравых: 600'\n        obj.id += \"_7\"\n        obj.offsetX = 650\n        obj.offsetY = yPosition\n        obj_connector.targetID = obj.id;\n\n        connectors.push(obj_connector)\n        diagram.push(obj)\n\n        obj_connector = clone(connector);\n        obj_connector.id += \"_7\"\n        obj_connector.sourceID = obj.id;\n        obj_connector.sourcePadding = 5\n        obj_connector.targetPadding = 0\n        obj_connector.style.strokeDashArray = '2,2'\n        obj = clone(process);\n        obj.annotations[0].content = 'Шлифовка'\n        obj.annotations[1].content = '10'\n        obj.id += \"_8\"\n        obj.offsetX = 780\n        obj.offsetY = yPosition\n        obj_connector.targetID = obj.id;\n\n        connectors.push(obj_connector)\n        diagram.push(obj)\n\n        obj_connector = clone(connector);\n        obj_connector.id += \"_8\"\n        obj_connector.sourceID = obj.id;\n        obj_connector.sourcePadding = 5\n        obj_connector.targetPadding = 0\n        obj_connector.style.strokeDashArray = '2,2'\n        obj = clone(inventory);\n        obj.annotations[0].content = 'Левых: 5600\\nПравых: 850'\n        obj.id += \"_9\"\n        obj.offsetX = 900\n        obj.offsetY = yPosition\n        obj_connector.targetID = obj.id;\n\n        connectors.push(obj_connector)\n        diagram.push(obj)\n\n\n        obj_connector = clone(connector);\n        obj_connector.id += \"_10\"\n        obj_connector.sourceID = obj.id;\n        obj_connector.sourcePadding = 5\n        obj_connector.targetPadding = 0\n        obj_connector.style.strokeDashArray = '2,2'\n        obj = clone(process);\n        obj.annotations[0].content = 'Покраска'\n        obj.annotations[1].content = '20'\n        obj.id += \"_11\"\n        obj.offsetX = 1030\n        obj.offsetY = yPosition\n        obj_connector.targetID = obj.id;\n\n        connectors.push(obj_connector)\n        diagram.push(obj)\n\n\n        obj_connector = clone(connector);\n        obj_connector.id += \"_11\"\n        obj_connector.sourceID = obj.id;\n        obj_connector.sourcePadding = 5\n        obj_connector.targetPadding = 0\n        obj_connector.style.strokeDashArray = '2,2'\n        obj = clone(inventory);\n        obj.annotations[0].content = 'Левых: 1440\\nПравых: 2700'\n        obj.id += \"_12\"\n        obj.offsetX = 1150\n        obj.offsetY = yPosition\n        obj_connector.targetID = obj.id;\n\n        connectors.push(obj_connector)\n        diagram.push(obj)\n\n        obj_connector = clone(connector);\n        obj_connector.id += \"_12\"\n        obj_connector.sourceID = obj.id;\n        obj_connector.sourcePadding = 5\n        obj_connector.targetPadding = 0\n        obj_connector.style.strokeDashArray = '2,2'\n        obj = clone(process);\n        obj.annotations[0].content = 'Отгрузка'\n        obj.annotations[1].content = '5'\n        obj.id += \"_13\"\n        obj.offsetX = 1300\n        obj.offsetY = yPosition\n        obj_connector.targetID = obj.id;\n\n        connectors.push(obj_connector)\n        diagram.push(obj)\n       \n    \n\n\n      }\n\n   \n      render() {\n\n        return (\n            <div style={{\n                //display:'flex',\n                width:'100%',\n                height:'100%'\n                }}>\n            <Diagram \n              diagram={diagram}\n              connectors={connectors}\n            />\n            {/*<SymbolPalette       \n                myStyle={{\n                    flex: '1 1 200px'\n                }}\n                customer={customer}\n                process={process}\n                external_shipment={external_shipment}\n                inventory={inventory}\n                production_control={production_control}\n              />*/}\n\n            </div>\n        )\n      }\n}\n\n        \n\nexport default DiagramViewBox;"]},"metadata":{},"sourceType":"module"}