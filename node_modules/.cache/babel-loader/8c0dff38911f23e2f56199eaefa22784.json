{"ast":null,"code":"var _jsxFileName = \"/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst URL = 'ws://192.168.0.2:5001/ws';\n\nconst Chat = () => {\n  _s();\n\n  const [user, setUser] = useState('Tarzan');\n  const [message, setMessage] = useState([]);\n  const [messages, setMessages] = useState([]); //const [socket, setSocket] = useState<WebSocket>(null);\n\n  const submitMessage = (usr, msg) => {\n    const message = {\n      user: usr,\n      message: msg\n    };\n    socket.current.send(JSON.stringify(message));\n    setMessages([message, ...messages]);\n  };\n\n  const socket = useRef(null);\n  /*\tuseEffect(() => {\n     soket.onopen = () => {\n       console.log('WebSocket Connected');\n     }\n      soket.onmessage = (e) => {\n          console.log('Read');\n       const message = JSON.parse(e.data);\n       setMessages([message, ...messages]);\n     }\n      return () => {\n            soket.onclose = () => {\n         console.log('WebSocket Disconnected');\n         setWs(new WebSocket(URL));\n       }\n     }\n  \t}, ); //[ws.onmessage, ws.onopen, ws.onclose, messages]\n  */\n\n  const [isPaused, setPause] = useState(false);\n  useEffect(() => {\n    if (!socket.current) {\n      console.log(\"Set socket = \", socket.current);\n      socket.current = new WebSocket(URL);\n\n      socket.current.onmessage = e => {\n        if (isPaused) return;\n        const message = JSON.parse(e.data);\n        console.log(\"e\", message);\n        setMessages([message, ...messages]);\n      };\n\n      socket.current.onerror = e => {\n        console.log(\"e\", message);\n      };\n    }\n\n    return () => {\n      if (socket.current) {\n        socket.current.close(1000, \"\");\n      }\n    };\n  }, [socket]);\n  /*\n     useEffect(() => {\n         if (!socket.current) return;\n            socket.current.onmessage = e => {\n             if (isPaused) return;\n             const message = JSON.parse(e.data);\n             console.log(\"e\", message);\n             setMessages([message, ...messages]);\n         };\n     }, [isPaused]);*/\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"user\",\n      children: [\"Name :\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"user\",\n        placeholder: \"User\",\n        value: user,\n        onChange: e => setUser(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: messages.reverse().map((message, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: message.user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 16\n        }, this), \": \", /*#__PURE__*/_jsxDEV(\"em\", {\n          children: message.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 39\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 14\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      onSubmit: e => {\n        e.preventDefault();\n        submitMessage(user, message);\n        setMessage([]);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: 'Type a message ...',\n        value: message,\n        onChange: e => setMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: 'Send'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setPause(!isPaused),\n      children: isPaused ? \"Resume\" : \"Pause\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 6\n  }, this);\n};\n\n_s(Chat, \"ZZfkzLjdZwDoVwiFkMPnI/YzspQ=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Chat.js"],"names":["React","useState","useEffect","useRef","URL","Chat","user","setUser","message","setMessage","messages","setMessages","submitMessage","usr","msg","socket","current","send","JSON","stringify","isPaused","setPause","console","log","WebSocket","onmessage","e","parse","data","onerror","close","target","value","reverse","map","index","preventDefault"],"mappings":"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","sourcesContent":["\n\nimport React, { useState, useEffect, useRef } from \"react\";\n\nconst URL = 'ws://192.168.0.2:5001/ws';\n\nconst Chat =() => {\n\tconst [user, setUser] = useState('Tarzan');\n  \tconst [message, setMessage] = useState([]);\n  \tconst [messages, setMessages] = useState([]);\n\t//const [socket, setSocket] = useState<WebSocket>(null);\n\n  \tconst submitMessage = (usr, msg) => {\n  \t\tconst message = { user: usr, message: msg };\n  \t\tsocket.current.send(JSON.stringify(message));\n  \t\tsetMessages([message, ...messages]);\n  \t}\n\n\t  const socket = useRef(null);\n\t \n\n\n  /*\tuseEffect(() => {\n\t    soket.onopen = () => {\n\t      console.log('WebSocket Connected');\n\t    }\n\n\t    soket.onmessage = (e) => {\n          console.log('Read');\n\t      const message = JSON.parse(e.data);\n\t      setMessages([message, ...messages]);\n\t    }\n\n\t    return () => {\n            soket.onclose = () => {\n\t        console.log('WebSocket Disconnected');\n\t        setWs(new WebSocket(URL));\n\t      }\n\t    }\n  \t}, ); //[ws.onmessage, ws.onopen, ws.onclose, messages]\n*/\n\n      const [isPaused, setPause] = useState(false);\n  \n      useEffect(() => {\n\t\tif (!socket.current) {\n\t\t\tconsole.log(\"Set socket = \", socket.current);\n\t\t\tsocket.current = new WebSocket(URL);\n\t\t\tsocket.current.onmessage = (e) => {\n\t\t\t\tif (isPaused) return;\n\t\t\t\tconst message = JSON.parse(e.data);\n\t\t\t\tconsole.log(\"e\", message);\n\t\t\t\tsetMessages([message, ...messages]);\n\t\t\t};\n\n\t\t\tsocket.current.onerror = (e) => {\n\t\t\t\tconsole.log(\"e\", message);\n\t\t\t};\n\t\t}\n\t\treturn () => {\n\t\t  if (socket.current) {\n\t\t\tsocket.current.close(1000, \"\");\n\t\t\t\n\t\t  }\n\t\t};\n\t  }, [socket]);\n  \n\t  /*\n      useEffect(() => {\n          if (!socket.current) return;\n  \n          socket.current.onmessage = e => {\n              if (isPaused) return;\n              const message = JSON.parse(e.data);\n              console.log(\"e\", message);\n              setMessages([message, ...messages]);\n          };\n      }, [isPaused]);*/\n\n\n  \treturn (\n\t    <div>\n\t        <label htmlFor=\"user\">\n\t          Name :\n\t          <input\n\t            type=\"text\"\n\t            id=\"user\"\n\t            placeholder=\"User\"\n\t            value={user}\n\t            onChange={e => setUser(e.target.value)}\n\t          />\n\t        </label>\n\n\t        <ul>\n\t          {messages.reverse().map((message, index) =>\n\t            <li key={index}>\n\t              <b>{message.user}</b>: <em>{message.message}</em>\n\t            </li>\n\t          )}\n\t        </ul>\n\n\t        <form\n\t          action=\"\"\n\t          onSubmit={e => {\n\t            e.preventDefault();\n\t            submitMessage(user, message);\n\t            setMessage([]);\n\t          }}\n\t        >\n\t          <input\n\t            type=\"text\"\n\t            placeholder={'Type a message ...'}\n\t            value={message}\n\t            onChange={e => setMessage(e.target.value)}\n\t          />\n\t          <input type=\"submit\" value={'Send'} />\n\t        </form>\n            <button onClick={() => setPause(!isPaused)}>\n                {isPaused ? \"Resume\" : \"Pause\"}\n            </button>\n\t    </div>\n  \t)\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}