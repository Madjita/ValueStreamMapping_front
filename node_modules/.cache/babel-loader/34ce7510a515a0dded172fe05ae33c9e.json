{"ast":null,"code":"var _jsxFileName = \"/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Card/Pages/CardOrderInDefault.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport { CardHeader, IconButton } from '@material-ui/core';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport { Divider } from '@mui/material';\nimport { IDataColorOrderInDefault } from '../../Data/DataCardOrderInDefault/IDataColorOrderInDefault';\nimport { Redirect } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar simulationEnum;\n\n(function (simulationEnum) {\n  simulationEnum[\"Start\"] = \"\\u0417\\u0430\\u043F\\u0443\\u0441\\u0442\\u0438\\u0442\\u044C \\u0441\\u0438\\u043C\\u0443\\u043B\\u044F\\u0446\\u0438\\u044E\";\n  simulationEnum[\"Stop\"] = \"\\u041E\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C \\u0441\\u0438\\u043C\\u0443\\u043B\\u044F\\u0446\\u0438\\u044E\";\n})(simulationEnum || (simulationEnum = {}));\n\nconst CardOrderInDefault = props => {\n  _s();\n\n  const [simulation, setSimulation] = useState({\n    text: simulationEnum.Start,\n    color: IDataColorOrderInDefault.NotWork,\n    work: false\n  });\n  const [redirect, setRedirect] = useState({\n    redirect: false,\n    data: new Object()\n  });\n  const {\n    Start,\n    Stop\n  } = simulationEnum;\n\n  const onSimulation = () => {\n    if (simulation.work) {\n      setSimulation({ ...simulation,\n        work: !simulation.work,\n        text: Start\n      });\n    } else {\n      setSimulation({ ...simulation,\n        work: !simulation.work,\n        text: Stop\n      });\n    }\n  };\n\n  let flag = simulation.text === simulationEnum.Stop && simulation.work;\n  useEffect(() => {// Обновляем название докуммента, используя API браузера\n  });\n\n  const openInfo = () => {\n    setRedirect({ ...redirect,\n      redirect: true,\n      data: props.data\n    });\n  };\n\n  if (redirect.redirect) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: '/card',\n        state: {\n          data: redirect.data\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      minWidth: 200,\n      color: flag ? 'white' : 'black',\n      backgroundColor: props.OrderColor\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      titleTypographyProps: {\n        variant: \"h6\"\n      },\n      action: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"settings\",\n          onClick: openInfo,\n          children: /*#__PURE__*/_jsxDEV(SettingsIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 10\n      }, this),\n      title: \"Заказ номер: \" + props.data.name,\n      subheader: /*#__PURE__*/_jsxDEV(Typography, {\n        style: {\n          color: flag ? 'white' : 'black'\n        },\n        children: \"23:24:23\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 20\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        color: simulation.work ? \"success\" : \"info\",\n        variant: simulation.work ? \"contained\" : \"outlined\",\n        onClick: onSimulation,\n        children: simulation.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CardOrderInDefault, \"uEU3vq/p2Hu1lauMLsFfiLxzYrU=\");\n\n_c = CardOrderInDefault;\nexport default CardOrderInDefault;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardOrderInDefault\");","map":{"version":3,"sources":["/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Card/Pages/CardOrderInDefault.tsx"],"names":["React","useEffect","useState","Card","CardActions","Button","Typography","CardHeader","IconButton","SettingsIcon","Divider","IDataColorOrderInDefault","Redirect","simulationEnum","CardOrderInDefault","props","simulation","setSimulation","text","Start","color","NotWork","work","redirect","setRedirect","data","Object","Stop","onSimulation","flag","openInfo","pathname","state","minWidth","backgroundColor","OrderColor","variant","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAyBC,QAAzB,QAAwC,OAAxC;AAEA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,mBAAvC;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,SAASC,OAAT,QAAwB,eAAxB;AAEA,SAAQC,wBAAR,QAAuC,4DAAvC;AAEA,SAASC,QAAT,QAAyB,cAAzB;;IAEKC,c;;WAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;GAAAA,c,KAAAA,c;;AAIL,MAAMC,kBAAkB,GAAIC,KAAD,IAAoE;AAAA;;AAE7F,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAC;AAC3CgB,IAAAA,IAAI,EAAEL,cAAc,CAACM,KADsB;AAE3CC,IAAAA,KAAK,EAAET,wBAAwB,CAACU,OAFW;AAG3CC,IAAAA,IAAI,EAAE;AAHqC,GAAD,CAA5C;AAMA,QAAM,CAACC,QAAD,EAAUC,WAAV,IAAyBtB,QAAQ,CAAC;AACtCqB,IAAAA,QAAQ,EAAE,KAD4B;AAEtCE,IAAAA,IAAI,EAAE,IAAIC,MAAJ;AAFgC,GAAD,CAAvC;AAKA,QAAM;AAACP,IAAAA,KAAD;AAAOQ,IAAAA;AAAP,MAAed,cAArB;;AAEA,QAAMe,YAAY,GAAG,MAAM;AAEzB,QAAGZ,UAAU,CAACM,IAAd,EACA;AACEL,MAAAA,aAAa,CAAC,EAAC,GAAGD,UAAJ;AAAgBM,QAAAA,IAAI,EAAC,CAACN,UAAU,CAACM,IAAjC;AAAuCJ,QAAAA,IAAI,EAAEC;AAA7C,OAAD,CAAb;AACD,KAHD,MAKA;AACEF,MAAAA,aAAa,CAAC,EAAC,GAAGD,UAAJ;AAAgBM,QAAAA,IAAI,EAAC,CAACN,UAAU,CAACM,IAAjC;AAAuCJ,QAAAA,IAAI,EAAES;AAA7C,OAAD,CAAb;AACD;AACF,GAVD;;AAYA,MAAIE,IAAI,GAAIb,UAAU,CAACE,IAAX,KAAoBL,cAAc,CAACc,IAAnC,IAA2CX,UAAU,CAACM,IAAlE;AAGArB,EAAAA,SAAS,CAAC,MAAM,CACd;AACD,GAFQ,CAAT;;AAIA,QAAM6B,QAAQ,GAAG,MAAM;AACrBN,IAAAA,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAaA,MAAAA,QAAQ,EAAE,IAAvB;AAA6BE,MAAAA,IAAI,EAAEV,KAAK,CAACU;AAAzC,KAAD,CAAX;AACD,GAFD;;AAKA,MAAGF,QAAQ,CAACA,QAAZ,EACA;AACE,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AACnBQ,QAAAA,QAAQ,EAAE,OADS;AAEnBC,QAAAA,KAAK,EAAE;AAAEP,UAAAA,IAAI,EAAEF,QAAQ,CAACE;AAAjB;AAFY;AAAd;AAAA;AAAA;AAAA;AAAA,YAAP;AAID;;AAED,sBACE,QAAC,IAAD;AAAM,IAAA,EAAE,EAAE;AAAEQ,MAAAA,QAAQ,EAAE,GAAZ;AAAgBb,MAAAA,KAAK,EAAES,IAAI,GAAG,OAAH,GAAW,OAAtC;AAAgDK,MAAAA,eAAe,EAAEnB,KAAK,CAACoB;AAAvE,KAAV;AAAA,4BACE,QAAC,UAAD;AACE,MAAA,oBAAoB,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OADxB;AAEE,MAAA,MAAM,eACL;AAAA,+BACC,QAAC,UAAD;AACA,wBAAW,UADX;AAEA,UAAA,OAAO,EAAEN,QAFT;AAAA,iCAGE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cAHH;AAWE,MAAA,KAAK,EAAE,kBAAgBf,KAAK,CAACU,IAAN,CAAWY,IAXpC;AAYE,MAAA,SAAS,eAAE,QAAC,UAAD;AAAY,QAAA,KAAK,EAAE;AAACjB,UAAAA,KAAK,EAAES,IAAI,GAAG,OAAH,GAAW;AAAvB,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAZb;AAAA;AAAA;AAAA;AAAA,YADF,eAeE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAfF,eAgBE,QAAC,WAAD;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,OAAb;AAAqB,QAAA,KAAK,EAAEb,UAAU,CAACM,IAAX,GAAkB,SAAlB,GAA4B,MAAxD;AAAgE,QAAA,OAAO,EAAEN,UAAU,CAACM,IAAX,GAAkB,WAAlB,GAA8B,UAAvG;AAAmH,QAAA,OAAO,EAAEM,YAA5H;AAAA,kBAA2IZ,UAAU,CAACE;AAAtJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CArED;;GAAMJ,kB;;KAAAA,kB;AAuEN,eAAeA,kBAAf","sourcesContent":["import React,{useEffect, useState} from 'react';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport { CardHeader, IconButton } from '@material-ui/core';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport { Divider } from '@mui/material';\n\nimport {IDataColorOrderInDefault} from '../../Data/DataCardOrderInDefault/IDataColorOrderInDefault'\nimport IDataOrder from '../../Data/IDataOrder';\nimport { Redirect } from 'react-router'\n\nenum simulationEnum{\n  Start = 'Запустить симуляцию',\n  Stop = 'Остановить симуляцию'\n}\nconst CardOrderInDefault = (props:{OrderColor: IDataColorOrderInDefault, data: IDataOrder}) => {\n\n  const [simulation, setSimulation] = useState({\n    text: simulationEnum.Start,\n    color: IDataColorOrderInDefault.NotWork,\n    work: false\n  });\n\n  const [redirect,setRedirect] = useState({\n    redirect: false,\n    data: new Object as IDataOrder\n  });\n\n  const {Start,Stop} = simulationEnum;\n\n  const onSimulation = () => {\n\n    if(simulation.work)\n    {\n      setSimulation({...simulation, work:!simulation.work, text: Start })\n    }\n    else\n    {\n      setSimulation({...simulation, work:!simulation.work, text: Stop })\n    }\n  }\n\n  let flag = (simulation.text === simulationEnum.Stop && simulation.work)\n\n\n  useEffect(() => {\n    // Обновляем название докуммента, используя API браузера\n  });\n \n  const openInfo = () => {\n    setRedirect({...redirect,redirect: true, data: props.data});\n  }\n\n\n  if(redirect.redirect)\n  {\n    return <Redirect to={{\n      pathname: '/card', \n      state: { data: redirect.data }\n    }} />;\n  }\n\n  return (\n    <Card sx={{ minWidth: 200,color: flag ? 'white':'black',  backgroundColor: props.OrderColor }}>\n      <CardHeader\n        titleTypographyProps={{ variant: \"h6\" }}\n        action={\n         <div>\n          <IconButton \n          aria-label=\"settings\"\n          onClick={openInfo}>\n            <SettingsIcon />\n          </IconButton>\n         </div>\n        }\n        title={\"Заказ номер: \"+props.data.name}\n        subheader={<Typography style={{color: flag ? 'white':'black'}}>23:24:23</Typography>}\n      />\n      <Divider/>\n      <CardActions>\n        <Button size=\"small\" color={simulation.work ? \"success\":\"info\"} variant={simulation.work ? \"contained\":\"outlined\"} onClick={onSimulation}>{simulation.text}</Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nexport default CardOrderInDefault;"]},"metadata":{},"sourceType":"module"}