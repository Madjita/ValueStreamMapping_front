{"ast":null,"code":"var _jsxFileName = \"/Users/sergeismogliuk/Documents/Project/Project_node/Diplom/react-diplom/react-diplom/src/components/Container/MidleContainer/MidleContent/MidleContent.js\";\nimport React from \"react\";\nimport MidleContentStyle from \"./MidleContentStyle\";\nimport DiagramViewBox from \"../../../Diagrams/DiagramViewBox\"; //import  {ListActiveConxtext} from \"../../../../ListActiveContextProvider\"\n\nimport Triangle from \"../../../SVG/Triangle/Triangle\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MidleContent extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this._showCard = () => {\n      if (this.context.ListActive.length === 0) {\n        return /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"MidleContent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 20\n        }, this);\n      }\n\n      let object = this.context.ListActive.find(item => item.isSelected === true);\n      console.log(\"this._showCard(context)\", this.context);\n      return /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: object.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 18\n      }, this);\n    };\n\n    this.getCoords = elem => {\n      let box = elem.getBoundingClientRect();\n      console.log(this.MidleContentStyle.pageYOffset);\n      return {\n        top: Math.round(box.top),\n        //pageYOffset\n        left: Math.round(box.left) //pageXOffset\n\n      };\n    };\n\n    this.handleOnWhell = e => {\n      //let count = (e.deltaY/17)\n      let target = this.MidleContentStyle; //e.target.closest('....'); // Здесь что-то уникальное, что может указать на род. блок\n\n      let targetCoords = target.getBoundingClientRect();\n      let xCoord = e.clientX - targetCoords.left;\n      let yCoord = e.clientY - targetCoords.top;\n      const wheel = e.deltaY < 0 ? 1 : -1;\n      let scale = this.state.scale; // Compute zoom factor.\n\n      let zoom; // = Math.exp(wheel * this.state.scale);\n\n      console.log(\"wheel = \", wheel);\n\n      if (wheel > 0) {\n        zoom = scale - 0.05;\n\n        if (zoom < 0) {\n          zoom = 0;\n        }\n      } else {\n        zoom = scale + 0.05;\n      }\n\n      this.setState({\n        scale: zoom\n      }); //,x: e.screenX, y: e.screenY\n\n      /* switch (e.deltaY > 0) {\n           case true:\n             console.log('positive',e.deltaY,count);\n             let plus = this.state.scale+0.05\n              this.setState({scale: zoom,originX: -originX, originY: -originY }) //,x: xCoord, y: yCoord\n             break;\n           default:\n             console.log('negative',e.deltaY,count);\n             count *=(-1)\n              let minus = this.state.scale-0.05\n             if(minus < 0 )\n             {\n               minus = 0\n             }\n             \n         }*/\n    };\n\n    this.handleOnMouseMove = e => {\n      let position = this.getTransformedPoint(e.clientX, e.clientY);\n      this.setState({\n        mouseX: position.x,\n        mouseY: position.y\n      });\n    };\n\n    this.getTransformedPoint = (x, y) => {\n      let target = this.MidleContentStyle;\n      let targetCoords = target.getBoundingClientRect();\n      const transformedX = x - targetCoords.left;\n      const transformedY = y - targetCoords.top;\n      return {\n        x: transformedX,\n        y: transformedY\n      };\n    };\n\n    this.handleOnClick = e => {\n      let target = this.MidleContentStyle; //e.target.closest('....'); // Здесь что-то уникальное, что может указать на род. блок\n\n      let targetCoords = target.getBoundingClientRect();\n      let xCoord = e.clientX; //- targetCoords.left;\n\n      let yCoord = e.clientY; //- targetCoords.top;\n\n      let newX;\n      let newY; //ev.layerX * currentzoom / 1 - originX;\n\n      console.log(targetCoords);\n      newX = (e.clientX - targetCoords.left) / this.state.scale;\n      newY = (e.clientY - targetCoords.top) / this.state.scale;\n      /*if(this.state.scale === 1)\n      {\n        newX = e.clientX- targetCoords.left;\n        newY = e.clientY - targetCoords.top;\n      }\n      else\n      {\n        newX = e.clientX - targetCoords.left;\n        newY = e.clientY - targetCoords.top;\n      }*/\n\n      let OrX = (targetCoords.width / 2 - newX) / this.state.scale;\n      let OrY = (targetCoords.height / 2 - newY) / this.state.scale;\n      console.log(OrX, OrY);\n      this.setState({\n        x: newX,\n        y: newY,\n        originX: targetCoords.width / 2,\n        originY: targetCoords.height / 2\n      }); //\n    };\n\n    this.handleMouseDown = e => {};\n\n    this.state = {\n      error: null,\n      isLoaded: false,\n      scale: 1,\n      x: 0,\n      y: 0,\n      originX: 0,\n      originY: 0,\n      mouseX: 0,\n      mouseY: 0\n    };\n  }\n\n  //translate(\"+this.state.x+\"px,\"+this.state.y+\"px)\n  //transformOrigin:this.state.xScale+\"px \"+this.state.yScale+\"px\"\n  //transformOrigin:this.state.originX+\"px \"+this.state.originY+\"px\",\n  render() {\n    return /*#__PURE__*/_jsxDEV(MidleContentStyle, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"100%\",\n          height: \"100%\",\n          position: \"relative\"\n        },\n        ref: MidleContentStyle => {\n          this.MidleContentStyle = MidleContentStyle;\n        },\n        onMouseMove: this.handleOnMouseMove,\n        onClick: this.handleOnClick,\n        onWheel: this.handleOnWhell,\n        onMouseDown: this.handleMouseDown,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"100%\",\n            height: \"100%\",\n            position: \"absolute\",\n            transform: \"scale(\" + this.state.scale + \")\",\n            boxShadow: \"rgba(0,0,0,0.2) 0px 3px 5px -1px,rgba(0,0,0,0.14) 0px 6px 10px 0px,rgba(0,0,0,0.12) 0px 1px 14px 0px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Triangle, {\n            left: 0,\n            top: 0,\n            width: 100,\n            height: 100,\n            min: 50,\n            max: 100,\n            value: 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Triangle, {\n            left: 200,\n            top: 0,\n            width: 100,\n            height: 100,\n            min: 50,\n            max: 100,\n            value: 50\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            id: \"crosshair\",\n            src: \"https://interactive-examples.mdn.mozilla.net/media/examples/crosshair.svg\",\n            style: {\n              position: \"absolute\",\n              left: \"calc(\" + (this.state.x - 12) + \"px)\",\n              top: \"calc(\" + (this.state.y - 12) + \"px)\",\n              opacity: \"1\"\n            },\n            width: \"24px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            id: \"crosshair\",\n            src: \"https://interactive-examples.mdn.mozilla.net/media/examples/crosshair.svg\",\n            style: {\n              backgroundColor: \"green\",\n              position: \"absolute\",\n              left: \"calc(\" + (this.state.originX - 12) + \"px)\",\n              top: \"calc(\" + (this.state.originY - 12) + \"px)\",\n              opacity: \"1\"\n            },\n            width: \"24px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          id: \"crosshair\",\n          src: \"https://interactive-examples.mdn.mozilla.net/media/examples/crosshair.svg\",\n          style: {\n            backgroundColor: \"blue\",\n            position: \"absolute\",\n            left: \"calc(\" + (this.state.mouseX - 12) + \"px)\",\n            top: \"calc(\" + (this.state.mouseY - 12) + \"px)\",\n            opacity: \"1\"\n          },\n          width: \"24px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MidleContent; //<h3>{context.activeObject.name ? context.activeObject.name : \"MidleContent\"}</h3>","map":{"version":3,"sources":["/Users/sergeismogliuk/Documents/Project/Project_node/Diplom/react-diplom/react-diplom/src/components/Container/MidleContainer/MidleContent/MidleContent.js"],"names":["React","MidleContentStyle","DiagramViewBox","Triangle","MidleContent","PureComponent","constructor","props","_showCard","context","ListActive","length","object","find","item","isSelected","console","log","name","getCoords","elem","box","getBoundingClientRect","pageYOffset","top","Math","round","left","handleOnWhell","e","target","targetCoords","xCoord","clientX","yCoord","clientY","wheel","deltaY","scale","state","zoom","setState","handleOnMouseMove","position","getTransformedPoint","mouseX","x","mouseY","y","transformedX","transformedY","handleOnClick","newX","newY","OrX","width","OrY","height","originX","originY","handleMouseDown","error","isLoaded","render","transform","boxShadow","opacity","backgroundColor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,iBAAP,MAA8B,qBAA9B;AAEA,OAAOC,cAAP,MAA2B,kCAA3B,C,CAEA;;AAEA,OAAOC,QAAP,MAAqB,gCAArB;;;AAEA,MAAMC,YAAN,SAA2BJ,KAAK,CAACK,aAAjC,CAA+C;AAC3CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAmBjBC,SAnBiB,GAmBL,MACZ;AACI,UAAG,KAAKC,OAAL,CAAaC,UAAb,CAAwBC,MAAxB,KAAmC,CAAtC,EACA;AACE,4BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD;;AAED,UAAIC,MAAM,GAAG,KAAKH,OAAL,CAAaC,UAAb,CAAwBG,IAAxB,CAA6BC,IAAI,IAAIA,IAAI,CAACC,UAAL,KAAoB,IAAzD,CAAb;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAsC,KAAKR,OAA3C;AAIA,0BAAO;AAAA,kBAAKG,MAAM,CAACM;AAAZ;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAjCgB;;AAAA,SAmCjBC,SAnCiB,GAmCJC,IAAD,IAAU;AACpB,UAAIC,GAAG,GAAGD,IAAI,CAACE,qBAAL,EAAV;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKhB,iBAAL,CAAuBsB,WAAnC;AACA,aAAO;AACLC,QAAAA,GAAG,EAAEC,IAAI,CAACC,KAAL,CAAWL,GAAG,CAACG,GAAf,CADA;AACqB;AAC1BG,QAAAA,IAAI,EAAEF,IAAI,CAACC,KAAL,CAAWL,GAAG,CAACM,IAAf,CAFD,CAEqB;;AAFrB,OAAP;AAID,KA1CgB;;AAAA,SA4CjBC,aA5CiB,GA4CAC,CAAD,IAChB;AACE;AACA,UAAIC,MAAM,GAAG,KAAK7B,iBAAlB,CAFF,CAEqC;;AAEnC,UAAI8B,YAAY,GAAGD,MAAM,CAACR,qBAAP,EAAnB;AACA,UAAIU,MAAM,GAAGH,CAAC,CAACI,OAAF,GAAYF,YAAY,CAACJ,IAAtC;AACA,UAAIO,MAAM,GAAGL,CAAC,CAACM,OAAF,GAAYJ,YAAY,CAACP,GAAtC;AAEA,YAAMY,KAAK,GAAGP,CAAC,CAACQ,MAAF,GAAW,CAAX,GAAe,CAAf,GAAmB,CAAC,CAAlC;AAEA,UAAIC,KAAK,GAAG,KAAKC,KAAL,CAAWD,KAAvB,CAVF,CAYE;;AACA,UAAIE,IAAJ,CAbF,CAaU;;AACRxB,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBmB,KAAvB;;AACA,UAAGA,KAAK,GAAG,CAAX,EACA;AACEI,QAAAA,IAAI,GAAGF,KAAK,GAAC,IAAb;;AACA,YAAGE,IAAI,GAAG,CAAV,EACA;AACEA,UAAAA,IAAI,GAAG,CAAP;AACD;AACF,OAPD,MASA;AACEA,QAAAA,IAAI,GAAGF,KAAK,GAAC,IAAb;AAED;;AACD,WAAKG,QAAL,CAAc;AAACH,QAAAA,KAAK,EAAEE;AAAR,OAAd,EA5BF,CA4B+B;;AAE9B;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGO,KA7FgB;;AAAA,SA+FjBE,iBA/FiB,GA+FIb,CAAD,IACpB;AACE,UAAIc,QAAQ,GAAG,KAAKC,mBAAL,CAAyBf,CAAC,CAACI,OAA3B,EAAmCJ,CAAC,CAACM,OAArC,CAAf;AACA,WAAKM,QAAL,CAAc;AAAEI,QAAAA,MAAM,EAAEF,QAAQ,CAACG,CAAnB;AAAsBC,QAAAA,MAAM,EAAEJ,QAAQ,CAACK;AAAvC,OAAd;AACD,KAnGgB;;AAAA,SAsGjBJ,mBAtGiB,GAsGG,CAACE,CAAD,EAAIE,CAAJ,KAAS;AAC3B,UAAIlB,MAAM,GAAG,KAAK7B,iBAAlB;AACA,UAAI8B,YAAY,GAAGD,MAAM,CAACR,qBAAP,EAAnB;AACA,YAAM2B,YAAY,GAAGH,CAAC,GAAGf,YAAY,CAACJ,IAAtC;AACA,YAAMuB,YAAY,GAAGF,CAAC,GAAGjB,YAAY,CAACP,GAAtC;AACA,aAAO;AAAEsB,QAAAA,CAAC,EAAEG,YAAL;AAAmBD,QAAAA,CAAC,EAAEE;AAAtB,OAAP;AACD,KA5GgB;;AAAA,SA+GjBC,aA/GiB,GA+GAtB,CAAD,IAAM;AACpB,UAAIC,MAAM,GAAG,KAAK7B,iBAAlB,CADoB,CACe;;AAEnC,UAAI8B,YAAY,GAAGD,MAAM,CAACR,qBAAP,EAAnB;AACA,UAAIU,MAAM,GAAGH,CAAC,CAACI,OAAf,CAJoB,CAIG;;AACvB,UAAIC,MAAM,GAAGL,CAAC,CAACM,OAAf,CALoB,CAKG;;AAEvB,UAAIiB,IAAJ;AACA,UAAIC,IAAJ,CARoB,CASpB;;AAEArC,MAAAA,OAAO,CAACC,GAAR,CAAYc,YAAZ;AACAqB,MAAAA,IAAI,GAAG,CAACvB,CAAC,CAACI,OAAF,GAAaF,YAAY,CAACJ,IAA3B,IAAkC,KAAKY,KAAL,CAAWD,KAApD;AACAe,MAAAA,IAAI,GAAG,CAACxB,CAAC,CAACM,OAAF,GAAaJ,YAAY,CAACP,GAA3B,IAAgC,KAAKe,KAAL,CAAWD,KAAlD;AAEA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEQ,UAAIgB,GAAG,GAAG,CAAEvB,YAAY,CAACwB,KAAb,GAAmB,CAApB,GAAyBH,IAA1B,IAAiC,KAAKb,KAAL,CAAWD,KAAtD;AAEA,UAAIkB,GAAG,GAAG,CAAEzB,YAAY,CAAC0B,MAAb,GAAoB,CAArB,GAA0BJ,IAA3B,IAAkC,KAAKd,KAAL,CAAWD,KAAvD;AAIAtB,MAAAA,OAAO,CAACC,GAAR,CAAYqC,GAAZ,EAAgBE,GAAhB;AAEA,WAAKf,QAAL,CAAc;AAAEK,QAAAA,CAAC,EAAEM,IAAL;AAAWJ,QAAAA,CAAC,EAAEK,IAAd;AAAoBK,QAAAA,OAAO,EAAG3B,YAAY,CAACwB,KAAb,GAAmB,CAAjD;AAAoDI,QAAAA,OAAO,EAAI5B,YAAY,CAAC0B,MAAb,GAAoB;AAAnF,OAAd,EAlCoB,CAkCqF;AAC1G,KAlJgB;;AAAA,SAqJjBG,eArJiB,GAqJE/B,CAAD,IAAM,CAEvB,CAvJgB;;AAEf,SAAKU,KAAL,GAAa;AACXsB,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,QAAQ,EAAE,KAFC;AAGXxB,MAAAA,KAAK,EAAE,CAHI;AAIXQ,MAAAA,CAAC,EAAE,CAJQ;AAKXE,MAAAA,CAAC,EAAE,CALQ;AAMXU,MAAAA,OAAO,EAAE,CANE;AAOXC,MAAAA,OAAO,EAAE,CAPE;AAQXd,MAAAA,MAAM,EAAE,CARG;AASXE,MAAAA,MAAM,EAAE;AATG,KAAb;AAWD;;AA4ID;AACA;AACA;AACAgB,EAAAA,MAAM,GAAG;AACP,wBACI,QAAC,iBAAD;AAAA,6BACI;AAAK,QAAA,KAAK,EAAE;AAACR,UAAAA,KAAK,EAAE,MAAR;AAAgBE,UAAAA,MAAM,EAAE,MAAxB;AAA+Bd,UAAAA,QAAQ,EAAE;AAAzC,SAAZ;AAAkE,QAAA,GAAG,EAAG1C,iBAAD,IAAuB;AAAE,eAAKA,iBAAL,GAAyBA,iBAAzB;AAA4C,SAA5I;AAA8I,QAAA,WAAW,EAAE,KAAKyC,iBAAhK;AAAmL,QAAA,OAAO,EAAE,KAAKS,aAAjM;AAAkN,QAAA,OAAO,EAAE,KAAKvB,aAAhO;AAAgP,QAAA,WAAW,EAAE,KAAKgC,eAAlQ;AAAA,gCACE;AAAQ,UAAA,KAAK,EAAE;AAACL,YAAAA,KAAK,EAAE,MAAR;AAAgBE,YAAAA,MAAM,EAAE,MAAxB;AAA+Bd,YAAAA,QAAQ,EAAE,UAAzC;AAAoDqB,YAAAA,SAAS,EAAC,WAAS,KAAKzB,KAAL,CAAWD,KAApB,GAA0B,GAAxF;AAA4F2B,YAAAA,SAAS,EAAE;AAAvG,WAAf;AAAA,kCACE,QAAC,QAAD;AAAY,YAAA,IAAI,EAAE,CAAlB;AAAqB,YAAA,GAAG,EAAE,CAA1B;AAA6B,YAAA,KAAK,EAAE,GAApC;AAAyC,YAAA,MAAM,EAAE,GAAjD;AAAsD,YAAA,GAAG,EAAE,EAA3D;AAA+D,YAAA,GAAG,EAAE,GAApE;AAAyE,YAAA,KAAK,EAAE;AAAhF;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,QAAD;AAAY,YAAA,IAAI,EAAE,GAAlB;AAAuB,YAAA,GAAG,EAAE,CAA5B;AAAgC,YAAA,KAAK,EAAE,GAAvC;AAA4C,YAAA,MAAM,EAAE,GAApD;AAAyD,YAAA,GAAG,EAAE,EAA9D;AAAkE,YAAA,GAAG,EAAE,GAAvE;AAA4E,YAAA,KAAK,EAAE;AAAnF;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAK,YAAA,EAAE,EAAC,WAAR;AAAoB,YAAA,GAAG,EAAC,2EAAxB;AAAoG,YAAA,KAAK,EAAE;AAACtB,cAAAA,QAAQ,EAAE,UAAX;AAAsBhB,cAAAA,IAAI,EAAE,WAAS,KAAKY,KAAL,CAAWO,CAAX,GAAa,EAAtB,IAA0B,KAAtD;AAA6DtB,cAAAA,GAAG,EAAE,WAAS,KAAKe,KAAL,CAAWS,CAAX,GAAa,EAAtB,IAA0B,KAA5F;AAAkGkB,cAAAA,OAAO,EAAE;AAA3G,aAA3G;AAA4N,YAAA,KAAK,EAAC;AAAlO;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAK,YAAA,EAAE,EAAC,WAAR;AAAoB,YAAA,GAAG,EAAC,2EAAxB;AAAoG,YAAA,KAAK,EAAE;AAAEC,cAAAA,eAAe,EAAC,OAAlB;AAA0BxB,cAAAA,QAAQ,EAAE,UAApC;AAA+ChB,cAAAA,IAAI,EAAE,WAAS,KAAKY,KAAL,CAAWmB,OAAX,GAAmB,EAA5B,IAAgC,KAArF;AAA4FlC,cAAAA,GAAG,EAAE,WAAS,KAAKe,KAAL,CAAWoB,OAAX,GAAmB,EAA5B,IAAgC,KAAjI;AAAuIO,cAAAA,OAAO,EAAE;AAAhJ,aAA3G;AAAiQ,YAAA,KAAK,EAAC;AAAvQ;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE;AAAK,UAAA,EAAE,EAAC,WAAR;AAAoB,UAAA,GAAG,EAAC,2EAAxB;AAAoG,UAAA,KAAK,EAAE;AAACC,YAAAA,eAAe,EAAC,MAAjB;AAAwBxB,YAAAA,QAAQ,EAAE,UAAlC;AAA6ChB,YAAAA,IAAI,EAAE,WAAS,KAAKY,KAAL,CAAWM,MAAX,GAAkB,EAA3B,IAA+B,KAAlF;AAAyFrB,YAAAA,GAAG,EAAC,WAAS,KAAKe,KAAL,CAAWQ,MAAX,GAAkB,EAA3B,IAA+B,KAA5H;AAAkImB,YAAAA,OAAO,EAAE;AAA3I,WAA3G;AAA4P,UAAA,KAAK,EAAC;AAAlQ;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AA0BD;;AAxLwC;;AA6L/C,eAAe9D,YAAf,C,CAEA","sourcesContent":["import React from \"react\";\n\nimport MidleContentStyle from \"./MidleContentStyle\"\n\nimport DiagramViewBox from \"../../../Diagrams/DiagramViewBox\"\n\n//import  {ListActiveConxtext} from \"../../../../ListActiveContextProvider\"\n\nimport Triangle from \"../../../SVG/Triangle/Triangle\"\n\nclass MidleContent extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n          error: null,\n          isLoaded: false,\n          scale: 1,\n          x: 0,\n          y: 0,\n          originX: 0,\n          originY: 0,\n          mouseX: 0,\n          mouseY: 0\n        };\n      }\n\n      static MidleContentStyle;\n\n      //static contextType = ListActiveConxtext;\n\n      _showCard = () =>\n      {\n          if(this.context.ListActive.length === 0)\n          {\n            return <h3>MidleContent</h3>\n          }\n\n          let object = this.context.ListActive.find(item => item.isSelected === true)\n\n          console.log(\"this._showCard(context)\",this.context)\n\n     \n\n          return <h3>{object.name}</h3>\n      }\n\n      getCoords = (elem) => {\n        let box = elem.getBoundingClientRect();\n        console.log(this.MidleContentStyle.pageYOffset)\n        return {\n          top: Math.round(box.top), //pageYOffset\n          left: Math.round(box.left)//pageXOffset\n        };\n      }\n\n      handleOnWhell = (e) =>\n      {\n        //let count = (e.deltaY/17)\n        let target = this.MidleContentStyle//e.target.closest('....'); // Здесь что-то уникальное, что может указать на род. блок\n\n        let targetCoords = target.getBoundingClientRect();\n        let xCoord = e.clientX - targetCoords.left;\n        let yCoord = e.clientY - targetCoords.top;\n\n        const wheel = e.deltaY < 0 ? 1 : -1;\n\n        let scale = this.state.scale\n\n        // Compute zoom factor.\n        let zoom// = Math.exp(wheel * this.state.scale);\n        console.log(\"wheel = \",wheel)\n        if(wheel > 0)\n        {\n          zoom = scale-0.05\n          if(zoom < 0 )\n          {\n            zoom = 0\n          }\n        }\n        else\n        {\n          zoom = scale+0.05\n          \n        }\n        this.setState({scale: zoom}) //,x: e.screenX, y: e.screenY\n\n       /* switch (e.deltaY > 0) {\n            case true:\n              console.log('positive',e.deltaY,count);\n              let plus = this.state.scale+0.05\n\n              this.setState({scale: zoom,originX: -originX, originY: -originY }) //,x: xCoord, y: yCoord\n              break;\n            default:\n              console.log('negative',e.deltaY,count);\n              count *=(-1)\n\n              let minus = this.state.scale-0.05\n              if(minus < 0 )\n              {\n                minus = 0\n              }\n              \n          }*/\n      }\n\n      handleOnMouseMove = (e) =>\n      {\n        let position = this.getTransformedPoint(e.clientX,e.clientY)\n        this.setState({ mouseX: position.x, mouseY: position.y });\n      }\n\n\n      getTransformedPoint=(x, y)=> {\n        let target = this.MidleContentStyle\n        let targetCoords = target.getBoundingClientRect();\n        const transformedX = x - targetCoords.left;\n        const transformedY = y - targetCoords.top;\n        return { x: transformedX, y: transformedY };\n      }\n\n\n      handleOnClick = (e) =>{\n        let target = this.MidleContentStyle//e.target.closest('....'); // Здесь что-то уникальное, что может указать на род. блок\n\n        let targetCoords = target.getBoundingClientRect();\n        let xCoord = e.clientX //- targetCoords.left;\n        let yCoord = e.clientY //- targetCoords.top;\n\n        let newX;\n        let newY;\n        //ev.layerX * currentzoom / 1 - originX;\n\n        console.log(targetCoords)\n        newX = (e.clientX  - targetCoords.left)/ this.state.scale ;\n        newY = (e.clientY -  targetCoords.top)/this.state.scale ;\n\n        /*if(this.state.scale === 1)\n        {\n          newX = e.clientX- targetCoords.left;\n          newY = e.clientY - targetCoords.top;\n        }\n        else\n        {\n          newX = e.clientX - targetCoords.left;\n          newY = e.clientY - targetCoords.top;\n        }*/\n         \n        let OrX = ((targetCoords.width/2) - newX)/ this.state.scale \n\n        let OrY = ((targetCoords.height/2) - newY)/ this.state.scale \n       \n        \n\n        console.log(OrX,OrY)\n\n        this.setState({ x: newX, y: newY, originX: (targetCoords.width/2),originY:  (targetCoords.height/2)  }); //\n      }\n\n\n      handleMouseDown = (e) =>{\n        \n      }\n\n      //translate(\"+this.state.x+\"px,\"+this.state.y+\"px)\n      //transformOrigin:this.state.xScale+\"px \"+this.state.yScale+\"px\"\n      //transformOrigin:this.state.originX+\"px \"+this.state.originY+\"px\",\n      render() {\n        return (\n            <MidleContentStyle >\n                <div style={{width: \"100%\", height: \"100%\",position: \"relative\"}} ref={(MidleContentStyle) => { this.MidleContentStyle = MidleContentStyle;}} onMouseMove={this.handleOnMouseMove} onClick={this.handleOnClick}   onWheel={this.handleOnWhell}  onMouseDown={this.handleMouseDown}>\n                  <div    style={{width: \"100%\", height: \"100%\",position: \"absolute\",transform:\"scale(\"+this.state.scale+\")\",boxShadow: \"rgba(0,0,0,0.2) 0px 3px 5px -1px,rgba(0,0,0,0.14) 0px 6px 10px 0px,rgba(0,0,0,0.12) 0px 1px 14px 0px\"}}>\n                    <Triangle   left={0} top={0} width={100} height={100} min={50} max={100} value={0}/>\n                    <Triangle   left={200} top={0}  width={100} height={100} min={50} max={100} value={50}/>\n                    <img id=\"crosshair\" src=\"https://interactive-examples.mdn.mozilla.net/media/examples/crosshair.svg\" style={{position: \"absolute\",left: \"calc(\"+(this.state.x-12)+\"px)\", top: \"calc(\"+(this.state.y-12)+\"px)\",opacity: \"1\"}} width=\"24px\"></img>\n                    <img id=\"crosshair\" src=\"https://interactive-examples.mdn.mozilla.net/media/examples/crosshair.svg\" style={{ backgroundColor:\"green\",position: \"absolute\",left: \"calc(\"+(this.state.originX-12)+\"px)\", top: \"calc(\"+(this.state.originY-12)+\"px)\",opacity: \"1\"}} width=\"24px\"></img>\n                  </div>\n    \n                  <img id=\"crosshair\" src=\"https://interactive-examples.mdn.mozilla.net/media/examples/crosshair.svg\" style={{backgroundColor:\"blue\",position: \"absolute\",left: \"calc(\"+(this.state.mouseX-12)+\"px)\", top:\"calc(\"+(this.state.mouseY-12)+\"px)\",opacity: \"1\"}} width=\"24px\"></img>\n                 \n                </div>\n\n\n               {/* <DiagramViewBox/>\n\n              <ListActiveConxtext.Consumer>\n                {value => (\n                  <h3>MidleContent {console.log(value.ListActive)}</h3>\n                )}\n                \n                </ListActiveConxtext.Consumer>*/} \n            </MidleContentStyle>\n\n        )\n      }\n}\n\n\n\nexport default MidleContent;\n\n//<h3>{context.activeObject.name ? context.activeObject.name : \"MidleContent\"}</h3>"]},"metadata":{},"sourceType":"module"}