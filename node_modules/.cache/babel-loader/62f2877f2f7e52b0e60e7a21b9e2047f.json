{"ast":null,"code":"var _jsxFileName = \"/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport Header from './Component/Header/Header';\nimport LeftBar from './Component/LeftBar/LeftBar';\nimport Main from './Component/Main/Main';\nimport Box from '@mui/material/Box';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport IDialogAddOrder from './Component/Data/Dialog/IDialogAddOrder';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [newOrder, setOrder] = useState();\n\n  const addOrder = value => {\n    console.log(\"NEW = \", value);\n    setOrder(value);\n  };\n\n  const [isPaused, setIsPaused] = useState(false);\n  const [data, setData] = useState(null);\n  const [status, setStatus] = useState(\"\");\n  const [socket, setSocket] = useState(new WebSocket(\"ws://192.168.0.2:5001/ws\"));\n  const ws = useRef(null);\n  const [chatHistory, setChatHistory] = useState([]);\n  const [isOnline, setIsOnline] = useState(false);\n  const [messages, setMessages] = useState({\n    messages: 'null'\n  });\n\n  const addMessages = msg => {//setTextValue((prev) => [...prev, msg]);\n  };\n\n  useEffect(() => {\n    if (!isPaused) {\n      ws.current = new WebSocket(\"ws://192.168.0.2:5001/ws\"); // создаем ws соединение\n\n      ws.current.onopen = () => setStatus(\"Соединение открыто\"); // callback на ивент открытия соединения\n\n\n      ws.current.onclose = () => setStatus(\"Соединение закрыто\"); // callback на ивент закрытия соединения\n\n\n      ws.current.onmessage = message => {\n        const newMessage = `Message from WebSocket: ${message.data}`;\n        this.setMessages({\n          messages: this.state.messages.concat([newMessage])\n        });\n      };\n\n      setSocket(ws); //setTextValue('sadas')\n      //gettingData();\n    }\n\n    return () => ws.current.close(); // кода меняется isPaused - соединение закрывается\n  }, [ws, isPaused]);\n  /*\n  const gettingData = useCallback(() => {\n      if (!ws.current) return;\n       ws.current.onmessage = e => {                //подписка на получение данных по вебсокету\n          if (isPaused) return;\n          console.log('da')\n          const message = JSON.parse(e.data);\n       \n          setData(message);\n      };\n  }, [isPaused]);\n  */\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      height: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: messages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 8\n    }, this), chatHistory.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 19\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"f/Y07j6EIWQCio+duhrRJoU8vzM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/App.js"],"names":["React","useState","useRef","useEffect","useCallback","Header","LeftBar","Main","Box","CssBaseline","IDialogAddOrder","App","newOrder","setOrder","addOrder","value","console","log","isPaused","setIsPaused","data","setData","status","setStatus","socket","setSocket","WebSocket","ws","chatHistory","setChatHistory","isOnline","setIsOnline","messages","setMessages","addMessages","msg","current","onopen","onclose","onmessage","message","newMessage","state","concat","close","display","height","map","item"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, { useState,useRef,useEffect,useCallback } from 'react';\n\nimport Header from './Component/Header/Header';\nimport LeftBar from './Component/LeftBar/LeftBar';\nimport Main from './Component/Main/Main';\nimport Box from '@mui/material/Box';\nimport CssBaseline from '@mui/material/CssBaseline';\n\n\nimport IDialogAddOrder from './Component/Data/Dialog/IDialogAddOrder'\n\nconst App=()=>{\n\n\n  const [newOrder,setOrder] = useState();\n\n  const addOrder=(value)=>\n  {\n    console.log(\"NEW = \", value)\n    setOrder(value)\n  }\n\n\n  const [isPaused, setIsPaused] = useState(false);\n    const [data, setData] = useState(null); \n    const [status, setStatus] = useState(\"\");\n    const [socket, setSocket] = useState(new WebSocket(\"ws://192.168.0.2:5001/ws\"));\n    const ws = useRef(null)\n\n    const [chatHistory, setChatHistory] = useState([]);\n    const [isOnline, setIsOnline] = useState(false);\n    const [messages, setMessages] = useState({\n      messages: 'null'\n    });\n\n  \n\n\n\n    const addMessages = (msg) => {\n      //setTextValue((prev) => [...prev, msg]);\n    };\n\n    useEffect(() => {\n        if (!isPaused) {\n            ws.current = new WebSocket(\"ws://192.168.0.2:5001/ws\"); // создаем ws соединение\n          \n\n\n            ws.current.onopen = () => setStatus(\"Соединение открыто\");\t// callback на ивент открытия соединения\n            ws.current.onclose = () => setStatus(\"Соединение закрыто\"); // callback на ивент закрытия соединения\n\n            ws.current.onmessage = (message) => {\n              const newMessage = `Message from WebSocket: ${message.data}`\n              this.setMessages({\n                messages: this.state.messages.concat([newMessage]) \n              })\n            }\n\n            setSocket(ws);\n            //setTextValue('sadas')\n            //gettingData();\n           \n        }\n        return () => ws.current.close(); // кода меняется isPaused - соединение закрывается\n    }, [ws, isPaused]);\n\n\n\n    /*\n    const gettingData = useCallback(() => {\n        if (!ws.current) return;\n\n        ws.current.onmessage = e => {                //подписка на получение данных по вебсокету\n            if (isPaused) return;\n            console.log('da')\n            const message = JSON.parse(e.data);\n\n        \n            setData(message);\n        };\n    }, [isPaused]);\n*/\n   \n\n\n\n  return (\n    <Box sx={{ display: 'flex',height: '100%', }}>\n       <p>{status}</p>\n       <p>{data}</p>\n       <p>{messages}</p>\n       {\n         chatHistory.map((item)=>{\n           return <p>{item}</p>\n         })\n       }\n       {/*\n        <CssBaseline />\n        <Header/>\n        <LeftBar addOrder={addOrder}/>\n       <Main newOrder={newOrder}/> */}\n    </Box>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}