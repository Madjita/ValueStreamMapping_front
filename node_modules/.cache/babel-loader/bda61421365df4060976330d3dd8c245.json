{"ast":null,"code":"import axios from \"axios\";\nimport { fetch_cardVSM, fetch_cardVSM_success, fetch_cardVSM_error } from '../reducers/useCardVSMReducer';\nimport ip from '../../global';\nexport const cardVSMLoading = order => {\n  return async dispatch => {\n    try {\n      // dispatch(fetch_orders());\n      //const response = await axios.get('https://jsonplaceholder.typicode.com/users')\n      dispatch(fetch_cardVSM());\n      const response = await axios.post('http://' + ip + ':5001/api/cardVSM/get', order, {\n        withCredentials: false,\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = response.data;\n      console.log(\"Get card = \", data);\n      setTimeout(() => {\n        dispatch(fetch_cardVSM_success(data));\n      }, 0);\n    } catch (e) {\n      dispatch(fetch_cardVSM_error('Error'));\n    }\n  };\n};","map":{"version":3,"sources":["/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/store/action-creator/useActionsCardVSM.tsx"],"names":["axios","fetch_cardVSM","fetch_cardVSM_success","fetch_cardVSM_error","ip","cardVSMLoading","order","dispatch","response","post","withCredentials","headers","data","console","log","setTimeout","e"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAKA,SAAUC,aAAV,EACIC,qBADJ,EAEIC,mBAFJ,QAIQ,+BAJR;AASA,OAAOC,EAAP,MAAe,cAAf;AAcA,OAAO,MAAMC,cAAc,GAAIC,KAAD,IAAuB;AACjD,SAAO,MAAOC,QAAP,IAAyB;AAE5B,QAAG;AACA;AACC;AAEAA,MAAAA,QAAQ,CAACN,aAAa,EAAd,CAAR;AAIA,YAAMO,QAAQ,GAAG,MAAMR,KAAK,CAACS,IAAN,CAAW,YAAUL,EAAV,GAAa,uBAAxB,EACvBE,KADuB,EAEtB;AACGI,QAAAA,eAAe,EAAE,KADpB;AAEGC,QAAAA,OAAO,EAAE;AACP,yCAA+B,GADxB;AAEP,0BAAgB;AAFT;AAFZ,OAFsB,CAAvB;AAWD,YAAMC,IAAI,GAAGJ,QAAQ,CAACI,IAAtB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,IAA3B;AAECG,MAAAA,UAAU,CAAC,MAAM;AACbR,QAAAA,QAAQ,CAACL,qBAAqB,CAACU,IAAD,CAAtB,CAAR;AACH,OAFS,EAEP,CAFO,CAAV;AAGH,KAzBD,CAyBE,OAAMI,CAAN,EAAS;AACPT,MAAAA,QAAQ,CAACJ,mBAAmB,CAAC,OAAD,CAApB,CAAR;AACH;AACJ,GA9BD;AA+BH,CAhCM","sourcesContent":["import axios from \"axios\"\nimport { Dispatch } from \"react\"\nimport IDataOrder from \"../../Component/Data/IDataOrder\"\nimport { useOrdersActionType,useLeftMenuAction } from \"../../type/useOrdersType\"\n\nimport {  fetch_cardVSM, \n    fetch_cardVSM_success, \n    fetch_cardVSM_error,\n    fetch_cardVSM_add \n } from '../reducers/useCardVSMReducer'\n\n\nimport IDialogAddOrder from '../../Component/Data/Dialog/IDialogAddOrder'\n\nimport ip from '../../global'\nimport IDataProduction from \"../../Component/Data/IDataProduction\"\nimport { useCardVSMType, useProductionCardVSM } from \"../../type/useCardVSMType\"\nimport IDataCardVSM from \"../../Component/Data/IDataCardVSM\"\n\n\ninterface productionCardVSM{\n    name: string,\n    productions: IDataCardVSM[]\n}\ninterface IDataCardProduct{\n    cardVSMs: productionCardVSM[]\n}\n\nexport const cardVSMLoading = (order: IDataOrder) => {\n    return async (dispatch: any) => {\n\n        try{\n           // dispatch(fetch_orders());\n            //const response = await axios.get('https://jsonplaceholder.typicode.com/users')\n\n            dispatch(fetch_cardVSM());\n\n     \n\n            const response = await axios.post('http://'+ip+':5001/api/cardVSM/get',\n            order\n            ,{\n                withCredentials: false,\n                headers: {\n                  \"Access-Control-Allow-Origin\": \"*\",\n                  'Content-Type': 'application/json'\n                },\n            })\n\n            \n           const data = response.data as IDataCardProduct | unknown;\n           console.log(\"Get card = \", data);\n\n            setTimeout(() => {\n                dispatch(fetch_cardVSM_success(data));\n            }, 0)\n        } catch(e) {\n            dispatch(fetch_cardVSM_error('Error'));\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}