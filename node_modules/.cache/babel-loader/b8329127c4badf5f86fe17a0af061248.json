{"ast":null,"code":"var _jsxFileName = \"/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport Header from './Component/Header/Header';\nimport LeftBar from './Component/LeftBar/LeftBar';\nimport Main from './Component/Main/Main';\nimport Box from '@mui/material/Box';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport IDialogAddOrder from './Component/Data/Dialog/IDialogAddOrder';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [newOrder, setOrder] = useState();\n\n  const addOrder = value => {\n    console.log(\"NEW = \", value);\n    setOrder(value);\n  };\n\n  const [isPaused, setIsPaused] = useState(false);\n  const [data, setData] = useState(null);\n  const [status, setStatus] = useState(\"\");\n  const ws = useRef(null);\n  const [chatHistory, setChatHistory] = useState([]);\n  const [isOnline, setIsOnline] = useState(false);\n  const [textValue, setTextValue] = useState(\"\");\n  const webSocket = useRef(null);\n  webSocket.current = new WebSocket(\"ws://192.168.0.2:5001/ws\");\n  useEffect(() => {\n    setTimeout(() => {\n      console.log(\"OPen =\", webSocket.current);\n\n      if (webSocket.current.readyState === WebSocket.OPEN) {\n        setIsOnline(true);\n      }\n\n      if (webSocket.current.readyState === WebSocket.CLOSED) {\n        setIsOnline(false);\n        setChatHistory([]);\n      }\n    }, 5);\n  }, [webSocket.current]);\n\n  const sendMessage = () => {\n    if (webSocket.current.readyState === WebSocket.OPEN) {\n      setChatHistory([...chatHistory, textValue]);\n      webSocket.current.send(textValue);\n    }\n  };\n  /*\n  useEffect(() => {\n      if (!isPaused) {\n          ws.current = new WebSocket(\"ws://192.168.0.2:5001/ws\"); // создаем ws соединение\n          ws.current.onopen = () => setStatus(\"Соединение открыто\");\t// callback на ивент открытия соединения\n          ws.current.onclose = () => setStatus(\"Соединение закрыто\"); // callback на ивент закрытия соединения\n            sendMessage();\n          gettingData();\n          console.log('gettingData')\n      }\n        return () => ws.current.close(); // кода меняется isPaused - соединение закрывается\n  }, [ws, isPaused]);\n   const gettingData = useCallback(() => {\n      if (!ws.current) return;\n       ws.current.onmessage = e => {                //подписка на получение данных по вебсокету\n          if (isPaused) return;\n          console.log('da')\n          const message = JSON.parse(e.data);\n       \n          setData(message);\n      };\n  }, [isPaused]);\n  */\n\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      height: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: isOnline\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"qVUfnToIR3k15ZzXubZxO9aA+7o=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/App.js"],"names":["React","useState","useRef","useEffect","useCallback","Header","LeftBar","Main","Box","CssBaseline","IDialogAddOrder","App","newOrder","setOrder","addOrder","value","console","log","isPaused","setIsPaused","data","setData","status","setStatus","ws","chatHistory","setChatHistory","isOnline","setIsOnline","textValue","setTextValue","webSocket","current","WebSocket","setTimeout","readyState","OPEN","CLOSED","sendMessage","send","display","height"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, { useState,useRef,useEffect,useCallback } from 'react';\n\nimport Header from './Component/Header/Header';\nimport LeftBar from './Component/LeftBar/LeftBar';\nimport Main from './Component/Main/Main';\nimport Box from '@mui/material/Box';\nimport CssBaseline from '@mui/material/CssBaseline';\n\n\nimport IDialogAddOrder from './Component/Data/Dialog/IDialogAddOrder'\n\nconst App=()=>{\n\n\n  const [newOrder,setOrder] = useState();\n\n  const addOrder=(value)=>\n  {\n    console.log(\"NEW = \", value)\n    setOrder(value)\n  }\n\n\n  const [isPaused, setIsPaused] = useState(false);\n    const [data, setData] = useState(null); \n    const [status, setStatus] = useState(\"\");\n    const ws = useRef(null);\n\n\n    const [chatHistory, setChatHistory] = useState([]);\n    const [isOnline, setIsOnline] = useState(false);\n    const [textValue, setTextValue] = useState(\"\");\n  \n    const webSocket = useRef(null);\n  \n    webSocket.current = new WebSocket(\"ws://192.168.0.2:5001/ws\");\n  \n    useEffect(() => {\n      setTimeout(() => {\n        console.log(\"OPen =\", webSocket.current)\n        if (webSocket.current.readyState === WebSocket.OPEN) {\n         \n          setIsOnline(true);\n        }\n        if (webSocket.current.readyState === WebSocket.CLOSED) {\n          setIsOnline(false);\n          setChatHistory([]);\n        }\n      }, 5);\n    }, [webSocket.current]);\n  \n    const sendMessage = () => {\n      if (webSocket.current.readyState === WebSocket.OPEN) {\n        setChatHistory([...chatHistory, textValue]);\n        webSocket.current.send(textValue);\n      }\n    };\n\n    /*\n    useEffect(() => {\n        if (!isPaused) {\n            ws.current = new WebSocket(\"ws://192.168.0.2:5001/ws\"); // создаем ws соединение\n            ws.current.onopen = () => setStatus(\"Соединение открыто\");\t// callback на ивент открытия соединения\n            ws.current.onclose = () => setStatus(\"Соединение закрыто\"); // callback на ивент закрытия соединения\n\n\n            sendMessage();\n            gettingData();\n            console.log('gettingData')\n        }\n\n\n        return () => ws.current.close(); // кода меняется isPaused - соединение закрывается\n    }, [ws, isPaused]);\n\n    const gettingData = useCallback(() => {\n        if (!ws.current) return;\n\n        ws.current.onmessage = e => {                //подписка на получение данных по вебсокету\n            if (isPaused) return;\n            console.log('da')\n            const message = JSON.parse(e.data);\n\n        \n            setData(message);\n        };\n    }, [isPaused]);\n*/\n   \n\n\n\n  return (\n    <Box sx={{ display: 'flex',height: '100%', }}>\n       <p>{isOnline}</p>\n       <p>{data}</p>\n       {/*\n        <CssBaseline />\n        <Header/>\n        <LeftBar addOrder={addOrder}/>\n       <Main newOrder={newOrder}/> */}\n    </Box>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}