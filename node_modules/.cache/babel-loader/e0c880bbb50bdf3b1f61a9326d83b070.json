{"ast":null,"code":"var _jsxFileName = \"/Users/sergeismogliuk/Documents/Project/Project_node/Diplom/react-diplom/react-diplom/src/components/Container/LeftContent/LeftContent.js\";\nimport React from \"react\";\nimport LeftContentStyle from \"./LeftContentStyle\";\nimport LeftList from \"./LeftList/LeftList\";\nimport LeftListActive from \"./LeftListActive/LeftListActive\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LeftContent extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleAdd = (title, count) => {\n      let object = {\n        \"Production\": this.state.data,\n        \"Quantity\": order.quantity\n      };\n      let r = postData('127.0.0.1:500//api/order', ListActive);\n      let ListActive = JSON.parse(JSON.stringify(this.state.ListActive));\n      ListActive.push({\n        title: title,\n        count: count,\n        focus: false\n      });\n      this.setState({\n        ListActive: ListActive\n      });\n    };\n\n    this.Select = keyIndex => {\n      let ListActive = JSON.parse(JSON.stringify(this.state.ListActive));\n      ListActive.forEach((item, index) => {\n        if (index === keyIndex) {\n          item.focus = true;\n        } else {\n          item.focus = false;\n        }\n      });\n      this.setState({\n        ListActive: ListActive\n      });\n    };\n\n    this.state = {\n      error: null,\n      isLoaded: false,\n      ListActive: [],\n      ListUpdate: false\n    };\n  }\n\n  async api(ip, port, command) {\n    // GET request using fetch with async/await\n    const response = await fetch(\"http://\" + ip + \":\" + port + command);\n    const data = await response.json();\n    return data;\n  } // Пример отправки POST запроса:\n\n\n  async postData(url = '', data = {}) {\n    // Default options are marked with *\n    const response = await fetch(url, {\n      method: 'POST',\n      // *GET, POST, PUT, DELETE, etc.\n      mode: 'cors',\n      // no-cors, *cors, same-origin\n      cache: 'no-cache',\n      // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: 'same-origin',\n      // include, *same-origin, omit\n      headers: {\n        'Content-Type': 'application/json' // 'Content-Type': 'application/x-www-form-urlencoded',\n\n      },\n      redirect: 'follow',\n      // manual, *follow, error\n      referrerPolicy: 'no-referrer',\n      // no-referrer, *client\n      body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n\n    });\n    return await response.json(); // parses JSON response into native JavaScript objects\n  }\n\n  render() {\n    let {\n      ListActive\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(LeftContentStyle, {\n      LeftMenu: this.props.LeftMenu,\n      children: [/*#__PURE__*/_jsxDEV(LeftList, {\n        handleAdd: this.handleAdd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(LeftListActive, {\n        handleSelect: this.Select,\n        ListActive: ListActive\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default LeftContent;","map":{"version":3,"sources":["/Users/sergeismogliuk/Documents/Project/Project_node/Diplom/react-diplom/react-diplom/src/components/Container/LeftContent/LeftContent.js"],"names":["React","LeftContentStyle","LeftList","LeftListActive","LeftContent","PureComponent","constructor","props","handleAdd","title","count","object","state","data","order","quantity","r","postData","ListActive","JSON","parse","stringify","push","focus","setState","Select","keyIndex","forEach","item","index","error","isLoaded","ListUpdate","api","ip","port","command","response","fetch","json","url","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","render","LeftMenu"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport LeftContentStyle from \"./LeftContentStyle\"\n\nimport LeftList from \"./LeftList/LeftList\"\n\nimport LeftListActive from \"./LeftListActive/LeftListActive\"\n\n\n\nclass LeftContent extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n          error: null,\n          isLoaded: false,\n          ListActive: [],\n          ListUpdate: false\n        };\n      }\n\n      async api(ip,port,command) {\n        // GET request using fetch with async/await\n        const response = await fetch(\"http://\"+ip+\":\"+port+command);\n        const data = await response.json();\n        return data\n      }\n\n      // Пример отправки POST запроса:\n      async  postData(url = '', data = {}) {\n        // Default options are marked with *\n        const response = await fetch(url, {\n          method: 'POST', // *GET, POST, PUT, DELETE, etc.\n          mode: 'cors', // no-cors, *cors, same-origin\n          cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n          credentials: 'same-origin', // include, *same-origin, omit\n          headers: {\n            'Content-Type': 'application/json'\n            // 'Content-Type': 'application/x-www-form-urlencoded',\n          },\n          redirect: 'follow', // manual, *follow, error\n          referrerPolicy: 'no-referrer', // no-referrer, *client\n          body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n        });\n        return await response.json(); // parses JSON response into native JavaScript objects\n      }\n\n\n\n\n\n\n     handleAdd = (title,count) => {\n         \n      let object = {\n        \"Production\": this.state.data,\n        \"Quantity\": order.quantity\n      }\n        \n        let r = postData('127.0.0.1:500//api/order',ListActive)\n\n        let  ListActive  = JSON.parse(JSON.stringify(this.state.ListActive))   \n        ListActive.push({title: title,count: count,focus: false})\n        this.setState({ListActive: ListActive})\n     }\n\n     Select = (keyIndex) => {\n      let  ListActive  = JSON.parse(JSON.stringify(this.state.ListActive))\n      ListActive.forEach((item,index) =>{\n        if(index === keyIndex)\n        {\n          item.focus = true;\n        }\n        else\n        {\n          item.focus = false;\n        } \n      })\n      this.setState({ListActive: ListActive})\n    }\n\n      render() {\n\n        let {ListActive} = this.state\n        return (\n            <LeftContentStyle LeftMenu={this.props.LeftMenu}>\n                <LeftList handleAdd={this.handleAdd} />\n                <LeftListActive handleSelect={this.Select} ListActive={ListActive}/>\n            </LeftContentStyle>\n        )\n      }\n}\n\n\nexport default LeftContent;"]},"metadata":{},"sourceType":"module"}