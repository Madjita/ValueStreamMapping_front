{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  orders: [],\n  loading: false,\n  error: null\n};\nconst useOrdersReducer = createSlice({\n  name: 'orders',\n  initialState,\n  reducers: {\n    addOrder(state, action) {\n      state.orders.push(action.payload);\n    },\n\n    decrement(state) {// state.value--    \n    },\n\n    incrementByAmount(state, action) {// state.value += action.payload    \n    }\n\n  }\n});\nexport default useOrdersReducer.reducer;\nexport const {\n  addOrder,\n  decrement,\n  incrementByAmount\n} = useOrdersReducer.actions;","map":{"version":3,"sources":["/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/store/reducers/useOrdersReducer.tsx"],"names":["createSlice","initialState","orders","loading","error","useOrdersReducer","name","reducers","addOrder","state","action","push","payload","decrement","incrementByAmount","reducer","actions"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AAIA,MAAMC,YAA2B,GAAE;AAC/BC,EAAAA,MAAM,EAAE,EADuB;AAE/BC,EAAAA,OAAO,EAAE,KAFsB;AAG/BC,EAAAA,KAAK,EAAE;AAHwB,CAAnC;AAMA,MAAMC,gBAAgB,GAAGL,WAAW,CAAC;AACjCM,EAAAA,IAAI,EAAE,QAD2B;AAEjCL,EAAAA,YAFiC;AAGjCM,EAAAA,QAAQ,EAAE;AACNC,IAAAA,QAAQ,CAACC,KAAD,EAAOC,MAAP,EAAe;AACjBD,MAAAA,KAAK,CAACP,MAAN,CAAaS,IAAb,CAAkBD,MAAM,CAACE,OAAzB;AACL,KAHK;;AAINC,IAAAA,SAAS,CAACJ,KAAD,EAAQ,CACd;AACF,KANK;;AAONK,IAAAA,iBAAiB,CAACL,KAAD,EAAQC,MAAR,EAAuC,CACrD;AACF;;AATK;AAHuB,CAAD,CAApC;AAeA,eAAeL,gBAAgB,CAACU,OAAhC;AACA,OAAO,MAAM;AAAEP,EAAAA,QAAF;AAAYK,EAAAA,SAAZ;AAAuBC,EAAAA;AAAvB,IAA6CT,gBAAgB,CAACW,OAApE","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { useOrdersType } from '../../type/useOrdersType'\n\n\nconst initialState: useOrdersType ={\n    orders: [],\n    loading: false,\n    error: null\n}\n\nconst useOrdersReducer = createSlice({  \n    name: 'orders',  \n    initialState,  \n    reducers: {    \n        addOrder(state,action) {      \n              state.orders.push(action.payload);\n        },    \n        decrement(state) {      \n           // state.value--    \n        },    \n        incrementByAmount(state, action: PayloadAction<number>) {      \n           // state.value += action.payload    \n        },  \n    },\n})\nexport default useOrdersReducer.reducer\nexport const { addOrder, decrement, incrementByAmount } = useOrdersReducer.actions"]},"metadata":{},"sourceType":"module"}