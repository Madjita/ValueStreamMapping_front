{"ast":null,"code":"export let useOrdersActionType;\n\n(function (useOrdersActionType) {\n  useOrdersActionType[\"FETCH_ORDERS\"] = \"FETCH_ORDERS\";\n  useOrdersActionType[\"FETCH_ORDERS_SUCCESS\"] = \"FETCH_ORDERS_SUCCESS\";\n  useOrdersActionType[\"FETCH_ORDERS_ERROR\"] = \"FETCH_ORDERS_ERROR\";\n})(useOrdersActionType || (useOrdersActionType = {}));","map":{"version":3,"sources":["/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/type/useOrdersType.tsx"],"names":["useOrdersActionType"],"mappings":"AAEA,WAAYA,mBAAZ;;WAAYA,mB;AAAAA,EAAAA,mB;AAAAA,EAAAA,mB;AAAAA,EAAAA,mB;GAAAA,mB,KAAAA,mB","sourcesContent":["import IDataOrder from '../Component/Data/IDataOrder'\n\nexport enum useOrdersActionType{\n    FETCH_ORDERS = 'FETCH_ORDERS',\n    FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS',\n    FETCH_ORDERS_ERROR = 'FETCH_ORDERS_ERROR'\n}\n\nexport interface useOrdersType{\n    orders: IDataOrder[],\n    loading: boolean,\n    error: null | string\n}\n\ninterface FetchOrdersAction{\n    type : useOrdersActionType.FETCH_ORDERS,\n}\n\ninterface FetchOrdersActionSuccess{\n    type : useOrdersActionType.FETCH_ORDERS_SUCCESS,\n    payload: IDataOrder[],\n}\n\ninterface FetchOrdersActionError{\n    type : useOrdersActionType.FETCH_ORDERS_ERROR,\n    payload: string,\n}\n\nexport type useLeftMenuAction = FetchOrdersAction | FetchOrdersActionSuccess | FetchOrdersActionError"]},"metadata":{},"sourceType":"module"}