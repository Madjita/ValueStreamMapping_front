{"ast":null,"code":"var _jsxFileName = \"/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Card/ViewOrderCard.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useActionCardVSM } from '../../hooks/useActionCardVSM';\nimport { useTypedSelector } from '../../hooks/leftMenuSelector';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ViewOrderCard = props => {\n  _s();\n\n  const [BDitems, setBDItem] = useState();\n  const {\n    productions,\n    loading\n  } = useTypedSelector(state => state.cardVSM);\n  const {\n    cardVSMLoading\n  } = useActionCardVSM();\n  cardVSMLoading(props.data);\n  let listProduct = null;\n  console.log(\"data = \", props.data);\n  /*\n      \n      let listProduct = props.data.map((item: IDataVSM, index: number)=>{\n          \n          return(\n              <Card key={index} sx={{marginBottom: '150px'}}>\n                  <CardHeader\n                      action={\n                          <IconButton aria-label=\"settings\">\n                              <SettingsIcon />\n                          </IconButton>\n                      }\n                      title={item.name}\n                      sx={{fontWeight: 'bold',color: 'white', backgroundColor: '#575757'}}\n                  >\n                  </CardHeader>\n                  <CardContent sx={{backgroundColor: 'rgba(0, 0, 0, .03)'}}>\n                      <ViewCard sections={item.sections}/>\n                  </CardContent>\n              </Card>\n  \n          )\n      })\n      */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: listProduct\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 8\n  }, this);\n};\n\n_s(ViewOrderCard, \"XwjWP0mNOYm7Td+j6bMuVojsA+0=\", false, function () {\n  return [useTypedSelector, useActionCardVSM];\n});\n\n_c = ViewOrderCard;\nexport default ViewOrderCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewOrderCard\");","map":{"version":3,"sources":["/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Card/ViewOrderCard.tsx"],"names":["React","useState","useActionCardVSM","useTypedSelector","ViewOrderCard","props","BDitems","setBDItem","productions","loading","state","cardVSM","cardVSMLoading","data","listProduct","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AAqBA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,SAASC,gBAAT,QAAiC,8BAAjC;;;AAGA,MAAMC,aAAa,GAAKC,KAAD,IAA4D;AAAA;;AAC/E,QAAM,CAACC,OAAD,EAAUC,SAAV,IAAuBN,QAAQ,EAArC;AAEA,QAAM;AAACO,IAAAA,WAAD;AAAcC,IAAAA;AAAd,MAAyBN,gBAAgB,CAACO,KAAK,IAAIA,KAAK,CAACC,OAAhB,CAA/C;AACA,QAAM;AAACC,IAAAA;AAAD,MAAmBV,gBAAgB,EAAzC;AAEAU,EAAAA,cAAc,CAACP,KAAK,CAACQ,IAAP,CAAd;AAEJ,MAAIC,WAAW,GAAG,IAAlB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBX,KAAK,CAACQ,IAA5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACI,sBACG;AAAA,cACKC;AADL;AAAA;AAAA;AAAA;AAAA,UADH;AAMH,CAzCD;;GAAMV,a;UAG6BD,gB,EACND,gB;;;KAJvBE,a;AA4CN,eAAeA,aAAf","sourcesContent":["import React,{useState} from 'react'\n\nimport IDataCardSection from '../Data/IDataCardSection'\nimport IDataOrderItem from '../Data/IDataOrderItem'\nimport Divider from '@material-ui/core/Divider';\nimport ViewCard from './ViewCard'\n\n\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardContent from '@material-ui/core/CardContent'\n\nimport IconButton from '@material-ui/core/IconButton'\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport SettingsIcon from '@material-ui/icons/Settings';\n\nimport IDataVSM from '../Data/IDataVSM'\nimport IDataProduction from '../Data/IDataProduction';\nimport IDataCardVSM from '../Data/IDataCardVSM';\nimport { useCardVSMActionType } from '../../type/useCardVSMType';\n\nimport { useActionCardVSM } from '../../hooks/useActionCardVSM';\nimport { useTypedSelector } from '../../hooks/leftMenuSelector';\n\n\nconst ViewOrderCard =  (props: {data : IDataProduction[],productionId: number}) => {\n    const [BDitems, setBDItem] = useState<IDataOrderItem[]>();\n\n    const {productions, loading} = useTypedSelector(state => state.cardVSM);\n    const {cardVSMLoading} = useActionCardVSM()\n\n    cardVSMLoading(props.data);\n\nlet listProduct = null\n\nconsole.log(\"data = \",props.data);\n/*\n    \n    let listProduct = props.data.map((item: IDataVSM, index: number)=>{\n        \n        return(\n            <Card key={index} sx={{marginBottom: '150px'}}>\n                <CardHeader\n                    action={\n                        <IconButton aria-label=\"settings\">\n                            <SettingsIcon />\n                        </IconButton>\n                    }\n                    title={item.name}\n                    sx={{fontWeight: 'bold',color: 'white', backgroundColor: '#575757'}}\n                >\n                </CardHeader>\n                <CardContent sx={{backgroundColor: 'rgba(0, 0, 0, .03)'}}>\n                    <ViewCard sections={item.sections}/>\n                </CardContent>\n            </Card>\n\n        )\n    })\n    */\n    return(\n       <div>\n           {listProduct}\n       </div>\n    )\n\n}\n\n\nexport default ViewOrderCard;"]},"metadata":{},"sourceType":"module"}