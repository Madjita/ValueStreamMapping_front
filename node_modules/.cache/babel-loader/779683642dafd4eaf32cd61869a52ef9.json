{"ast":null,"code":"var _jsxFileName = \"/Users/sergeismogliuk/Documents/Project/Project_node/Diplom/react-diplom/react-diplom/src/components/ListView/ListView.js\";\nimport React from 'react';\nimport ListItem from \"./ListItem\";\nimport { Conxtext, ListActiveConsumer } from \"../../ListActiveContextProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ListView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this._showChoices = () => {\n      return this.context.ListActive.map((item, i) => {\n        return /*#__PURE__*/_jsxDEV(ListItem, {\n          title: item.choice_name,\n          checked: item.isChecked,\n          size: 50,\n          onIconPress: () => {},\n          onPress: () => {\n            this.context.ListActive.map((item2, j) => {\n              item2.isSelected = false;\n            });\n            this.context.ListActive[i].isSelected = true;\n            this.setState({\n              selected: !this.state.selected\n            });\n          },\n          isSelected: this.context.ListActive[i].isSelected,\n          MyKey: item.choice_id\n        }, item.choice_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this);\n      });\n    };\n\n    this.escFunction = this.escFunction.bind(this);\n    this.state = {\n      selected: false\n    };\n  }\n\n  escFunction(event) {\n    if (event.keyCode === 38) {\n      //Do whatever when esc is pressed\n      // this.context.\n      let list = this.context.ListActive;\n      let object = list.find(item => item.isSelected === true);\n\n      if (object !== -1) {\n        return;\n      }\n\n      let position = list.indexOf(object);\n\n      if (position < list.length) {\n        object.isSelected = false;\n        list[position - 1].isSelected = true;\n      } else {\n        object.isSelected = false;\n      }\n\n      console.log(\"dsfasdf\", this.context.ListActive, object, position);\n      this.setState({\n        selected: !this.state.selected\n      });\n    }\n  }\n\n  componentDidMount() {\n    console.log(\"componentDidMount\");\n    document.addEventListener(\"keydown\", this.escFunction, false);\n  }\n\n  componentWillUnmount() {\n    console.log(\"componentWillUnmount\");\n    document.removeEventListener(\"keydown\", this.escFunction, false);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ListActiveConsumer, {\n        children: context => /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: this._showChoices()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nListView.contextType = Conxtext;\nexport default ListView;","map":{"version":3,"sources":["/Users/sergeismogliuk/Documents/Project/Project_node/Diplom/react-diplom/react-diplom/src/components/ListView/ListView.js"],"names":["React","ListItem","Conxtext","ListActiveConsumer","ListView","PureComponent","constructor","props","_showChoices","context","ListActive","map","item","i","choice_name","isChecked","item2","j","isSelected","setState","selected","state","choice_id","escFunction","bind","event","keyCode","list","object","find","position","indexOf","length","console","log","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","render","contextType"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport ListItem from \"./ListItem\"\n\nimport  {Conxtext,ListActiveConsumer} from \"../../ListActiveContextProvider\"\n\nclass ListView extends React.PureComponent {\n    constructor(props) {\n      super(props);\n      this.escFunction = this.escFunction.bind(this);\n      this.state = {\n        selected: false,\n      }\n    }\n\n    static contextType = Conxtext\n\n    _showChoices = () => {\n      return this.context.ListActive.map((item, i) => {\n        return (\n            <ListItem\n                title={item.choice_name}\n                checked={item.isChecked}\n                size={50}\n                onIconPress={() => {}}\n                onPress={() => {\n\n                  this.context.ListActive.map((item2,j) =>{\n                    item2.isSelected = false;\n                  });\n                  this.context.ListActive[i].isSelected = true;\n                  this.setState({ selected: !this.state.selected});\n\n                }}\n                isSelected={this.context.ListActive[i].isSelected}\n                key={item.choice_id}\n                MyKey = {item.choice_id}\n            />\n        );\n      });\n    };\n\n    escFunction(event){\n      if(event.keyCode === 38) {\n        //Do whatever when esc is pressed\n\n       // this.context.\n       \n\n       let list = this.context.ListActive;\n\n       let object = list.find(item => item.isSelected === true)\n\n       if(object !== -1)\n       {\n         return;\n       }\n       let position = list.indexOf(object)\n\n       if(position < list.length )\n       {\n         object.isSelected = false;\n         list[position-1].isSelected = true;\n       }\n       else\n       {\n        object.isSelected = false;\n       }\n\n       console.log(\"dsfasdf\",this.context.ListActive,object,position)\n\n\n      this.setState({ selected: !this.state.selected});\n\n       \n      }\n    }\n    componentDidMount(){\n      console.log(\"componentDidMount\")\n      document.addEventListener(\"keydown\", this.escFunction, false);\n    }\n    componentWillUnmount(){\n      console.log(\"componentWillUnmount\")\n      document.removeEventListener(\"keydown\", this.escFunction, false);\n    }\n\n    render() {\n      return (\n        <div>\n          <ListActiveConsumer>\n          {context => (\n            <ul>{this._showChoices()}</ul>\n          )}\n          </ListActiveConsumer>  \n        </div>\n      );\n    }\n  }\n\n  export default ListView;"]},"metadata":{},"sourceType":"module"}