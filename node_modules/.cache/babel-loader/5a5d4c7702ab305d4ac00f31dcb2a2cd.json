{"ast":null,"code":"var _jsxFileName = \"/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/CustomizedAccordiongsHeader.tsx\",\n    _s = $RefreshSig$();\n\nimport moment from 'moment';\nimport React, { useState } from 'react';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport ArchiveIcon from '@material-ui/icons/Archive';\nimport StopIcon from '@material-ui/icons/Stop';\nimport WorkIcon from '@material-ui/icons/Work';\nimport ip from '../global';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet URL = 'ws://' + ip + ':5001/wsItem';\n\nconst CustomizedAccordiongsHeader = props => {\n  _s();\n\n  const [order, setOrder] = useState(props.data); //props.data\n\n  const [bad, setBad] = useState(false);\n  const [textPeriod, setTextPeriod] = useState(\"\");\n  React.useEffect(() => {\n    setOrder(props.data);\n  }, [props.data]); //const {orders, loading} = useTypedSelector(state => state.orders);\n  //const {updateInfoOrder} = useActionOrders()\n  //const prevOrder = usePrevious(order) as IDataOrder | undefined;\n\n  /* React.useEffect(() => {\n        const timer = setTimeout(() => updateInfoOrder(order as IDataOrder), 1000); \n        return () => {\n          clearTimeout(timer);\n        };  \n    })*/\n\n  /* React.useEffect(() => {\n        if(prevOrder != undefined)\n        {\n            if(prevOrder.tActual  != order.tActual)\n            {\n                setOrder(props.data)\n            }\n        }\n    },[props.data])*/\n\n  /* console.log(prevOrder, props.data)\n   if(prevOrder != undefined)\n   {\n          \n    }*/\n  ///\n\n  /*\n      const socket = React.useRef(null)  as any;\n      const [reconnect, setRecconect] = React.useState(false);\n    \n        React.useEffect(() => {\n  \t\tconsole.log(\"Set socket after order= \", socket.current);\n  \t\tif (!socket.current || reconnect === false) {\n  \t\t\tconsole.log(\"Set socket = \", socket.current);\n  \t\t\tsocket.current = new WebSocket(URL) ;\n  \t\t\tsocket.current.onmessage = (e: any) => {\n  \t\t\t\t\n                 \n  \t\t\t\tconst OrdersFromServer = JSON.parse(e.data) as IDataOrder;  \n  \t\t\t\t//console.log(\"e\", OrdersFromServer);\n                  //console.log(\"e order\", order);\n  \t\t\t\tsetOrder(OrdersFromServer);\n  \t\t\t};\n  \n  \t\t\tsocket.current.onopen = () => {\n  \t\t\t\t// on connecting, do nothing but log it to the console\n  \t\t\t\tconsole.log('connected')\n  \t\t\t\tsocket.current.send(JSON.stringify({ id: props.data.id}));\n  \t\t\t}\n  \n  \t\t\t\n  \n  \t\t\tsocket.current.onerror = (e : any) => {\n  \t\t\t\tconsole.log(\"eror\", e.data);\n          console.log(\"CONNECTION CLOSED\", e.data);\n  \t\t\t\tsocket.current.close(1000, \"\");\n  \n          setRecconect(true);\n  \t\t\t};\n  \n  \t\t\tsocket.current.onclose = (e : any)=>{\n  \t\t\t\tconsole.log(\"CONNECTION CLOSED\", e.data);\n  \t\t\t\tsocket.current.close(1000, \"\");\n  \n  \t\t\t\tsetRecconect(true);\n  \t\t\t}\n  \t\t}\n  \t\treturn () => {\n  \t\t  if (socket.current) {\n  \t\t\tsocket.current.close(1000, \"\");\n  \t\t  }\n  \t\t};\n  \t  }, [socket,reconnect]);\n  \n  \n        if(order === null || order === undefined)\n        {\n            return (\n               <p>Не нашел</p>\n            )\n        }\n        */\n  //console.log(\"rerender Order = \", order?.id)\n\n  /* if(order?.tActual  != props.data.tActual)\n   {\n       setOrder(props.data)\n   }*/\n\n  const {\n    name,\n    tActual,\n    tPlan,\n    tFuture\n  } = order;\n  let timeTActual = moment.unix(tActual).utc().format('H:m:s');\n  let timeTPlan = moment.unix(tPlan).utc().format('H:m:s');\n\n  const ConvertPeriodToString = timePeriod => {\n    var list = timePeriod.split(' ');\n    let text = timePeriod; //console.log(list);\n\n    if (list[0] === 'in') {\n      if (list[1] === 'a') {\n        text = \"Отставание на несколько сукунд\";\n\n        if (list[2] === 'minute') {\n          text = \"Отставание на 1 м\";\n        }\n      } else {\n        let t = list[1];\n        text = \"Отставание на \" + t;\n\n        switch (list[2]) {\n          case \"hours\":\n            text += \" ч\";\n            break;\n\n          case \"minutes\":\n            text += \" м\";\n            break;\n        }\n      } // console.log(text)\n\n    } else {\n      if (list[0] === 'a') {\n        text = \"В запасе много времени\";\n\n        if (list[2] === 'minute') {\n          text = \"Отставание на 1 м\";\n        }\n      } else {\n        text = \"В запасе \" + list[0];\n\n        switch (list[1]) {\n          case \"hours\":\n            text += \" ч\";\n            break;\n\n          case \"minutes\":\n            text += \" м\";\n            break;\n        }\n      }\n    }\n\n    if (textPeriod != text) {\n      setTextPeriod(text);\n    }\n  }; //var diff = moment(\"23:07\").unix() - moment(\"22:07\").unix();\n\n\n  let timePeriod = '';\n  let timeFuture = moment.unix(tFuture).utc().format('H:m:s');\n  let text = '';\n\n  if (tPlan - tActual === 0) {\n    timePeriod = moment.unix(tPlan - tActual).utc().format('H:m:s');\n    text = '';\n  } else {\n    if (tPlan - tActual > 0) {\n      timePeriod = moment.unix(tPlan - tActual).utc().format('H:m:s');\n      text = 'Осталось';\n    } else {\n      timePeriod = moment.unix(tActual - tPlan).utc().format('H:m:s');\n      text = 'Отставание на';\n    }\n  } // let timePeriod =  moment.unix(tPlan).from(moment.unix(tActual))   //ConvertPeriodToString( moment.unix(tActual).utc().from(moment.unix(tPlan).utc()) )\n\n\n  if (tActual >= tPlan && bad === false) //&& order.orderRole === 2 || order.orderRole === 3\n    {\n      setBad(true);\n    }\n\n  if (tActual < tPlan && bad) {\n    console.log(tActual, tPlan);\n    setBad(false);\n  }\n\n  let orderRole;\n\n  switch (order.orderRole) {\n    case 1:\n      orderRole = /*#__PURE__*/_jsxDEV(PlayArrowIcon, {\n        style: {\n          color: 'gray'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 25\n      }, this);\n      break;\n\n    case 2:\n      orderRole = /*#__PURE__*/_jsxDEV(WorkIcon, {\n        style: {\n          color: 'orange'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 26\n      }, this);\n      break;\n\n    case 3:\n      orderRole = /*#__PURE__*/_jsxDEV(ArchiveIcon, {\n        style: {\n          color: 'green'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 26\n      }, this);\n      break;\n\n    case 4:\n      orderRole = /*#__PURE__*/_jsxDEV(StopIcon, {\n        style: {\n          color: 'red'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 26\n      }, this);\n      break;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'grid',\n      gridTemplateColumns: '100px auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: '1fr 1fr 1fr'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-around'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u0410\\u043A\\u0442\\u0443\\u0430\\u043B\\u044C\\u043D\\u043E\\u0435 \\u0432\\u0435\\u0440\\u043C\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            backgroundColor: bad ? 'red' : '',\n            color: bad ? \"white\" : \"\"\n          },\n          children: timeTActual\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-around'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: timePeriod\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u041F\\u043B\\u0430\\u043D\\u043E\\u0432\\u043E\\u0435 \\u0432\\u0440\\u0435\\u043C\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            backgroundColor: bad ? 'red' : '',\n            color: bad ? \"white\" : \"\"\n          },\n          children: timeTPlan\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-around'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u041F\\u0440\\u043E\\u0433\\u043D\\u043E\\u0437\\u0438\\u0440\\u0443\\u0435\\u043C\\u043E\\u0435 \\u0432\\u0440\\u0435\\u043C\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: timeFuture\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: orderRole\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 289,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CustomizedAccordiongsHeader, \"51fe8BlNVoSafnTVDspei5mrxJY=\");\n\n_c = CustomizedAccordiongsHeader;\nexport default CustomizedAccordiongsHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomizedAccordiongsHeader\");","map":{"version":3,"sources":["/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/CustomizedAccordiongsHeader.tsx"],"names":["moment","React","useState","PlayArrowIcon","ArchiveIcon","StopIcon","WorkIcon","ip","URL","CustomizedAccordiongsHeader","props","order","setOrder","data","bad","setBad","textPeriod","setTextPeriod","useEffect","name","tActual","tPlan","tFuture","timeTActual","unix","utc","format","timeTPlan","ConvertPeriodToString","timePeriod","list","split","text","t","timeFuture","console","log","orderRole","color","display","gridTemplateColumns","justifyContent","backgroundColor"],"mappings":"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","sourcesContent":["import moment from 'moment';\nimport React,{useState} from 'react'\nimport IDataOrder from './Data/IDataOrder';\n\nimport PauseIcon from '@material-ui/icons/Pause';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport ArchiveIcon from '@material-ui/icons/Archive';\nimport StopIcon from '@material-ui/icons/Stop';\nimport WorkIcon from '@material-ui/icons/Work';\n\nimport { IconButton } from '@material-ui/core';\n\nimport { useActionOrders } from '../hooks/useActionOrders';\nimport { useTypedSelector } from '../hooks/leftMenuSelector';\nimport usePrevious from '../hooks/usePrevious';\n\n\nimport ip from '../global'\nlet URL = 'ws://'+ip+':5001/wsItem';\n\ninterface IDataHeader{\n    name?: string,\n    TActual: number,\n    TPlan: number\n}\n\n\n\nconst CustomizedAccordiongsHeader = (props:{data: IDataOrder})  => \n{\n    const [order, setOrder] = useState<IDataOrder>(props.data); //props.data\n\n    const [bad,setBad] = useState(false);\n    const [textPeriod,setTextPeriod] = useState(\"\");\n\n\n    React.useEffect(() => {\n        setOrder(props.data);\n    }, [props.data]);\n\n\n  \n\n    //const {orders, loading} = useTypedSelector(state => state.orders);\n    //const {updateInfoOrder} = useActionOrders()\n\n    //const prevOrder = usePrevious(order) as IDataOrder | undefined;\n\n  /* React.useEffect(() => {\n        const timer = setTimeout(() => updateInfoOrder(order as IDataOrder), 1000); \n        return () => {\n          clearTimeout(timer);\n        };  \n    })*/\n    \n\n  /* React.useEffect(() => {\n        if(prevOrder != undefined)\n        {\n            if(prevOrder.tActual  != order.tActual)\n            {\n                setOrder(props.data)\n            }\n        }\n    },[props.data])*/\n\n   /* console.log(prevOrder, props.data)\n    if(prevOrder != undefined)\n    {\n           \n     }*/\n\n///\n\n/*\n    const socket = React.useRef(null)  as any;\n    const [reconnect, setRecconect] = React.useState(false);\n  \n      React.useEffect(() => {\n\t\tconsole.log(\"Set socket after order= \", socket.current);\n\t\tif (!socket.current || reconnect === false) {\n\t\t\tconsole.log(\"Set socket = \", socket.current);\n\t\t\tsocket.current = new WebSocket(URL) ;\n\t\t\tsocket.current.onmessage = (e: any) => {\n\t\t\t\t\n               \n\t\t\t\tconst OrdersFromServer = JSON.parse(e.data) as IDataOrder;  \n\t\t\t\t//console.log(\"e\", OrdersFromServer);\n                //console.log(\"e order\", order);\n\t\t\t\tsetOrder(OrdersFromServer);\n\t\t\t};\n\n\t\t\tsocket.current.onopen = () => {\n\t\t\t\t// on connecting, do nothing but log it to the console\n\t\t\t\tconsole.log('connected')\n\t\t\t\tsocket.current.send(JSON.stringify({ id: props.data.id}));\n\t\t\t}\n\n\t\t\t\n\n\t\t\tsocket.current.onerror = (e : any) => {\n\t\t\t\tconsole.log(\"eror\", e.data);\n        console.log(\"CONNECTION CLOSED\", e.data);\n\t\t\t\tsocket.current.close(1000, \"\");\n\n        setRecconect(true);\n\t\t\t};\n\n\t\t\tsocket.current.onclose = (e : any)=>{\n\t\t\t\tconsole.log(\"CONNECTION CLOSED\", e.data);\n\t\t\t\tsocket.current.close(1000, \"\");\n\n\t\t\t\tsetRecconect(true);\n\t\t\t}\n\t\t}\n\t\treturn () => {\n\t\t  if (socket.current) {\n\t\t\tsocket.current.close(1000, \"\");\n\t\t  }\n\t\t};\n\t  }, [socket,reconnect]);\n\n\n      if(order === null || order === undefined)\n      {\n          return (\n             <p>Не нашел</p>\n          )\n      }\n      */\n\n      //console.log(\"rerender Order = \", order?.id)\n\n\n    /* if(order?.tActual  != props.data.tActual)\n     {\n         setOrder(props.data)\n     }*/\n\n   \n   \n    const {\n        name,\n        tActual,\n        tPlan,\n        tFuture} = order as IDataOrder;\n  \n\n    \n\n    let timeTActual = moment.unix(tActual).utc().format('H:m:s')\n    let timeTPlan = moment.unix(tPlan).utc().format('H:m:s')\n    \n\n\n    const ConvertPeriodToString = (timePeriod: any)=>\n    {\n        var list = timePeriod.split(' ')\n\n        let text = timePeriod;\n        //console.log(list);\n\n        if(list[0] === 'in')\n        {\n\n\n            if(list[1] === 'a')\n            {\n                text = \"Отставание на несколько сукунд\"\n                if(list[2] === 'minute')\n                {\n                    text = \"Отставание на 1 м\"\n                }\n                \n            }\n            else\n            {\n                let t =list[1];\n                text = \"Отставание на \"+ t\n\n                switch(list[2])\n                {\n                    case \"hours\": \n                        text += \" ч\"\n                    break;\n                    case \"minutes\": \n                        text += \" м\"\n                    break;\n                    \n                }\n            }\n           // console.log(text)\n        }\n        else\n        {\n            if(list[0] === 'a')\n            {\n                text = \"В запасе много времени\"\n                if(list[2] === 'minute')\n                {\n                    text = \"Отставание на 1 м\"\n                }\n                \n            }\n            else\n            {\n                text = \"В запасе \" + list[0];\n                switch(list[1])\n                {\n                    case \"hours\": \n                        text += \" ч\"\n                    break;\n                    case \"minutes\": \n                        text += \" м\"\n                    break;\n                    \n                }\n            }\n           \n        }\n\n        if(textPeriod != text)\n        {\n            setTextPeriod(text);\n        }\n       \n    }\n\n  //var diff = moment(\"23:07\").unix() - moment(\"22:07\").unix();\n  \n  let timePeriod = '';\n  let timeFuture = moment.unix(tFuture).utc().format('H:m:s');\n  let text = '';\n  if(tPlan - tActual  === 0)\n  {\n    timePeriod  = moment.unix(tPlan-tActual).utc().format('H:m:s');\n    text = '';\n  }\n  else\n  {\n    if(tPlan - tActual > 0)\n    {\n           timePeriod   = moment.unix(tPlan-tActual).utc().format('H:m:s');\n           text = 'Осталось';\n    }\n    else\n    {\n          timePeriod   = moment.unix(tActual-tPlan).utc().format('H:m:s');\n          text = 'Отставание на';\n    }\n  }\n \n  \n\n// let timePeriod =  moment.unix(tPlan).from(moment.unix(tActual))   //ConvertPeriodToString( moment.unix(tActual).utc().from(moment.unix(tPlan).utc()) )\n\n  \n    if(tActual >= tPlan && bad === false ) //&& order.orderRole === 2 || order.orderRole === 3\n    {\n        setBad(true);\n    }\n\n    if(tActual < tPlan && bad)\n    {\n        console.log(tActual,tPlan);\n        setBad(false);\n    }\n\n\n    let orderRole;\n\n    switch(order.orderRole)\n    {\n        case 1:\n            orderRole = <PlayArrowIcon style={{color: 'gray'}}/>\n        break;\n        case 2:\n            orderRole =  <WorkIcon style={{color: 'orange'}}/>\n        break;\n        case 3:\n            orderRole =  <ArchiveIcon style={{color: 'green'}}/>\n        break;\n        case 4:\n            orderRole =  <StopIcon style={{color: 'red'}}/>\n        break;\n    }\n\n    return (\n        <div style={{display: 'grid', gridTemplateColumns: '100px auto',}}>\n                <p>{name}</p>\n                <div style={{display: 'grid', gridTemplateColumns: '1fr 1fr 1fr'}}>\n                    <div style={{display: 'flex', justifyContent:'space-around'}} >\n                        <p>Актуальное вермя</p>\n                        <p style ={{backgroundColor: bad ? 'red': '', color: bad ? \"white\": \"\" }}>{timeTActual}</p>\n                    </div>\n                    <div style={{display: 'flex', justifyContent:'space-around'}} >\n                        <p>{text}</p>\n                        <p>{timePeriod}</p>\n                        <p>Плановое время</p>\n                        <p style ={{backgroundColor: bad ? 'red': '', color: bad ? \"white\": \"\" }}>{timeTPlan}</p>\n                    </div>\n                    <div style={{display: 'flex', justifyContent:'space-around'}} >\n                        <p>Прогнозируемое время</p>\n                        <p>{timeFuture}</p>\n                        <p>{orderRole}</p>\n                    </div>\n                </div>\n        </div>\n    )\n}\n\n\nexport default CustomizedAccordiongsHeader;"]},"metadata":{},"sourceType":"module"}