{"ast":null,"code":"var _jsxFileName = \"/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Pages/PageNewAlgoritm.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport serverApiHost from \"../../global\";\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%'\n    },\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `vertical-tabpanel-${index}`,\n    \"aria-labelledby\": `vertical-tab-${index}`,\n    ...other,\n    children: value === index && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 7\n  }, this);\n}\n\n_c = TabPanel;\n\nfunction a11yProps(index) {\n  return {\n    id: `vertical-tab-${index}`,\n    'aria-controls': `vertical-tabpanel-${index}`\n  };\n}\n\nconst PageNewAlgoritm = () => {\n  _s();\n\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const tabStyle = {\n    default_tab: {\n      color: '#68C222',\n      width: '33.3%',\n      backgroundColor: '#FFFFFF',\n      fontSize: 15\n    },\n    active_tab: {\n      color: 'grey700',\n      width: '33.3%',\n      backgroundColor: '#FFFFFF',\n      fontSize: 15\n    }\n  };\n\n  const getStyle = isActive => {\n    return isActive ? tabStyle.active_tab : tabStyle.default_tab;\n  };\n\n  const [dataCards, setDataCards] = useState();\n\n  const GetInformationAboutCard = async () => {\n    const response = await axios.get('http://' + serverApiHost + ':5000/api/cardVSM/view');\n\n    if (response.status != 200) {\n      return;\n    }\n\n    let content = response.data;\n    setDataCards(content);\n    console.log(\"LOADING = \", content);\n  };\n\n  useEffect(() => {\n    GetInformationAboutCard();\n  }, []);\n\n  if (dataCards === undefined) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 16\n    }, this);\n  }\n\n  console.log(\"LOADING  2= \", dataCards);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      flexGrow: 1,\n      bgcolor: 'background.paper',\n      display: 'flex',\n      height: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Tabs, {\n      orientation: \"vertical\",\n      variant: \"scrollable\",\n      value: value,\n      onChange: handleChange,\n      \"aria-label\": \"Vertical tabs example\",\n      sx: {\n        borderRight: 1,\n        borderColor: 'divider'\n      },\n      TabIndicatorProps: {\n        style: {\n          background: 'green',\n          color: 'black'\n        }\n      },\n      children: dataCards === null || dataCards === void 0 ? void 0 : dataCards.sectionLogic_views.map((item, i) => {\n        return /*#__PURE__*/_jsxDEV(Tab, {\n          label: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: value === i ? 'white' : 'black',\n              width: '100%',\n              wordWrap: '-moz-initial'\n            },\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 52\n          }, this),\n          ...a11yProps(0),\n          sx: {\n            width: '100%',\n            backgroundColor: value === i ? 'gray' : 'white'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 38\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }, this), dataCards === null || dataCards === void 0 ? void 0 : dataCards.sectionLogic_views.map((item, i) => {\n      return /*#__PURE__*/_jsxDEV(TabPanel, {\n        value: value,\n        index: i\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 25\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PageNewAlgoritm, \"qF6HMyPHUXp/heVISLFGnGfa5fs=\");\n\n_c2 = PageNewAlgoritm;\nexport default PageNewAlgoritm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"PageNewAlgoritm\");","map":{"version":3,"sources":["/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Pages/PageNewAlgoritm.tsx"],"names":["React","useEffect","useState","axios","serverApiHost","Tabs","Tab","Typography","Box","TabPanel","props","children","value","index","other","width","p","a11yProps","id","PageNewAlgoritm","setValue","handleChange","event","newValue","tabStyle","default_tab","color","backgroundColor","fontSize","active_tab","getStyle","isActive","dataCards","setDataCards","GetInformationAboutCard","response","get","status","content","data","console","log","undefined","flexGrow","bgcolor","display","height","borderRight","borderColor","style","background","sectionLogic_views","map","item","i","wordWrap","name"],"mappings":";;;AAAA,OAAQA,KAAR,IAAiBC,SAAjB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,cAA1B;AASA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;;;AAyEE,SAASC,QAAT,CAAkBC,KAAlB,EAAwC;AACtC,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA,KAAnB;AAA0B,OAAGC;AAA7B,MAAuCJ,KAA7C;AAEA,sBACE;AACE,IAAA,KAAK,EAAG;AAACK,MAAAA,KAAK,EAAE;AAAR,KADV;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,MAAM,EAAEH,KAAK,KAAKC,KAHpB;AAIE,IAAA,EAAE,EAAG,qBAAoBA,KAAM,EAJjC;AAKE,uBAAkB,gBAAeA,KAAM,EALzC;AAAA,OAMMC,KANN;AAAA,cAQGF,KAAK,KAAKC,KAAV,iBACC,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE;AAAEG,QAAAA,CAAC,EAAE;AAAL,OAAT;AAAA,6BACE,QAAC,UAAD;AAAA,kBAAaL;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AATJ;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;KAnBQF,Q;;AAqBT,SAASQ,SAAT,CAAmBJ,KAAnB,EAAkC;AAChC,SAAO;AACLK,IAAAA,EAAE,EAAG,gBAAeL,KAAM,EADrB;AAEL,qBAAkB,qBAAoBA,KAAM;AAFvC,GAAP;AAID;;AAGH,MAAMM,eAAe,GAAG,MACxB;AAAA;;AACI,QAAM,CAACP,KAAD,EAAQQ,QAAR,IAAoBpB,KAAK,CAACE,QAAN,CAAe,CAAf,CAA1B;;AACA,QAAMmB,YAAY,GAAG,CAACC,KAAD,EAA8BC,QAA9B,KAAmD;AACtEH,IAAAA,QAAQ,CAACG,QAAD,CAAR;AACD,GAFD;;AAKA,QAAMC,QAAQ,GAAG;AACbC,IAAAA,WAAW,EAAC;AACRC,MAAAA,KAAK,EAAE,SADC;AAERX,MAAAA,KAAK,EAAE,OAFC;AAGRY,MAAAA,eAAe,EAAE,SAHT;AAIRC,MAAAA,QAAQ,EAAE;AAJF,KADC;AAObC,IAAAA,UAAU,EAAC;AACPH,MAAAA,KAAK,EAAE,SADA;AAEPX,MAAAA,KAAK,EAAE,OAFA;AAGPY,MAAAA,eAAe,EAAE,SAHV;AAIPC,MAAAA,QAAQ,EAAE;AAJH;AAPE,GAAjB;;AAeA,QAAME,QAAQ,GAAKC,QAAD,IAAoB;AAClC,WAAOA,QAAQ,GAAGP,QAAQ,CAACK,UAAZ,GAAyBL,QAAQ,CAACC,WAAjD;AACH,GAFD;;AAKA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4B/B,QAAQ,EAA1C;;AAEA,QAAMgC,uBAAuB,GAAG,YAAY;AAExC,UAAMC,QAAQ,GAAG,MAAMhC,KAAK,CAACiC,GAAN,CAAU,YAAUhC,aAAV,GAAwB,wBAAlC,CAAvB;;AAEA,QAAG+B,QAAQ,CAACE,MAAT,IAAmB,GAAtB,EACA;AACE;AACD;;AAED,QAAIC,OAAO,GAAGH,QAAQ,CAACI,IAAvB;AACAN,IAAAA,YAAY,CAACK,OAAD,CAAZ;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBH,OAAzB;AACH,GAZD;;AAeArC,EAAAA,SAAS,CAAC,MAAM;AACXiC,IAAAA,uBAAuB;AAC3B,GAFQ,EAEP,EAFO,CAAT;;AAKA,MAAGF,SAAS,KAAKU,SAAjB,EACA;AACI,wBAAO;AAAA;AAAA;AAAA;AAAA,YAAP;AAGH;;AAEDF,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2BT,SAA3B;AACA,sBACI,QAAC,GAAD;AACA,IAAA,EAAE,EAAE;AAAEW,MAAAA,QAAQ,EAAE,CAAZ;AAAeC,MAAAA,OAAO,EAAE,kBAAxB;AAA4CC,MAAAA,OAAO,EAAE,MAArD;AAA6DC,MAAAA,MAAM,EAAE;AAArE,KADJ;AAAA,4BAGQ,QAAC,IAAD;AACA,MAAA,WAAW,EAAC,UADZ;AAEA,MAAA,OAAO,EAAC,YAFR;AAGA,MAAA,KAAK,EAAElC,KAHP;AAIA,MAAA,QAAQ,EAAES,YAJV;AAKA,oBAAW,uBALX;AAMA,MAAA,EAAE,EAAE;AAAE0B,QAAAA,WAAW,EAAE,CAAf;AAAkBC,QAAAA,WAAW,EAAE;AAA/B,OANJ;AAOA,MAAA,iBAAiB,EAAE;AAACC,QAAAA,KAAK,EAAE;AAACC,UAAAA,UAAU,EAAC,OAAZ;AAAoBxB,UAAAA,KAAK,EAAE;AAA3B;AAAR,OAPnB;AAAA,gBASKM,SATL,aASKA,SATL,uBASKA,SAAS,CAAEmB,kBAAX,CAA8BC,GAA9B,CAAmC,CAACC,IAAD,EAAiBC,CAAjB,KAA+B;AAC3D,4BAAS,QAAC,GAAD;AACO,UAAA,KAAK,eAAE;AAAM,YAAA,KAAK,EAAE;AAAE5B,cAAAA,KAAK,EAAEd,KAAK,KAAK0C,CAAV,GAAa,OAAb,GAAqB,OAA9B;AAAuCvC,cAAAA,KAAK,EAAE,MAA9C;AAAsDwC,cAAAA,QAAQ,EAAE;AAAhE,aAAb;AAAA,sBAAgGF,IAAI,CAACG;AAArG;AAAA;AAAA;AAAA;AAAA,kBADd;AAAA,aAEWvC,SAAS,CAAC,CAAD,CAFpB;AAGO,UAAA,EAAE,EAAE;AAACF,YAAAA,KAAK,EAAE,MAAR;AAAgBY,YAAAA,eAAe,EAAEf,KAAK,KAAK0C,CAAV,GAAc,MAAd,GAAsB;AAAvD;AAHX;AAAA;AAAA;AAAA;AAAA,gBAAT;AAIH,OALJ;AATL;AAAA;AAAA;AAAA;AAAA,YAHR,EAmBKtB,SAnBL,aAmBKA,SAnBL,uBAmBKA,SAAS,CAAEmB,kBAAX,CAA8BC,GAA9B,CAAmC,CAACC,IAAD,EAAiBC,CAAjB,KAA+B;AAC/D,0BAAQ,QAAC,QAAD;AAAU,QAAA,KAAK,EAAE1C,KAAjB;AAAwB,QAAA,KAAK,EAAE0C;AAA/B;AAAA;AAAA;AAAA;AAAA,cAAR;AAGH,KAJA,CAnBL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA4BH,CAtFD;;GAAMnC,e;;MAAAA,e;AAyFN,eAAeA,eAAf","sourcesContent":["import  React, { useEffect,useState } from 'react'\nimport axios from 'axios'\nimport serverApiHost from \"../../global\";\n\n\nimport ViewAllCards from '../Card/AllCardsView/ViewAllCards'\nimport IDataCardVSM from '../../Component/Data/IDataCardVSM'\nimport { Divider, ListItemIcon, ListItemText, MenuItem, MenuList } from '@material-ui/core';\nimport { Check } from '@material-ui/icons';\n\n\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport { MyCards } from '../../type/useOrdersType';\n\n//////////\n\n\n\n\ninterface User_view\n{\n    name: string,\n    userRole: number\n\n}\n\ninterface Etap_view\n{\n    name: string,\n    description: string,\n    actualTimeCircle: number,\n    defaultTimeCircle: number,\n    actualTimePreporation: number,\n    defaultTimePreporation: number,\n    actualAvailability: number,\n    defaultAvailability: number,\n    parallel: boolean,\n    users: User_view[]\n}\n\ninterface Buffer_view\n{\n    name: string,\n    type: string,\n    minHold: number,\n    max: number,\n    value: number,\n    valueDefault: number,      \n    replenishmentSec: number,\n    replenishmentCount: number\n}\n\ninterface SectionEtap_view\n{\n    buffer_view: Buffer_view,\n    etap_view: Etap_view\n}\n\n\ninterface SectionLogic_view\n{\n    sectionEtap_views: SectionEtap_view[]\n}\n\n//Модель данных для отображения\ninterface Card_view\n{\n    name: string,\n    sectionLogic_views: SectionLogic_view[]\n}\n\n\n\n/////////\n\n\n\n\ninterface TabPanelProps {\n    children?: React.ReactNode;\n    index: number;\n    value: number;\n  }\n\n  function TabPanel(props: TabPanelProps) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <div\n        style= {{width: '100%'}}\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`vertical-tabpanel-${index}`}\n        aria-labelledby={`vertical-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n          <Box sx={{ p: 3 }}>\n            <Typography>{children}</Typography>\n          </Box>\n        )}\n      </div>\n    );\n  }\n  \n  function a11yProps(index: number) {\n    return {\n      id: `vertical-tab-${index}`,\n      'aria-controls': `vertical-tabpanel-${index}`,\n    };\n  }\n  \n\nconst PageNewAlgoritm = () =>\n{\n    const [value, setValue] = React.useState(0);\n    const handleChange = (event: React.SyntheticEvent, newValue: number) => {\n      setValue(newValue);\n    };\n\n\n    const tabStyle = {\n        default_tab:{\n            color: '#68C222',\n            width: '33.3%',\n            backgroundColor: '#FFFFFF',\n            fontSize: 15\n        },\n        active_tab:{\n            color: 'grey700',\n            width: '33.3%',\n            backgroundColor: '#FFFFFF',\n            fontSize: 15\n        }\n    };\n\n    const getStyle =  (isActive: any)  => {\n        return isActive ? tabStyle.active_tab : tabStyle.default_tab\n    }\n    \n\n    const [dataCards, setDataCards] = useState<Card_view>()\n\n    const GetInformationAboutCard = async () => {\n       \n        const response = await axios.get('http://'+serverApiHost+':5000/api/cardVSM/view')\n\n        if(response.status != 200)\n        {\n          return ;\n        }\n\n        let content = response.data as Card_view;\n        setDataCards(content);\n        console.log(\"LOADING = \",content)\n    }\n\n\n    useEffect(() => {\n         GetInformationAboutCard();\n    },[])\n    \n\n    if(dataCards === undefined)\n    {\n        return <div>\n\n        </div>;\n    }   \n\n    console.log(\"LOADING  2= \",dataCards)\n    return (\n        <Box\n        sx={{ flexGrow: 1, bgcolor: 'background.paper', display: 'flex', height: '100%' }}\n        >\n                <Tabs\n                orientation=\"vertical\"\n                variant=\"scrollable\"\n                value={value}\n                onChange={handleChange}\n                aria-label=\"Vertical tabs example\"\n                sx={{ borderRight: 1, borderColor: 'divider',}}\n                TabIndicatorProps={{style: {background:'green',color: 'black' }}}\n            >\n                    {dataCards?.sectionLogic_views.map( (item: Card_view,i: number) => {\n                            return   <Tab  \n                                            label={<span style={{ color: value === i ?'white':'black', width: '100%', wordWrap: '-moz-initial' }}>{item.name}</span>}\n                                            {...a11yProps(0)}  \n                                            sx={{width: '100%', backgroundColor: value === i ? 'gray': 'white', }}/>\n                        })}\n            </Tabs>\n            {dataCards?.sectionLogic_views.map( (item: Card_view,i: number) => {\n                return  <TabPanel value={value} index={i}>\n                    {/*<ViewAllCards key={i} item={item}/>*/}\n                </TabPanel>\n            })}\n\n        </Box>\n    )   \n}\n\n\nexport default PageNewAlgoritm;"]},"metadata":{},"sourceType":"module"}