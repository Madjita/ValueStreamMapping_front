{"ast":null,"code":"var _jsxFileName = \"/Users/sergeismogliuk/Documents/Project/Project_node/Diplom/react-diplom/react-diplom/src/components/Diagrams/Diagram.js\";\nimport React from \"react\";\nimport { DiagramComponent, HierarchicalTree, MindMap, RadialTree, ComplexHierarchicalTree, DataBinding, Snapping, PrintAndExport, BpmnDiagrams, SymmetricLayout, ConnectorBridging, UndoRedo, LayoutAnimation, DiagramContextMenu, ConnectorEditing, Inject, SnapConstraints, DiagramTools, NodeConstraints } from \"@syncfusion/ej2-react-diagrams\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet diagramInstance = DiagramComponent;\n\nclass Diagram extends React.PureComponent {\n  constructor(_props) {\n    super(_props);\n    this.diagramInstance = diagramInstance;\n\n    this.diagramTemplate = props => {\n      if (props.id === \"node\") {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"diagram_border_cus diagram_border_cal\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"element_calander\",\n            children: [/*#__PURE__*/_jsxDEV(DateRangePickerComponent, {\n              id: \"daterangepicker\",\n              presets: datePresets,\n              placeholder: \"Select a range\",\n              startDate: start,\n              endDate: end,\n              min: minDate,\n              max: maxDate,\n              change: datachange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 38\n            }, this), \"  \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this);\n      }\n\n      if (props.id === \"pie\") {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"diagram_control\",\n          className: \"diagram_border_cus\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pane col-xs-12 col-sm-12 col-md-12 pie-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pieChartHeader\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"chart-title\",\n                children: \"Total Expenses\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                id: \"rangeDate\",\n                className: \"chart-value\",\n                children: \"Jun 1 - Dec 1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"pieChart\",\n              style: {\n                height: '100%',\n                width: '49%',\n                overflow: 'hidden',\n                float: 'left'\n              },\n              children: /*#__PURE__*/_jsxDEV(AccumulationChartComponent, {\n                style: {\n                  display: 'block'\n                },\n                ref: pies => pie = pies,\n                id: \"pieChart\",\n                width: \"100%\",\n                height: \"350px\",\n                legendSettings: acclegendSettings,\n                enableSmartLabels: true,\n                textRender: onTextRender,\n                animationComplete: onAnimateCompleted,\n                loaded: acconChartLoaded,\n                children: [/*#__PURE__*/_jsxDEV(Inject, {\n                  services: [PieSeries, AccumulationLegend, AccumulationDataLabel, AccumulationTooltip]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(AccumulationSeriesCollectionDirective, {\n                  children: /*#__PURE__*/_jsxDEV(AccumulationSeriesDirective, {\n                    xName: \"text\",\n                    yName: \"y\",\n                    startAngle: 0,\n                    legendShape: \"Circle\",\n                    endAngle: 360,\n                    innerRadius: \"50%\",\n                    radius: \"83%\",\n                    groupTo: groupValue,\n                    palettes: colorPalettes,\n                    dataLabel: dataLabel,\n                    dataSource: pieRenderingData,\n                    animation: accanimation\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"grid\",\n              style: {\n                height: '100%',\n                width: '49%',\n                overflow: 'hidden',\n                float: 'left'\n              },\n              children: /*#__PURE__*/_jsxDEV(GridComponent, {\n                id: \"legend-grid\",\n                ref: lGrids => lGrid = lGrids,\n                dataSource: pieRenderData,\n                load: onGridLoad,\n                style: {\n                  boxShadow: 'none'\n                },\n                rowTemplate: gtemplate,\n                dataBound: onGridDataBound,\n                children: [/*#__PURE__*/_jsxDEV(Inject, {\n                  services: [Page, RowDD, Toolbar, ColumnChooser, DetailRow, ColumnMenu, Selection, Edit, Sort, Group]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ColumnsDirective, {\n                  children: [/*#__PURE__*/_jsxDEV(ColumnDirective, {\n                    width: \"10%\",\n                    textAlign: \"Center\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 131,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(ColumnDirective, {\n                    width: \"50%\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(ColumnDirective, {\n                    width: \"20%\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(ColumnDirective, {\n                    width: \"20%\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 134,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this);\n      }\n    };\n\n    this.state = {\n      myStyle: _props.myStyle,\n      diagram: _props.diagram,\n      connectors: _props.connectors\n    };\n  }\n\n  // A node is created and stored in nodes array.\n  async api(ip, port, command) {\n    // GET request using fetch with async/await\n    const response = await fetch(\"http://\" + ip + \":\" + port + command);\n    const data = await response.json();\n    return data;\n  }\n\n  async create_customer(element) {\n    let http = \"http://\" + window.ip + \":\" + window.port;\n    console.log(\"element\", element.oldProperties.id);\n\n    switch (element.oldProperties.id) {\n      case \"Customer\":\n        {//api/reason_customer/insert/:Node_name_id/:offsetX/:offsetY\"\n          //const response = await fetch(http+\"/api/reason_customer/insert/\"+element.properties.id+\"/\"+element.properties.offsetX+\"/\"+element.properties.offsetY)\n          //const data = await response;\n          //return data\n        }\n\n      case \"Process\":\n        {\n          break;\n        }\n\n      case \"External_Shipment\":\n        {\n          break;\n        }\n\n      case \"Inventory_customer_supplier\":\n        {\n          break;\n        }\n\n      case \"Production_control\":\n        {\n          break;\n        }\n    }\n  }\n\n  update_position(element) {\n    var myData = [];\n    element.map(item => {\n      myData.push({\n        id: item.properties.id,\n        offsetX: item.properties.offsetX,\n        offsetY: item.properties.offsetY\n      });\n    }); //console.log(JSON.stringify(myData))\n    //api/reason_customer/insert/:Node_name_id/:offsetX/:offsetY\"\n\n    let http = \"http://\" + window.ip + \":\" + window.port; //fetch(http+\"/api/vsm/update_position/\")\n    //.then(response => response.json());\n  }\n\n  render() {\n    const {\n      myStyle\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(DiagramComponent, {\n      id: \"diagram\",\n      ref: diagram => diagramInstance = diagram,\n      width: '100%',\n      height: '100%',\n      snapSettings: {\n        constraints: SnapConstraints.None\n      } // Add node\n      ,\n      nodes: this.state.diagram,\n      connectors: this.state.connectors,\n      drop: e => {\n        //console.log(\"drop\",e)\n        //console.log(\"drop length\",e.element.annotations.length)\n        this.create_customer(e.element); //e.element.annotations[0].content = \"#1\"\n        //e.newValue[0].annotations[0].content = \"#1\"\n      },\n      positionChange: e => {\n        switch (e.state) {\n          case \"Completed\":\n            {\n              console.log(\"position\", e.source.nodes);\n              if (e.source.nodes !== undefined) this.update_position(e.source.nodes);\n              break;\n            }\n\n          case \"Progress\":\n            {\n              break;\n            }\n\n          case \"Start\":\n            {\n              break;\n            }\n        }\n      },\n      dragTargetEnd: e => {\n        console.log(\"dragTargetEnd\", e);\n      },\n      tool: DiagramTools.ZoomPan\n      /* selectionChange={(e)=>{\n       \n         console.log(\"SELECT\",e.newValue)\n       }}*/\n      ,\n      created: () => {\n        //console.log(diagramInstance.getActiveLayer())\n        //this.diagramInstance.getActiveLayer();\n        // diagramInstance.tool = DiagramTools.ZoomPan;\n        //diagramInstance.dataBind();\n        diagramInstance.scrollChange = args => {\n          //Obtains the pan status\n          let panStatus = args.panState;\n        }; //diagramInstance.tool = DiagramTools.ZoomPan;\n        //diagramInstance.dataBind();\n\n        /*diagramInstance.scrollChange = { args: IScrollChangeEventArgs => {\n        //Obtains the pan status\n        console.log(IScrollChangeEventArgs)\n        let panStatus = IScrollChangeEventArgs.panState;}}\n        }*/\n\n      } //Disables mouse over tooltip at runtime\n      ,\n      tooltip: null,\n      style: myStyle,\n      nodeTemplate: this.diagramTemplate,\n      children: /*#__PURE__*/_jsxDEV(Inject, {\n        width: '200px',\n        height: '200px',\n        services: [HierarchicalTree, MindMap, RadialTree, ComplexHierarchicalTree, DataBinding, Snapping, PrintAndExport, BpmnDiagrams, SymmetricLayout, ConnectorBridging, UndoRedo, LayoutAnimation, DiagramContextMenu, ConnectorEditing]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Diagram;","map":{"version":3,"sources":["/Users/sergeismogliuk/Documents/Project/Project_node/Diplom/react-diplom/react-diplom/src/components/Diagrams/Diagram.js"],"names":["React","DiagramComponent","HierarchicalTree","MindMap","RadialTree","ComplexHierarchicalTree","DataBinding","Snapping","PrintAndExport","BpmnDiagrams","SymmetricLayout","ConnectorBridging","UndoRedo","LayoutAnimation","DiagramContextMenu","ConnectorEditing","Inject","SnapConstraints","DiagramTools","NodeConstraints","diagramInstance","Diagram","PureComponent","constructor","props","diagramTemplate","id","datePresets","start","end","minDate","maxDate","datachange","height","width","overflow","float","display","pies","pie","acclegendSettings","onTextRender","onAnimateCompleted","acconChartLoaded","PieSeries","AccumulationLegend","AccumulationDataLabel","AccumulationTooltip","groupValue","colorPalettes","dataLabel","pieRenderingData","accanimation","lGrids","lGrid","pieRenderData","onGridLoad","boxShadow","gtemplate","onGridDataBound","Page","RowDD","Toolbar","ColumnChooser","DetailRow","ColumnMenu","Selection","Edit","Sort","Group","state","myStyle","diagram","connectors","api","ip","port","command","response","fetch","data","json","create_customer","element","http","window","console","log","oldProperties","update_position","myData","map","item","push","properties","offsetX","offsetY","render","constraints","None","e","source","nodes","undefined","ZoomPan","scrollChange","args","panStatus","panState"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { \n  DiagramComponent,\n  HierarchicalTree,\n  MindMap,\n  RadialTree,\n  ComplexHierarchicalTree,\n  DataBinding,\n  Snapping,\n  PrintAndExport,\n  BpmnDiagrams,\n  SymmetricLayout,\n  ConnectorBridging,\n  UndoRedo,\n  LayoutAnimation,\n  DiagramContextMenu,\n  ConnectorEditing,\n  Inject,\n  SnapConstraints,\n  DiagramTools,\n  NodeConstraints\n} from \"@syncfusion/ej2-react-diagrams\";\n\n\nlet diagramInstance = DiagramComponent;\n\nclass Diagram extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n          myStyle: props.myStyle,\n          diagram: props.diagram,\n          connectors: props.connectors,\n        };\n\n       \n      }\n      diagramInstance =  diagramInstance;\n      // A node is created and stored in nodes array.\n\n\n      async api(ip,port,command) {\n        // GET request using fetch with async/await\n        const response = await fetch(\"http://\"+ip+\":\"+port+command);\n        const data = await response.json();\n        return data\n      }\n\n\n      async create_customer(element)\n      {\n        let http = \"http://\"+window.ip+\":\"+window.port\n        console.log(\"element\",element.oldProperties.id);\n\n        switch(element.oldProperties.id)\n        {\n          case \"Customer\":{\n            //api/reason_customer/insert/:Node_name_id/:offsetX/:offsetY\"\n        \n            //const response = await fetch(http+\"/api/reason_customer/insert/\"+element.properties.id+\"/\"+element.properties.offsetX+\"/\"+element.properties.offsetY)\n            //const data = await response;\n            //return data\n          }\n          case \"Process\":{\n            break;\n          }\n          case \"External_Shipment\":{\n            break;\n          }\n          case \"Inventory_customer_supplier\":\n          {\n              break;\n          }\n          case \"Production_control\":\n          {\n              break;\n          }\n        }\n\n        \n        \n      }\n\n     update_position(element)\n      {\n        var myData = []\n        element.map(item =>{\n          myData.push({\n            id: item.properties.id,\n            offsetX: item.properties.offsetX,\n            offsetY: item.properties.offsetY\n          })\n        })\n\n        //console.log(JSON.stringify(myData))\n        //api/reason_customer/insert/:Node_name_id/:offsetX/:offsetY\"\n        let http = \"http://\"+window.ip+\":\"+window.port\n        //fetch(http+\"/api/vsm/update_position/\")\n        //.then(response => response.json());\n      }\n\n\n\n      diagramTemplate =(props) =>{\n        if (props.id === \"node\") {\n            return (<div className=\"diagram_border_cus diagram_border_cal\">\n          <div id=\"element_calander\"><DateRangePickerComponent id=\"daterangepicker\" presets={datePresets} placeholder='Select a range' startDate={start} endDate={end} min={minDate} max={maxDate} change={datachange}/>  </div>\n        </div>);\n        }\n        if (props.id === \"pie\") {\n            return (\n            <div id=\"diagram_control\" className=\"diagram_border_cus\">\n            <div className=\"pane col-xs-12 col-sm-12 col-md-12 pie-container\">\n              <div className=\"pieChartHeader\">\n                <p className=\"chart-title\">Total Expenses</p>\n                <p id=\"rangeDate\" className=\"chart-value\">Jun 1 - Dec 1</p>\n              </div>\n              <div id=\"pieChart\" style={{ height: '100%', width: '49%', overflow: 'hidden', float: 'left' }}>\n                <AccumulationChartComponent style={{ display: 'block' }} ref={pies => (pie = pies)} id='pieChart' width='100%' height='350px' legendSettings={acclegendSettings} enableSmartLabels={true} textRender={onTextRender} animationComplete={onAnimateCompleted} loaded={acconChartLoaded}>\n                  <Inject services={[PieSeries, AccumulationLegend, AccumulationDataLabel, AccumulationTooltip]}/>\n                  <AccumulationSeriesCollectionDirective>\n                    <AccumulationSeriesDirective xName='text' yName='y' startAngle={0} legendShape='Circle' endAngle={360} innerRadius='50%' radius='83%' groupTo={groupValue} palettes={colorPalettes} dataLabel={dataLabel} dataSource={pieRenderingData} animation={accanimation}>\n                    </AccumulationSeriesDirective>\n                  </AccumulationSeriesCollectionDirective>\n                </AccumulationChartComponent>\n              </div>\n              <div id=\"grid\" style={{ height: '100%', width: '49%', overflow: 'hidden', float: 'left' }}>\n                <GridComponent id=\"legend-grid\" ref={lGrids => (lGrid = lGrids)} dataSource={pieRenderData} load={onGridLoad} style={{ boxShadow: 'none' }} rowTemplate={gtemplate} dataBound={onGridDataBound}>\n                  <Inject services={[Page, RowDD, Toolbar, ColumnChooser, DetailRow, ColumnMenu, Selection, Edit, Sort, Group]}/>\n                  <ColumnsDirective>\n                    <ColumnDirective width='10%' textAlign=\"Center\"/>\n                    <ColumnDirective width='50%'/>\n                    <ColumnDirective width='20%'/>\n                    <ColumnDirective width='20%'/>\n                  </ColumnsDirective>\n                </GridComponent>\n              </div>\n            </div>\n          </div>);\n        }\n    }\n\n       \n      \n\n      render() {\n\n        const {myStyle} = this.state\n\n\n        return (\n        <DiagramComponent  id=\"diagram\" ref={diagram => (diagramInstance = diagram)}\n        width = {'100%'}\n        height = {'100%'}\n        snapSettings={{ constraints: SnapConstraints.None }}\n        // Add node\n        nodes = {\n          this.state.diagram\n        }\n        connectors = {\n          this.state.connectors\n        }\n\n        drop={(e)=>{\n          //console.log(\"drop\",e)\n          //console.log(\"drop length\",e.element.annotations.length)\n          this.create_customer(e.element)\n          //e.element.annotations[0].content = \"#1\"\n        \n          //e.newValue[0].annotations[0].content = \"#1\"\n        }}\n\n        positionChange={(e)=>{\n\n          switch(e.state)\n          {\n            case \"Completed\":{\n              console.log(\"position\",e.source.nodes)\n              if(e.source.nodes !== undefined)\n                this.update_position(e.source.nodes)\n            \n            break;  }\n            case \"Progress\":{break;}\n            case \"Start\":{break;}\n          }\n          \n\n          \n        }}\n\n        dragTargetEnd={(e)=>{\n          console.log(\"dragTargetEnd\",e)\n        }}\n\n        \n        tool = {\n          DiagramTools.ZoomPan\n      }\n\n        \n       /* selectionChange={(e)=>{\n        \n          console.log(\"SELECT\",e.newValue)\n        }}*/\n        created = {\n          () => {\n\n            //console.log(diagramInstance.getActiveLayer())\n            //this.diagramInstance.getActiveLayer();\n\n\n           // diagramInstance.tool = DiagramTools.ZoomPan;\n            //diagramInstance.dataBind();\n            diagramInstance.scrollChange = args => {\n            //Obtains the pan status\n            let panStatus = args.panState;\n           }\n\n \n            //diagramInstance.tool = DiagramTools.ZoomPan;\n            //diagramInstance.dataBind();\n            /*diagramInstance.scrollChange = { args: IScrollChangeEventArgs => {\n            //Obtains the pan status\n            console.log(IScrollChangeEventArgs)\n            let panStatus = IScrollChangeEventArgs.panState;}}\n            }*/\n          }\n        }\n\n            //Disables mouse over tooltip at runtime\n            tooltip = {\n              null\n          }\n\n\n          style = {myStyle}\n          nodeTemplate={this.diagramTemplate}\n        \n\n       >\n         <Inject  width = {'200px'}\n        height = {'200px'}\n  services={[\n    HierarchicalTree,\n    MindMap,\n    RadialTree,\n    ComplexHierarchicalTree,\n    DataBinding,\n    Snapping,\n    PrintAndExport,\n    BpmnDiagrams,\n    SymmetricLayout,\n    ConnectorBridging,\n    UndoRedo,\n    LayoutAnimation,\n    DiagramContextMenu,\n    ConnectorEditing\n  ]}\n/>\n       </DiagramComponent>);\n      }\n}\n\n\nexport default Diagram;\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}