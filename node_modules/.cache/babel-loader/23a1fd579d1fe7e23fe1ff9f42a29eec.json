{"ast":null,"code":"var _jsxFileName = \"/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Card/ViewOrderCard.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { Box } from '@material-ui/system';\nimport { useActionCardVSM } from '../../hooks/useActionCardVSM';\nimport { useTypedSelector } from '../../hooks/leftMenuSelector';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ViewOrderCard = props => {\n  _s();\n\n  const [BDitems, setBDItem] = useState();\n  const {\n    cardVSMs,\n    loading\n  } = useTypedSelector(state => state.cardVSM);\n  const {\n    cardVSMLoading\n  } = useActionCardVSM();\n  const [card, setCard] = useState();\n  let listProduct = null;\n  useEffect(() => {\n    const timer = setTimeout(() => cardVSMLoading(props.order), 800);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, []); //orders\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this);\n  }\n  /*\n      \n      let listProduct = props.data.map((item: IDataVSM, index: number)=>{\n          \n          return(\n              <Card key={index} sx={{marginBottom: '150px'}}>\n                  <CardHeader\n                      action={\n                          <IconButton aria-label=\"settings\">\n                              <SettingsIcon />\n                          </IconButton>\n                      }\n                      title={item.name}\n                      sx={{fontWeight: 'bold',color: 'white', backgroundColor: '#575757'}}\n                  >\n                  </CardHeader>\n                  <CardContent sx={{backgroundColor: 'rgba(0, 0, 0, .03)'}}>\n                      <ViewCard sections={item.sections}/>\n                  </CardContent>\n              </Card>\n  \n          )\n      })\n      */\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: listProduct\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 8\n  }, this);\n};\n\n_s(ViewOrderCard, \"dx1cwWoRjUGfRo8pJMQaEqRanAc=\", false, function () {\n  return [useTypedSelector, useActionCardVSM];\n});\n\n_c = ViewOrderCard;\nexport default ViewOrderCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewOrderCard\");","map":{"version":3,"sources":["/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Card/ViewOrderCard.tsx"],"names":["React","useEffect","useState","CircularProgress","Box","useActionCardVSM","useTypedSelector","ViewOrderCard","props","BDitems","setBDItem","cardVSMs","loading","state","cardVSM","cardVSMLoading","card","setCard","listProduct","timer","setTimeout","order","clearTimeout","display","justifyContent"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAyBC,QAAzB,QAAwC,OAAxC;AAOA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,SAASC,GAAT,QAAoB,qBAApB;AAgBA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,SAASC,gBAAT,QAAiC,8BAAjC;;;AAYA,MAAMC,aAAa,GAAKC,KAAD,IAAgC;AAAA;;AACnD,QAAM,CAACC,OAAD,EAAUC,SAAV,IAAuBR,QAAQ,EAArC;AAEA,QAAM;AAACS,IAAAA,QAAD;AAAWC,IAAAA;AAAX,MAAsBN,gBAAgB,CAACO,KAAK,IAAIA,KAAK,CAACC,OAAhB,CAA5C;AACA,QAAM;AAACC,IAAAA;AAAD,MAAmBV,gBAAgB,EAAzC;AAEA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,EAAhC;AAIJ,MAAIgB,WAAW,GAAG,IAAlB;AAEAjB,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMkB,KAAK,GAAGC,UAAU,CAAC,MAAML,cAAc,CAACP,KAAK,CAACa,KAAP,CAArB,EAAoC,GAApC,CAAxB;AACA,WAAO,MAAM;AACXC,MAAAA,YAAY,CAACH,KAAD,CAAZ;AACD,KAFD;AAGH,GALQ,EAKP,EALO,CAAT,CAZuD,CAiBjD;;AAIN,MAAGP,OAAH,EACA;AACI,wBACI,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE;AAAEW,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,cAAc,EAAE;AAAnC,OAAT;AAAA,6BACE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,sBACG;AAAA,cACKN;AADL;AAAA;AAAA;AAAA;AAAA,UADH;AAMH,CA5DD;;GAAMX,a;UAG0BD,gB,EACHD,gB;;;KAJvBE,a;AA+DN,eAAeA,aAAf","sourcesContent":["import React,{useEffect, useState} from 'react'\n\nimport IDataCardSection from '../Data/IDataCardSection'\nimport IDataOrderItem from '../Data/IDataOrderItem'\nimport Divider from '@material-ui/core/Divider';\nimport ViewCard from './ViewCard'\n\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { Box } from '@material-ui/system';\n\n\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardContent from '@material-ui/core/CardContent'\n\nimport IconButton from '@material-ui/core/IconButton'\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport SettingsIcon from '@material-ui/icons/Settings';\n\nimport IDataVSM from '../Data/IDataVSM'\nimport IDataProduction from '../Data/IDataProduction';\nimport IDataCardVSM from '../Data/IDataCardVSM';\nimport { useCardVSMActionType } from '../../type/useCardVSMType';\n\nimport { useActionCardVSM } from '../../hooks/useActionCardVSM';\nimport { useTypedSelector } from '../../hooks/leftMenuSelector';\nimport IDataOrder from '../Data/IDataOrder';\n\ninterface productionCardVSM{\n    name: string,\n    productions: IDataCardVSM[]\n}\ninterface IDataCardProduct{\n    cardVSMs: productionCardVSM[]\n}\n\n\nconst ViewOrderCard =  (props: {order: IDataOrder}) => {\n    const [BDitems, setBDItem] = useState<IDataOrderItem[]>();\n\n    const {cardVSMs, loading} = useTypedSelector(state => state.cardVSM);\n    const {cardVSMLoading} = useActionCardVSM()\n\n    const [card, setCard] = useState<IDataCardProduct>();\n\n    \n\nlet listProduct = null\n\nuseEffect(() => {\n    const timer = setTimeout(() => cardVSMLoading(props.order), 800); \n    return () => {\n      clearTimeout(timer);\n    };   \n},[]) //orders\n\n\n\nif(loading)\n{\n    return (\n        <Box sx={{ display: 'flex', justifyContent: 'center' }}>\n          <CircularProgress />\n        </Box>\n    )\n}\n\n/*\n    \n    let listProduct = props.data.map((item: IDataVSM, index: number)=>{\n        \n        return(\n            <Card key={index} sx={{marginBottom: '150px'}}>\n                <CardHeader\n                    action={\n                        <IconButton aria-label=\"settings\">\n                            <SettingsIcon />\n                        </IconButton>\n                    }\n                    title={item.name}\n                    sx={{fontWeight: 'bold',color: 'white', backgroundColor: '#575757'}}\n                >\n                </CardHeader>\n                <CardContent sx={{backgroundColor: 'rgba(0, 0, 0, .03)'}}>\n                    <ViewCard sections={item.sections}/>\n                </CardContent>\n            </Card>\n\n        )\n    })\n    */\n    return(\n       <div>\n           {listProduct}\n       </div>\n    )\n\n}\n\n\nexport default ViewOrderCard;"]},"metadata":{},"sourceType":"module"}