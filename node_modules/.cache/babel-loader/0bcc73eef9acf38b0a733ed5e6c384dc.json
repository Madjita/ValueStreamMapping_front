{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/* eslint-disable valid-jsdoc */\n\n/* eslint-disable jsdoc/require-param */\n\n/* eslint-disable @typescript-eslint/no-inferrable-types */\n\n\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { measureText, Rect, TextOption, Size, PathOption } from '@syncfusion/ej2-svg-base';\nimport { Font, Border, Margin, ContainerPadding } from '../model/base';\nimport { Theme } from '../model/theme';\nimport { subtractThickness, Thickness, drawSymbol, ChartLocation, titlePositionX, getTitle, textTrim } from '../utils/helper';\nimport { RectOption, textElement, stringToNumber } from '../utils/helper';\nimport { removeElement, showTooltip, getElement, appendChildElement } from '../utils/helper';\n/**\n * Configures the location for the legend.\n */\n\nvar Location =\n/** @class */\nfunction (_super) {\n  __extends(Location, _super);\n\n  function Location() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property(0)], Location.prototype, \"x\", void 0);\n\n  __decorate([Property(0)], Location.prototype, \"y\", void 0);\n\n  return Location;\n}(ChildProperty);\n\nexport { Location };\n/**\n * Configures the legends in charts.\n */\n\nvar LegendSettings =\n/** @class */\nfunction (_super) {\n  __extends(LegendSettings, _super);\n\n  function LegendSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property(true)], LegendSettings.prototype, \"visible\", void 0);\n\n  __decorate([Property(null)], LegendSettings.prototype, \"height\", void 0);\n\n  __decorate([Property(null)], LegendSettings.prototype, \"width\", void 0);\n\n  __decorate([Complex({\n    x: 0,\n    y: 0\n  }, Location)], LegendSettings.prototype, \"location\", void 0);\n\n  __decorate([Property('Auto')], LegendSettings.prototype, \"position\", void 0);\n\n  __decorate([Property('Series')], LegendSettings.prototype, \"mode\", void 0);\n\n  __decorate([Property(8)], LegendSettings.prototype, \"padding\", void 0);\n\n  __decorate([Property('Center')], LegendSettings.prototype, \"alignment\", void 0);\n\n  __decorate([Complex(Theme.legendLabelFont, Font)], LegendSettings.prototype, \"textStyle\", void 0);\n\n  __decorate([Property(10)], LegendSettings.prototype, \"shapeHeight\", void 0);\n\n  __decorate([Property(10)], LegendSettings.prototype, \"shapeWidth\", void 0);\n\n  __decorate([Complex({}, Border)], LegendSettings.prototype, \"border\", void 0);\n\n  __decorate([Complex({\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0\n  }, Margin)], LegendSettings.prototype, \"margin\", void 0);\n\n  __decorate([Complex({\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0\n  }, ContainerPadding)], LegendSettings.prototype, \"containerPadding\", void 0);\n\n  __decorate([Property(5)], LegendSettings.prototype, \"shapePadding\", void 0);\n\n  __decorate([Property('transparent')], LegendSettings.prototype, \"background\", void 0);\n\n  __decorate([Property(1)], LegendSettings.prototype, \"opacity\", void 0);\n\n  __decorate([Property(true)], LegendSettings.prototype, \"toggleVisibility\", void 0);\n\n  __decorate([Property(null)], LegendSettings.prototype, \"description\", void 0);\n\n  __decorate([Property(3)], LegendSettings.prototype, \"tabIndex\", void 0);\n\n  __decorate([Property(null)], LegendSettings.prototype, \"title\", void 0);\n\n  __decorate([Complex(Theme.legendTitleFont, Font)], LegendSettings.prototype, \"titleStyle\", void 0);\n\n  __decorate([Property('Top')], LegendSettings.prototype, \"titlePosition\", void 0);\n\n  __decorate([Property(100)], LegendSettings.prototype, \"maximumTitleWidth\", void 0);\n\n  __decorate([Property(true)], LegendSettings.prototype, \"enablePages\", void 0);\n\n  __decorate([Property(false)], LegendSettings.prototype, \"isInversed\", void 0);\n\n  return LegendSettings;\n}(ChildProperty);\n\nexport { LegendSettings };\n/**\n * Legend base class for Chart and Accumulation chart.\n *\n * @private\n */\n\nvar BaseLegend =\n/** @class */\nfunction () {\n  /**\n   * Constructor for the dateTime module.\n   *\n   * @private\n   */\n  function BaseLegend(chart) {\n    this.pageXCollections = []; // pages of x locations\n\n    this.legendTitleCollections = [];\n    this.legendRegions = [];\n    this.pagingRegions = [];\n    this.chart = chart;\n    this.legend = chart.legendSettings;\n    this.legendID = chart.element.id + '_chart_legend';\n    this.isChartControl = chart.getModuleName() === 'chart';\n    this.isBulletChartControl = chart.getModuleName() === 'bulletChart';\n    this.bulletChart = this.chart;\n    this.fivePixel = 5;\n    this.rowCount = 0;\n    this.pageButtonSize = 8;\n    this.maxColumns = 0;\n    this.maxWidth = 0;\n    this.currentPage = 1;\n    this.backwardArrowOpacity = 0;\n    this.forwardArrowOpacity = 1;\n    this.arrowWidth = 2 * (this.fivePixel + this.pageButtonSize + this.fivePixel);\n    this.arrowHeight = this.arrowWidth;\n    this.isTop = false;\n    this.isTitle = false;\n    this.currentPageNumber = 1;\n  }\n  /**\n   * Calculate the bounds for the legends.\n   *\n   * @returns {void}\n   * @private\n   */\n\n\n  BaseLegend.prototype.calculateLegendBounds = function (rect, availableSize, maxLabelSize) {\n    var legend = this.legend;\n    var defaultValue = this.isBulletChartControl ? '40%' : '20%';\n    this.getPosition(legend.position, availableSize);\n    this.legendBounds = new Rect(rect.x, rect.y, 0, 0);\n    this.isVertical = this.position === 'Left' || this.position === 'Right';\n\n    if (this.isVertical) {\n      this.legendBounds.height = stringToNumber(legend.height, availableSize.height - (rect.y - this.chart.margin.top)) || rect.height;\n      this.legendBounds.width = stringToNumber(legend.width || defaultValue, availableSize.width);\n    } else {\n      this.legendBounds.width = stringToNumber(legend.width, availableSize.width) || rect.width;\n      this.legendBounds.height = stringToNumber(legend.height || defaultValue, availableSize.height);\n    }\n\n    this.library.getLegendBounds(availableSize, this.legendBounds, legend);\n\n    if (!this.isBulletChartControl) {\n      this.legendBounds.width += this.legend.containerPadding.left + this.legend.containerPadding.right;\n      this.legendBounds.height += this.legend.containerPadding.top + this.legend.containerPadding.bottom;\n    }\n\n    this.getLocation(this.position, legend.alignment, this.legendBounds, rect, availableSize, maxLabelSize);\n  };\n  /**\n   * To find legend position based on available size for chart and accumulation chart\n   *\n   * @param position\n   * @param availableSize\n   * @param position\n   * @param availableSize\n   * @returns {void}\n   */\n\n\n  BaseLegend.prototype.getPosition = function (position, availableSize) {\n    var chart = this.chart;\n    var accumulation = this.chart;\n\n    if (this.isChartControl || this.isBulletChartControl) {\n      this.position = position !== 'Auto' ? position : 'Bottom';\n    } else {\n      if (position === 'Auto' && ((chart || accumulation).visibleSeries && (chart || accumulation).visibleSeries[0].type === 'Funnel' || (chart || accumulation).visibleSeries[0].type === 'Pyramid')) {\n        position = 'Top';\n      }\n\n      this.position = position !== 'Auto' ? position : availableSize.width > availableSize.height ? 'Right' : 'Bottom';\n    }\n  };\n  /**\n   * To set bounds for chart and accumulation chart\n   *\n   * @param computedWidth\n   * @param computedHeight\n   * @param legend\n   * @param legendBounds\n   * @param computedWidth\n   * @param computedHeight\n   * @param legend\n   * @param legendBounds\n   * @param computedWidth\n   * @param computedHeight\n   * @param legend\n   * @param legendBounds\n   * @param computedWidth\n   * @param computedHeight\n   * @param legend\n   * @param legendBounds\n   * @returns {void}\n   */\n\n\n  BaseLegend.prototype.setBounds = function (computedWidth, computedHeight, legend, legendBounds) {\n    var titleHeight = legend.title && legend.titlePosition === 'Top' ? this.legendTitleSize.height + this.fivePixel : 0;\n\n    if (this.isVertical && this.isPaging && !legend.enablePages && !this.isBulletChartControl) {\n      titleHeight = legend.title && legend.titlePosition === 'Top' ? this.legendTitleSize.height + this.fivePixel : 0;\n      titleHeight += this.pageButtonSize + this.fivePixel;\n    }\n\n    computedWidth = Math.min(computedWidth, legendBounds.width);\n    computedHeight = Math.min(computedHeight, legendBounds.height);\n\n    if (legend.mode === 'Gradient') {\n      legendBounds.width = legend.width ? legendBounds.width : this.isVertical ? computedWidth : 0.75 * legendBounds.width;\n      legendBounds.height = legend.height ? legendBounds.height : this.isVertical ? 0.75 * legendBounds.height : computedHeight;\n    } else {\n      legendBounds.width = !legend.width ? computedWidth : legendBounds.width;\n      legendBounds.height = !legend.height ? computedHeight : legendBounds.height;\n    }\n\n    if (!this.isBulletChartControl) {\n      if (this.isTop && legend.titleStyle.textOverflow !== 'None') {\n        this.calculateLegendTitle(legend, legendBounds);\n        legendBounds.height += legend.titleStyle.textOverflow === 'Wrap' && this.legendTitleCollections.length > 1 ? this.legendTitleSize.height - this.legendTitleSize.height / this.legendTitleCollections.length : 0;\n      }\n    }\n\n    this.rowCount = Math.max(1, Math.ceil((legendBounds.height - legend.padding - titleHeight) / (this.maxItemHeight + legend.padding)));\n  };\n  /**\n   * To find legend location based on position, alignment for chart and accumulation chart\n   *\n   * @param position\n   * @param alignment\n   * @param legendBounds\n   * @param rect\n   * @param availableSize\n   * @param maxLabelSize\n   * @param position\n   * @param alignment\n   * @param legendBounds\n   * @param rect\n   * @param availableSize\n   * @param maxLabelSize\n   * @param position\n   * @param alignment\n   * @param legendBounds\n   * @param rect\n   * @param availableSize\n   * @param maxLabelSize\n   * @param position\n   * @param alignment\n   * @param legendBounds\n   * @param rect\n   * @param availableSize\n   * @param maxLabelSize\n   * @param position\n   * @param alignment\n   * @param legendBounds\n   * @param rect\n   * @param availableSize\n   * @param maxLabelSize\n   * @param position\n   * @param alignment\n   * @param legendBounds\n   * @param rect\n   * @param availableSize\n   * @param maxLabelSize\n   */\n\n\n  BaseLegend.prototype.getLocation = function (position, alignment, legendBounds, rect, availableSize, maxLabelSize) {\n    var padding = this.legend.border.width;\n    var isBulletChart = this.isBulletChartControl;\n    var bulletChart = this.bulletChart;\n    var labelIns = bulletChart.labelPosition === 'Inside';\n    var ticklIns = bulletChart.tickPosition === 'Inside';\n    var isVertical = bulletChart.orientation === 'Vertical';\n    var categoryFieldValue = isBulletChart && bulletChart.categoryField !== '' ? maxLabelSize.width + this.chart.border.width + padding * 3 : 0;\n    var marginBottom = this.chart.margin.bottom;\n    var legendHeight = legendBounds.height + padding + this.legend.margin.top + this.legend.margin.bottom;\n    var legendWidth = legendBounds.width + padding + this.legend.margin.left + this.legend.margin.right;\n\n    if (position === 'Bottom') {\n      legendBounds.x = this.alignLegend(legendBounds.x, availableSize.width, legendBounds.width, alignment);\n      legendBounds.y = rect.y + (rect.height - legendHeight) + padding + this.legend.margin.top;\n      legendBounds.y += isBulletChart && !bulletChart.opposedPosition && !labelIns && !ticklIns && !isVertical ? bulletChart.majorTickLines.height + marginBottom + this.legend.border.width + padding * 2 : isVertical && bulletChart.categoryField !== '' ? maxLabelSize.height + padding * 2 : 0;\n      subtractThickness(rect, new Thickness(0, 0, 0, legendHeight));\n    } else if (position === 'Top') {\n      legendBounds.x = this.alignLegend(legendBounds.x, availableSize.width, legendBounds.width, alignment);\n      legendBounds.y = rect.y + padding + this.legend.margin.top;\n      legendBounds.y -= isBulletChart && bulletChart.opposedPosition && !labelIns && !ticklIns && !isVertical ? bulletChart.majorTickLines.height + this.chart.margin.top : 0;\n      legendHeight -= isBulletChart ? -padding * 2 : 0;\n      subtractThickness(rect, new Thickness(0, 0, legendHeight, 0));\n    } else if (position === 'Right') {\n      legendBounds.x = rect.x + (rect.width - legendBounds.width) - this.legend.margin.right;\n      legendBounds.y = rect.y + this.alignLegend(0, availableSize.height - (rect.y + marginBottom), legendBounds.height, alignment);\n      legendWidth += isBulletChart && bulletChart.opposedPosition && !labelIns && !ticklIns && isVertical ? this.chart.margin.left + this.chart.margin.right + bulletChart.majorTickLines.height : 0;\n      subtractThickness(rect, new Thickness(0, legendWidth, 0, 0));\n    } else if (position === 'Left') {\n      legendBounds.x = legendBounds.x + this.legend.margin.left;\n      legendBounds.y = rect.y + this.alignLegend(0, availableSize.height - (rect.y + marginBottom), legendBounds.height, alignment);\n      legendWidth += isBulletChart && !bulletChart.opposedPosition && !labelIns && !ticklIns && isVertical ? legendBounds.x - this.chart.margin.left + padding + bulletChart.majorTickLines.height : bulletChart.orientation !== 'Vertical' && bulletChart.categoryField !== '' ? categoryFieldValue : 0;\n      subtractThickness(rect, new Thickness(legendWidth, 0, 0, 0));\n    } else {\n      legendBounds.x = this.legend.location.x;\n      legendBounds.y = this.legend.location.y;\n      subtractThickness(rect, new Thickness(0, 0, 0, 0));\n    }\n  };\n  /**\n   * To find legend alignment for chart and accumulation chart\n   *\n   * @param start\n   * @param size\n   * @param legendSize\n   * @param alignment\n   * @param start\n   * @param size\n   * @param legendSize\n   * @param alignment\n   * @param start\n   * @param size\n   * @param legendSize\n   * @param alignment\n   * @param start\n   * @param size\n   * @param legendSize\n   * @param alignment\n   */\n\n\n  BaseLegend.prototype.alignLegend = function (start, size, legendSize, alignment) {\n    switch (alignment) {\n      case 'Far':\n        start = size - legendSize - start;\n        break;\n\n      case 'Center':\n        start = (size - legendSize) / 2;\n        break;\n    }\n\n    return start;\n  };\n  /**\n   * Renders the legend.\n   *\n   * @param chart\n   * @param legend\n   * @param legendBounds\n   * @param redraw\n   * @param chart\n   * @param legend\n   * @param legendBounds\n   * @param redraw\n   * @param chart\n   * @param legend\n   * @param legendBounds\n   * @param redraw\n   * @param chart\n   * @param legend\n   * @param legendBounds\n   * @param redraw\n   * @returns {void}\n   * @private\n   */\n\n\n  BaseLegend.prototype.renderLegend = function (chart, legend, legendBounds, redraw) {\n    var titleHeight = 0;\n    var titlePlusArrowWidth = 0;\n    var pagingLegendBounds = new Rect(0, 0, 0, 0);\n    var requireLegendBounds = new Rect(0, 0, 0, 0);\n    var firstLegend = this.findFirstLegendPosition(this.legendCollections);\n    var padding = legend.padding;\n    var isPaging = legend.enablePages;\n    var titlePosition = legend.titlePosition;\n    var upArrowHeight = this.isPaging && !legend.enablePages && this.isVertical ? this.pageButtonSize : 0;\n    var legendGroup = chart.renderer.createGroup({\n      id: this.legendID + '_g'\n    });\n    var legendTranslateGroup = this.createLegendElements(chart, legendBounds, legendGroup, legend, this.legendID, redraw);\n    this.legendRegions = [];\n    var maxHeight = 0;\n\n    for (var i = 0; i < this.legendCollections.length; i++) {\n      if (this.legendCollections[i].text !== '') {\n        maxHeight = Math.max(this.legendCollections[i].textSize.height, maxHeight);\n        break;\n      } else {\n        continue;\n      }\n    }\n\n    this.maxItemHeight = Math.max(maxHeight, legend.shapeHeight); // For new legend navigation\n\n    if (!isPaging && this.isPaging && !this.isVertical) {\n      titlePlusArrowWidth = !this.isTitle ? 0 : titlePosition === 'Left' ? this.legendTitleSize.width : 0;\n      titlePlusArrowWidth += this.pageButtonSize + 2 * this.fivePixel;\n    } else if (!this.isPaging && !this.isVertical) {\n      titlePlusArrowWidth = this.isTitle && titlePosition === 'Left' ? this.fivePixel + this.legendTitleSize.width : 0;\n    }\n\n    titleHeight = !this.isTitle ? 0 : this.isTop || this.isVertical ? this.legendTitleSize.height : 0;\n\n    if (chart.legendSettings.mode === 'Gradient' && this.legendCollections.length > 1) {\n      this.getLinearLegend(legendBounds, chart, legend, legendTranslateGroup);\n      this.totalPages = 1;\n    } else if (firstLegend !== this.legendCollections.length) {\n      var legendSeriesGroup = void 0; // legendItem group for each series group element\n\n      var count = 0;\n      var previousLegend = this.legendCollections[firstLegend]; // starting shape center x,y position && to resolve lint error used new line for declaration\n\n      var start = new ChartLocation(this.isBulletChartControl ? legendBounds.x + titlePlusArrowWidth + padding + legend.shapeWidth / 2 : legendBounds.x + titlePlusArrowWidth + padding + legend.shapeWidth / 2 + legend.containerPadding.left, this.isBulletChartControl ? legendBounds.y + titleHeight + upArrowHeight + padding + this.maxItemHeight / 2 : legendBounds.y + titleHeight + upArrowHeight + padding + this.maxItemHeight / 2 + legend.containerPadding.top);\n      var anchor = chart.isRtlEnabled ? 'end' : 'start';\n      var textOptions = new TextOption('', start.x, start.y, anchor);\n      var textPadding = legend.shapePadding + padding + legend.shapeWidth; //  initialization for totalPages legend click totalpage again calculate\n\n      this.totalPages = this.totalPages = this.isChartControl || this.isBulletChartControl ? this.totalPages : 0;\n      this.pageXCollections = [];\n      this.legendCollections[firstLegend].location = start;\n\n      if (!legend.enablePages && this.isPaging) {\n        var x = start.x - this.fivePixel;\n        var y = start.y - this.fivePixel;\n        var leftSpace = this.isTitle && !this.isVertical && titlePosition === 'Left' ? this.legendTitleSize.width + this.fivePixel : 0;\n        var bottomSapce = this.isVertical ? this.pageButtonSize + Math.abs(y - legendBounds.y) : 0;\n        var rightSpace = this.isTitle && !this.isVertical && titlePosition === 'Right' ? this.legendTitleSize.width + this.fivePixel : 0;\n        rightSpace += this.isVertical ? 0 : this.fivePixel + this.pageButtonSize + this.fivePixel;\n        pagingLegendBounds = new Rect(x, y, legendBounds.width - rightSpace - leftSpace, legendBounds.height - bottomSapce);\n        requireLegendBounds = pagingLegendBounds;\n      } else {\n        requireLegendBounds = legendBounds;\n      }\n\n      for (var _i = 0, _a = this.legendCollections; _i < _a.length; _i++) {\n        var legendOption = _a[_i];\n\n        if (this.chart.getModuleName() === 'accumulationchart') {\n          // eslint-disable-next-line max-len\n          legendOption.fill = (this.chart || this.chart).visibleSeries[0].points[legendOption.pointIndex].color;\n        }\n\n        this.accessbilityText = this.isBulletChartControl ? 'Legend of bullet chart' + '' + legendOption.text : 'Click to show or hide the ' + legendOption.text + ' series';\n\n        if (legendOption.render && legendOption.text !== '') {\n          legendSeriesGroup = chart.renderer.createGroup({\n            id: this.legendID + this.generateId(legendOption, '_g_', count)\n          });\n\n          if (legendSeriesGroup) {\n            legendSeriesGroup.setAttribute('tabindex', legend.tabIndex.toString());\n            legendSeriesGroup.setAttribute('aria-label', legend.description || this.accessbilityText);\n          }\n\n          this.library.getRenderPoint(legendOption, start, textPadding, previousLegend, requireLegendBounds, count, firstLegend);\n          this.renderSymbol(legendOption, legendSeriesGroup, count);\n          this.renderText(chart, legendOption, legendSeriesGroup, textOptions, count);\n\n          if (legendSeriesGroup) {\n            legendSeriesGroup.setAttribute('style', 'outline: none; cursor: ' + (!legend.toggleVisibility && (chart.selectionMode === 'None' || chart.highlightMode === 'None' || chart.selectionMode === 'None') || this.isBulletChartControl ? 'auto' : 'pointer'));\n          }\n\n          if (legendTranslateGroup) {\n            legendTranslateGroup.appendChild(legendSeriesGroup);\n          }\n\n          previousLegend = legendOption;\n        }\n\n        count++;\n      }\n\n      if (this.isPaging) {\n        this.renderPagingElements(chart, legendBounds, textOptions, legendGroup);\n      } else {\n        this.totalPages = 1;\n      }\n    }\n\n    appendChildElement(chart.enableCanvas, chart.svgObject, legendGroup, redraw);\n  };\n  /** @private */\n\n\n  BaseLegend.prototype.getLinearLegend = function (legendBounds, chart, legend, legendTranslateGroup) {\n    var xmlns = 'http://www.w3.org/2000/svg';\n    var previousLegend = this.legendCollections[0];\n    var nextLegend = this.legendCollections[1];\n    var defElement = this.chart.renderer.createDefs();\n    var gradientLegendCount = 0;\n    var linerGradientEle = document.createElementNS(xmlns, 'linearGradient');\n    var opacity = 1;\n    var fillColors = [];\n    var numberItems = [];\n\n    if (legend.title) {\n      if (!this.isVertical) {\n        if (legend.titlePosition === 'Left') {\n          legendBounds.x += this.legendTitleSize.width;\n          legendBounds.width -= this.legendTitleSize.width;\n        } else if (legend.titlePosition === 'Right') {\n          legendBounds.width -= this.legendTitleSize.width;\n        } else if (legend.titlePosition === 'Top') {\n          legendBounds.y += this.legendTitleSize.height;\n          legendBounds.height -= this.legendTitleSize.height;\n        }\n      } else {\n        legendBounds.y += this.legendTitleSize.height;\n        legendBounds.height -= this.legendTitleSize.height;\n      }\n    }\n\n    for (var _i = 0, _a = this.chart.rangeColorSettings; _i < _a.length; _i++) {\n      var colorMap = _a[_i];\n\n      if (numberItems.indexOf(colorMap.start) < 0) {\n        numberItems.push(colorMap.start);\n      }\n\n      if (colorMap.colors.length > 2) {\n        var diffValue = colorMap.end - colorMap.start;\n        var colorsLength = colorMap.colors.length - 1;\n\n        if (diffValue > 0) {\n          diffValue = diffValue / colorsLength;\n\n          for (var index = 1; index < colorsLength; index++) {\n            var calculatedValue = colorMap.start + diffValue * index;\n            numberItems.push(calculatedValue);\n          }\n        } else {\n          for (var index = 1; index < colorsLength; index++) {\n            numberItems.push(colorMap.start);\n          }\n        }\n      }\n\n      if (numberItems.indexOf(colorMap.end) < 0) {\n        numberItems.push(colorMap.end);\n      }\n\n      for (var _b = 0, _c = colorMap.colors; _b < _c.length; _b++) {\n        var fillColor = _c[_b];\n\n        if (fillColors.indexOf(fillColor) < 0) {\n          fillColors.push(fillColor);\n        }\n      }\n\n      if (colorMap.colors.length > 0 && colorMap.colors.length < 2) {\n        fillColors.push(colorMap.colors[0]);\n      }\n    }\n\n    var x2 = this.isVertical ? '0' : '100';\n    var y2 = this.isVertical ? '100' : '0';\n    linerGradientEle.setAttribute('id', this.generateId(previousLegend, 'linearGradient', gradientLegendCount));\n    linerGradientEle.setAttribute('x1', 0 + '%');\n    linerGradientEle.setAttribute('y1', 0 + '%');\n    linerGradientEle.setAttribute('x2', x2 + '%');\n    linerGradientEle.setAttribute('y2', y2 + '%');\n    var full = numberItems[numberItems.length - 1] - numberItems[0];\n\n    for (var b = 0; b < fillColors.length; b++) {\n      var offsetValue = numberItems[b] - numberItems[0];\n      offsetValue = offsetValue / full;\n      var stopEle = document.createElementNS(xmlns, 'stop');\n      stopEle.setAttribute('offset', offsetValue.toString());\n      stopEle.setAttribute('stop-color', fillColors[b]);\n      stopEle.setAttribute('stop-opacity', opacity.toString());\n      linerGradientEle.appendChild(stopEle);\n    }\n\n    var startLabel = previousLegend.text.toString();\n    var endLabel = nextLegend.text.toString();\n    var startTextSize = measureText(startLabel, legend.textStyle);\n    var endTextSize = measureText(endLabel, legend.textStyle);\n    var textWidth = startTextSize.width > endTextSize.width ? startTextSize.width : endTextSize.width;\n    var textHeight = startTextSize.height > endTextSize.height ? startTextSize.height : endTextSize.height;\n    var otherSpaces = 2 * textWidth + 4 * legend.padding;\n    var linearBarWidth = legendBounds.width;\n    var linearBarHeight = legendBounds.height;\n    var xValue = legendBounds.x + textWidth + 2 * legend.padding;\n    var yValue = legendBounds.y + legend.padding;\n    var startLabelY;\n    var endLabelY;\n    var startLabelX;\n    var endLabelX;\n\n    if (this.isVertical) {\n      otherSpaces = 2 * textHeight + 4 * legend.padding;\n      linearBarWidth = legendBounds.width - 2 * legend.padding;\n      linearBarHeight = legendBounds.height - otherSpaces;\n      xValue = legendBounds.x + legend.padding;\n      yValue = legendBounds.y + textHeight + 2 * legend.padding;\n      startLabelY = legendBounds.y + legend.padding + textHeight;\n      endLabelY = yValue + linearBarHeight + textHeight;\n      startLabelX = legendBounds.x + legendBounds.width * 0.5 - textWidth * 0.5;\n      endLabelX = startLabelX;\n\n      if (linearBarWidth > 30) {\n        var diffWidth = linearBarWidth - 30;\n        linearBarWidth = 30;\n        xValue = xValue + diffWidth / 2;\n      }\n    } else {\n      linearBarWidth = legendBounds.width - otherSpaces;\n      linearBarHeight = legendBounds.height - 2 * legend.padding;\n      startLabelX = legendBounds.x + legend.padding + (textWidth - startTextSize.width);\n      endLabelX = legendBounds.x + linearBarWidth + 3 * legend.padding + textWidth;\n      startLabelY = legendBounds.y + legendBounds.height * 0.5 + textHeight * 0.25;\n      endLabelY = startLabelY;\n\n      if (linearBarHeight > 30) {\n        var diffHeight = linearBarHeight - 30;\n        linearBarHeight = 30;\n        yValue = yValue + diffHeight / 2;\n      }\n    }\n\n    var textOptions = new TextOption('', startLabelX, startLabelY, '', startLabel);\n    var hiddenColor = '#D3D3D3';\n    textOptions.id = this.legendID + this.generateId(previousLegend, '_text_', 1);\n    var fontcolor = previousLegend.visible ? legend.textStyle.color || chart.themeStyle.legendLabel : hiddenColor;\n    var isCanvas = this.chart.enableCanvas;\n    textElement(chart.renderer, textOptions, legend.textStyle, fontcolor, legendTranslateGroup, false, false, false, false, // tslint:disable-next-line:align\n    null, this.currentPageNumber && isCanvas ? new Rect(0, -this.translatePage(null, this.currentPageNumber - 1, this.currentPageNumber), 0, 0) : null);\n    textOptions = new TextOption('', endLabelX, endLabelY, '', endLabel);\n    textOptions.id = this.legendID + this.generateId(previousLegend, '_text_', 2);\n    textElement(chart.renderer, textOptions, legend.textStyle, fontcolor, legendTranslateGroup, false, false, false, false, // tslint:disable-next-line:align\n    null, this.currentPageNumber && isCanvas ? new Rect(0, -this.translatePage(null, this.currentPageNumber - 1, this.currentPageNumber), 0, 0) : null);\n    var gradientLegend = chart.renderer.drawRectangle({\n      width: linearBarWidth,\n      height: linearBarHeight,\n      x: xValue,\n      y: yValue,\n      fill: 'url(#' + this.generateId(previousLegend, 'linearGradient', gradientLegendCount) + ')'\n    });\n    defElement.appendChild(linerGradientEle);\n    legendTranslateGroup.appendChild(defElement);\n    legendTranslateGroup.appendChild(gradientLegend);\n  };\n  /**\n   * To find first valid legend text index for chart and accumulation chart\n   *\n   * @param legendCollection\n   * @returns {number}\n   * @private\n   */\n\n\n  BaseLegend.prototype.findFirstLegendPosition = function (legendCollection) {\n    var count = 0;\n\n    for (var _i = 0, legendCollection_1 = legendCollection; _i < legendCollection_1.length; _i++) {\n      var legend = legendCollection_1[_i];\n\n      if (legend.render && legend.text !== '') {\n        break;\n      }\n\n      count++;\n    }\n\n    return count;\n  };\n  /**\n   * To get the legend title text width and height.\n   *\n   * @param legend\n   * @param legendBounds\n   */\n\n\n  BaseLegend.prototype.calculateLegendTitle = function (legend, legendBounds) {\n    if (legend.title) {\n      this.isTop = legend.titlePosition === 'Top';\n      var padding = legend.titleStyle.textOverflow === 'Trim' ? 2 * legend.padding : 0;\n\n      if (this.isTop || this.isVertical) {\n        this.legendTitleCollections = getTitle(legend.title, legend.titleStyle, legendBounds.width - padding);\n      } else {\n        this.legendTitleCollections[0] = textTrim(legend.maximumTitleWidth, legend.title, legend.titleStyle);\n      }\n\n      var text = this.isTop ? legend.title : this.legendTitleCollections[0];\n      this.legendTitleSize = measureText(text, legend.titleStyle);\n      this.legendTitleSize.height *= this.legendTitleCollections.length;\n    } else {\n      this.legendTitleSize = new Size(0, 0);\n    }\n  };\n  /**\n   * Render the legend title\n   *\n   * @param chart\n   * @param legend\n   * @param legendBounds\n   * @param legendGroup\n   */\n\n\n  BaseLegend.prototype.renderLegendTitle = function (chart, legend, legendBounds, legendGroup) {\n    var padding = legend.padding;\n    var alignment = legend.titleStyle.textAlignment;\n    this.isTop = legend.titlePosition === 'Top';\n    var anchor = alignment === 'Near' ? 'start' : alignment === 'Far' ? 'end' : 'middle';\n    var x = titlePositionX(legendBounds, legend.titleStyle);\n    anchor = this.isTop || this.isVertical ? anchor : '';\n    x = alignment === 'Near' ? x + padding : alignment === 'Far' ? x - padding : x;\n    x = this.isTop || this.isVertical ? x : legendBounds.x + (legend.titlePosition === 'Left' ? 5 : legendBounds.width - this.legendTitleSize.width - 5);\n    var topPadding = legendBounds.height / 2 + this.legendTitleSize.height / 4;\n    var y = legendBounds.y + (!this.isTop && !this.isVertical ? topPadding : this.legendTitleSize.height / this.legendTitleCollections.length);\n    var legendTitleTextOptions = new TextOption(this.legendID + '_title', x, y, anchor, this.legendTitleCollections);\n    textElement(chart.renderer, legendTitleTextOptions, legend.titleStyle, legend.titleStyle.color, legendGroup);\n  };\n  /**\n   * To create legend rendering elements for chart and accumulation chart\n   *\n   * @param chart\n   * @param legendBounds\n   * @param legendGroup\n   * @param legend\n   * @param id\n   * @param redraw\n   */\n\n\n  BaseLegend.prototype.createLegendElements = function (chart, legendBounds, legendGroup, legend, id, redraw) {\n    var padding = legend.padding;\n    var options = new RectOption(id + '_element', legend.background, legend.border, legend.opacity, legendBounds);\n    var legendItemsGroup = chart.renderer.createGroup({\n      id: id + '_collections'\n    });\n    var isCanvas = chart.enableCanvas;\n    var clippath = chart.renderer.createClipPath({\n      id: id + '_clipPath'\n    });\n\n    if (legendGroup) {\n      legendGroup.appendChild(chart.renderer.drawRectangle(options));\n    } else {\n      chart.renderer.drawRectangle(options);\n    }\n\n    if (legend.title) {\n      this.renderLegendTitle(chart, legend, legendBounds, legendGroup);\n    }\n\n    if (!isCanvas) {\n      legendGroup.appendChild(legendItemsGroup);\n    }\n\n    this.legendTranslateGroup = chart.renderer.createGroup({\n      id: id + '_translate_g'\n    });\n\n    if (!isCanvas) {\n      legendItemsGroup.appendChild(this.legendTranslateGroup);\n    }\n\n    options.y += padding + (this.isTop ? this.legendTitleSize.height : 0);\n    options.id += '_clipPath_rect';\n    options.width = !this.isChartControl && chart.getModuleName() !== 'bulletChart' && this.isVertical ? this.maxWidth - padding + legend.containerPadding.left + legend.containerPadding.right : legendBounds.width;\n\n    if (!isCanvas) {\n      this.clipRect = chart.renderer.drawRectangle(options);\n      clippath.appendChild(this.clipRect);\n    } else {\n      this.pagingClipRect = options;\n    }\n\n    appendChildElement(isCanvas, chart.svgObject, clippath, redraw);\n\n    if (!isCanvas) {\n      legendItemsGroup.setAttribute('style', 'clip-path:url(#' + clippath.id + ')');\n    }\n\n    return this.legendTranslateGroup;\n  };\n  /**\n   * To render legend symbols for chart and accumulation chart\n   *\n   * @param legendOption\n   * @param group\n   * @param i\n   * @param legendOption\n   * @param group\n   * @param i\n   * @param legendOption\n   * @param group\n   * @param i\n   */\n\n\n  BaseLegend.prototype.renderSymbol = function (legendOption, group, i) {\n    var control = this.isBulletChartControl ? this.chart : null;\n    var symbolColor = legendOption.visible ? legendOption.fill : '#D3D3D3';\n    var isStrokeWidth = this.chart.getModuleName() === 'chart' && legendOption.shape === 'SeriesType' && legendOption.type.toLowerCase().indexOf('line') > -1 && legendOption.type.toLowerCase().indexOf('area') === -1;\n    var isCustomBorder = this.chart.getModuleName() === 'chart' && (legendOption.type === 'Scatter' || legendOption.type === 'Bubble');\n    var isCanvas = this.chart.enableCanvas;\n    var borderColor;\n    var shape = legendOption.shape === 'SeriesType' ? legendOption.type : legendOption.shape;\n    var strokewidth = isStrokeWidth ? this.legend.mode === 'Series' ? this.chart.visibleSeries[i].width : this.chart.visibleSeries[0].width : this.isBulletChartControl && legendOption.shape === 'Multiply' ? 4 : 1;\n    var regionPadding;\n    shape = shape === 'Scatter' ? legendOption.markerShape : shape;\n\n    if (isCustomBorder && i < this.chart.visibleSeries.length) {\n      var seriesBorder = this.chart.visibleSeries[i].border;\n      borderColor = seriesBorder.color ? seriesBorder.color : symbolColor;\n      strokewidth = seriesBorder.width ? seriesBorder.width : 1;\n    }\n\n    var symbolOption = new PathOption(this.legendID + this.generateId(legendOption, '_shape_', i), symbolColor, strokewidth, isCustomBorder ? borderColor : symbolColor, 1, '', '');\n    var textSize = measureText(legendOption.text, this.legend.textStyle);\n    var x = this.legend.isInversed ? legendOption.location.x + textSize.width + this.legend.shapePadding : legendOption.location.x;\n    var y = legendOption.location.y;\n\n    if (!isCanvas) {\n      group.appendChild(drawSymbol({\n        x: x,\n        y: y\n      }, shape, new Size(this.legend.shapeWidth, this.legend.shapeHeight), legendOption.url, symbolOption, this.accessbilityText, this.chart.renderer, null, this.isBulletChartControl, control));\n    } else {\n      regionPadding = -this.translatePage(null, this.currentPageNumber - 1, this.currentPageNumber);\n      drawSymbol({\n        x: x,\n        y: y\n      }, shape, new Size(this.legend.shapeWidth, this.legend.shapeHeight), '', symbolOption, this.accessbilityText, this.chart.renderer, this.currentPageNumber ? new Rect(0, regionPadding, 0, 0) : null, this.isBulletChartControl, control);\n      this.legendRegions.push({\n        rect: new Rect(legendOption.location.x, legendOption.location.y, this.legend.shapeWidth, this.legend.shapeHeight + regionPadding),\n        index: i\n      });\n    }\n\n    if (shape === 'Line' && legendOption.markerVisibility && legendOption.markerShape !== 'Image' || legendOption.type === 'Doughnut' && shape === 'Doughnut') {\n      symbolOption.id = this.legendID + this.generateId(legendOption, '_shape_marker_', i);\n      shape = legendOption.type === 'Doughnut' ? 'Circle' : legendOption.markerShape;\n      symbolOption.fill = legendOption.type === 'Doughnut' ? '#FFFFFF' : symbolOption.fill;\n\n      if (!isCanvas) {\n        // eslint-disable-next-line max-len\n        group.appendChild(drawSymbol({\n          x: x,\n          y: y\n        }, shape, new Size(this.legend.shapeWidth / 2, this.legend.shapeHeight / 2), '', symbolOption, this.accessbilityText, null, null, this.isBulletChartControl, control));\n      } else {\n        drawSymbol({\n          x: x,\n          y: y\n        }, shape, new Size(this.legend.shapeWidth / 2, this.legend.shapeHeight / 2), '', symbolOption, this.accessbilityText, this.chart.renderer, this.currentPageNumber ? new Rect(0, -this.translatePage(null, this.currentPageNumber - 1, this.currentPageNumber), 0, 0) : null, this.isBulletChartControl, control);\n      }\n    }\n  };\n  /**\n   * To render legend text for chart and accumulation chart\n   *\n   * @param chart\n   * @param legendOption\n   * @param group\n   * @param textOptions\n   * @param i\n   * @param chart\n   * @param legendOption\n   * @param group\n   * @param textOptions\n   * @param i\n   * @param chart\n   * @param legendOption\n   * @param group\n   * @param textOptions\n   * @param i\n   * @param chart\n   * @param legendOption\n   * @param group\n   * @param textOptions\n   * @param i\n   * @param chart\n   * @param legendOption\n   * @param group\n   * @param textOptions\n   * @param i\n   */\n\n\n  BaseLegend.prototype.renderText = function (chart, legendOption, group, textOptions, i) {\n    var legend = chart.legendSettings;\n    var hiddenColor = '#D3D3D3';\n    var fontcolor = legendOption.visible ? legend.textStyle.color || chart.themeStyle.legendLabel : hiddenColor;\n    var isCanvas = this.chart.enableCanvas;\n    textOptions.id = this.legendID + this.generateId(legendOption, '_text_', i);\n    textOptions.text = legendOption.text;\n    textOptions.x = legend.isInversed ? legendOption.location.x - legend.shapeWidth / 2 : legendOption.location.x + legend.shapeWidth / 2 + legend.shapePadding;\n    textOptions.y = legendOption.location.y + this.maxItemHeight / 4;\n    var element = textElement(chart.renderer, textOptions, legend.textStyle, fontcolor, group, false, false, false, false, null, this.currentPageNumber && isCanvas ? new Rect(0, -this.translatePage(null, this.currentPageNumber - 1, this.currentPageNumber), 0, 0) : null);\n\n    if (element) {\n      element.setAttribute('aria-label', legend.description || this.accessbilityText);\n    }\n\n    if (isCanvas) {\n      var textSize = measureText(textOptions.text, legend.textStyle);\n      this.legendRegions[i].rect.y = textOptions.y < this.legendRegions[i].rect.y ? textOptions.y : this.legendRegions[i].rect.y;\n      this.legendRegions[i].rect.width += textSize.width;\n      this.legendRegions[i].rect.height = textSize.height;\n      this.legendRegions[i].rect.y -= textSize.height * 0.5;\n    }\n  };\n  /**\n   * To render legend paging elements for chart and accumulation chart\n   *\n   * @param chart\n   * @param bounds\n   * @param textOption\n   * @param legendGroup\n   * @param chart\n   * @param bounds\n   * @param textOption\n   * @param legendGroup\n   * @param chart\n   * @param bounds\n   * @param textOption\n   * @param legendGroup\n   * @param chart\n   * @param bounds\n   * @param textOption\n   * @param legendGroup\n   */\n\n\n  BaseLegend.prototype.renderPagingElements = function (chart, bounds, textOption, legendGroup) {\n    var paginggroup = chart.renderer.createGroup({\n      id: this.legendID + '_navigation'\n    });\n    var isCanvas = chart.enableCanvas;\n    var titleHeight = this.isBulletChartControl ? 0 : this.legendTitleSize.height;\n    var grayColor = '#545454';\n    var legend = chart.legendSettings; // to solve parameter lint error, legend declaration is here\n\n    var padding = 8; // const padding for paging elements\n\n    var symbolOption = new PathOption(this.legendID + '_pageup', 'transparent', 5, grayColor, 1, '', '');\n    var iconSize = this.pageButtonSize; // Page left arrow drawing calculation started here\n\n    var rowCount = !legend.enablePages && this.isPaging && !this.isVertical && !this.isBulletChartControl ? 1 : this.rowCount - 1;\n    var titleWidth = this.isTitle && legend.titlePosition === 'Left' ? this.legendTitleSize.width : 0;\n    this.pagingRegions = [];\n    this.backwardArrowOpacity = this.currentPage !== 1 ? 1 : 0;\n    this.forwardArrowOpacity = this.currentPage === this.totalPages ? 0 : 1;\n\n    if (!isCanvas) {\n      legendGroup.appendChild(paginggroup);\n    }\n\n    if (this.isChartControl || this.isBulletChartControl || !this.isVertical) {\n      this.totalPages = Math.ceil(this.totalPages / Math.max(1, this.rowCount - 1));\n    } else {\n      this.totalPages = Math.ceil(this.totalPages / this.maxColumns);\n    }\n\n    if (paginggroup) {\n      paginggroup.setAttribute('style', 'cursor: pointer');\n    }\n\n    this.clipPathHeight = rowCount * (this.maxItemHeight + legend.padding);\n\n    if (!isCanvas) {\n      this.clipRect.setAttribute('height', this.clipPathHeight.toString());\n    } else {\n      //paging clipRect only for canvas mode\n      this.pagingClipRect.height = this.legendBounds.height - this.clipPathHeight - (this.pagingClipRect.y - this.legendBounds.y) - legend.border.width;\n      this.pagingClipRect.y = this.pagingClipRect.y + this.clipPathHeight;\n      this.pagingClipRect.x += legend.border.width;\n      this.pagingClipRect.width -= legend.border.width + legend.border.width / 2;\n      this.chart.renderer.clearRect(new Rect(this.pagingClipRect.x, this.pagingClipRect.y, this.pagingClipRect.width, this.pagingClipRect.height));\n    }\n\n    var pageTextElement;\n    var x = bounds.x + iconSize / 2;\n    var y = bounds.y + this.clipPathHeight + (titleHeight + bounds.height - this.clipPathHeight) / 2;\n\n    if (this.isPaging && !legend.enablePages && !this.isVertical && !this.isBulletChartControl) {\n      x = bounds.x + this.fivePixel + this.pageButtonSize + titleWidth;\n      y = legend.title && this.isTop ? bounds.y + padding + titleHeight + iconSize / 1 + 0.5 : bounds.y + padding + iconSize + 0.5;\n    }\n\n    var size = measureText(this.totalPages + '/' + this.totalPages, legend.textStyle);\n\n    if (!isCanvas) {\n      if (this.isVertical && !legend.enablePages && !this.isBulletChartControl) {\n        x = bounds.x + bounds.width / 2;\n        y = bounds.y + iconSize / 2 + padding + titleHeight;\n        symbolOption.opacity = this.backwardArrowOpacity;\n        paginggroup.appendChild(drawSymbol({\n          x: x,\n          y: y\n        }, 'UpArrow', new Size(iconSize, iconSize), '', symbolOption, 'UpArrow'));\n      } else {\n        symbolOption.opacity = this.isBulletChartControl ? symbolOption.opacity : legend.enablePages ? 1 : this.backwardArrowOpacity;\n        paginggroup.appendChild(drawSymbol({\n          x: x,\n          y: y\n        }, 'LeftArrow', new Size(iconSize, iconSize), '', symbolOption, 'LeftArrow'));\n      }\n    } else {\n      drawSymbol({\n        x: x,\n        y: y\n      }, 'LeftArrow', new Size(iconSize, iconSize), '', symbolOption, 'LeftArrow', this.chart.renderer, new Rect(bounds.width - (2 * (iconSize + padding) + padding + size.width), 0, 0, 0));\n    }\n\n    this.pagingRegions.push(new Rect(x + bounds.width - (2 * (iconSize + padding) + padding + size.width) - iconSize * 0.5, y - iconSize * 0.5, iconSize, iconSize)); // Page numbering rendering calculation started here\n\n    textOption.x = x + iconSize / 2 + padding;\n    textOption.y = y + size.height / 4;\n    textOption.id = this.legendID + '_pagenumber';\n    textOption.text = '1/' + this.totalPages;\n\n    if (isCanvas && this.totalNoOfPages) {\n      textOption.text = this.currentPageNumber + '/' + this.totalNoOfPages;\n    }\n\n    if (legend.enablePages || this.isBulletChartControl) {\n      pageTextElement = textElement(chart.renderer, textOption, legend.textStyle, legend.textStyle.color, paginggroup, false, false, false, false, null, new Rect(bounds.width - (2 * (iconSize + padding) + padding + size.width), 0, 0, 0));\n    } // Page right arrow rendering calculation started here\n\n\n    x = textOption.x + padding + iconSize / 2 + size.width;\n\n    if (this.isPaging && !legend.enablePages && !this.isVertical) {\n      x = bounds.x + bounds.width - this.fivePixel - this.pageButtonSize - (legend.title && legend.titlePosition === 'Right' ? this.legendTitleSize.width + this.fivePixel : 0);\n    }\n\n    symbolOption.id = this.legendID + '_pagedown';\n    symbolOption.opacity = !legend.enablePages ? this.forwardArrowOpacity : 1;\n\n    if (!isCanvas) {\n      if (this.isVertical && !legend.enablePages && !this.isBulletChartControl) {\n        x = bounds.x + bounds.width / 2;\n        y = bounds.y + bounds.height - iconSize / 2 - padding;\n        paginggroup.appendChild(drawSymbol({\n          x: x,\n          y: y\n        }, 'DownArrow', new Size(iconSize, iconSize), '', symbolOption, 'DownArrow'));\n      } else {\n        paginggroup.appendChild(drawSymbol({\n          x: x,\n          y: y\n        }, 'RightArrow', new Size(iconSize, iconSize), '', symbolOption, 'RightArrow'));\n      }\n    } else {\n      drawSymbol({\n        x: x,\n        y: y\n      }, 'RightArrow', new Size(iconSize, iconSize), '', symbolOption, 'RightArrow', this.chart.renderer, new Rect(bounds.width - (2 * (iconSize + padding) + padding + size.width), 0, 0, 0));\n    }\n\n    this.pagingRegions.push(new Rect(x + (bounds.width - (2 * (iconSize + padding) + padding + size.width) - iconSize * 0.5), y - iconSize * 0.5, iconSize, iconSize));\n\n    if (!isCanvas && (legend.enablePages || this.isBulletChartControl)) {\n      //placing the navigation buttons and page numbering in legend right corner\n      paginggroup.setAttribute('transform', 'translate(' + (bounds.width - (2 * (iconSize + padding) + padding + size.width)) + ', ' + 0 + ')');\n    } else {\n      if (this.currentPageNumber === 1 && this.calTotalPage && (legend.enablePages || this.isBulletChartControl)) {\n        this.totalNoOfPages = this.totalPages;\n        this.calTotalPage = false;\n      }\n\n      if (!legend.enablePages && !this.isBulletChartControl) {\n        // For new legend page navigation\n        this.translatePage(null, this.currentPage - 1, this.currentPage, legend);\n      }\n    }\n\n    if (legend.enablePages || this.isBulletChartControl) {\n      this.translatePage(pageTextElement, this.currentPage - 1, this.currentPage, legend);\n    }\n  };\n  /**\n   * To translate legend pages for chart and accumulation chart\n   *\n   * @param pagingText\n   * @param page\n   * @param pageNumber\n   * @param legend\n   * @param pagingText\n   * @param page\n   * @param pageNumber\n   * @param legend\n   * @param pagingText\n   * @param page\n   * @param pageNumber\n   * @param legend\n   * @param pagingText\n   * @param page\n   * @param pageNumber\n   * @param legend\n   */\n\n\n  BaseLegend.prototype.translatePage = function (pagingText, page, pageNumber, legend) {\n    var size = this.clipPathHeight * page;\n    var translate = 'translate(0,-' + size + ')';\n\n    if (!this.isChartControl && !this.isBulletChartControl && this.isVertical) {\n      size = this.pageXCollections[page * this.maxColumns] - this.legendBounds.x;\n      size = size < 0 ? 0 : size; // to avoid small pixel variation\n\n      translate = 'translate(-' + size + ',0)';\n    }\n\n    if (!this.chart.enableCanvas) {\n      this.legendTranslateGroup.setAttribute('transform', translate);\n    }\n\n    if (!this.chart.enableCanvas && (legend.enablePages || this.isBulletChartControl)) {\n      pagingText.textContent = pageNumber + '/' + this.totalPages;\n    }\n\n    this.currentPage = pageNumber;\n    return size;\n  };\n  /**\n   * To change legend pages for chart and accumulation chart\n   *\n   * @param event\n   * @param pageUp\n   * @param event\n   * @param pageUp\n   */\n\n\n  BaseLegend.prototype.changePage = function (event, pageUp) {\n    var legend = this.chart.legendSettings;\n    var backwardArrow = document.getElementById(this.legendID + '_pageup');\n    var forwardArrow = document.getElementById(this.legendID + '_pagedown');\n    var pageText = legend.enablePages || this.isBulletChartControl ? document.getElementById(this.legendID + '_pagenumber') : null;\n    var page = legend.enablePages || this.isBulletChartControl ? parseInt(pageText.textContent.split('/')[0], 10) : this.currentPage;\n\n    if (pageUp && page > 1) {\n      this.translatePage(pageText, page - 2, page - 1, legend);\n    } else if (!pageUp && page < this.totalPages) {\n      this.translatePage(pageText, page, page + 1, legend);\n    }\n\n    if (this.isPaging && !legend.enablePages && !this.isBulletChartControl) {\n      // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n      this.currentPage === this.totalPages ? this.hideArrow(forwardArrow) : this.showArrow(forwardArrow); // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n\n      this.currentPage === 1 ? this.hideArrow(backwardArrow) : this.showArrow(backwardArrow);\n    }\n  };\n  /**\n   * To hide the backward and forward arrow\n   *\n   * @param arrowElement\n   */\n\n\n  BaseLegend.prototype.hideArrow = function (arrowElement) {\n    arrowElement.setAttribute('opacity', '0');\n  };\n  /**\n   * To show the  backward and forward arrow\n   *\n   * @param arrowElement\n   */\n\n\n  BaseLegend.prototype.showArrow = function (arrowElement) {\n    arrowElement.setAttribute('opacity', '1');\n  };\n  /**\n   * To find legend elements id based on chart or accumulation chart\n   *\n   * @param option\n   * @param prefix\n   * @param count\n   * @param option\n   * @param prefix\n   * @param count\n   * @param option\n   * @param prefix\n   * @param count\n   * @private\n   */\n\n\n  BaseLegend.prototype.generateId = function (option, prefix, count) {\n    if (this.isChartControl) {\n      return prefix + count;\n    } else {\n      return prefix + option.pointIndex;\n    }\n  };\n  /**\n   * To show or hide trimmed text tooltip for legend.\n   *\n   * @param event\n   * @returns {void}\n   * @private\n   */\n\n\n  BaseLegend.prototype.move = function (event) {\n    var _this = this;\n\n    var x = this.chart.mouseX;\n    var y = this.chart.mouseY;\n\n    if (event.target.textContent.indexOf('...') > -1) {\n      var targetId = event.target.id.split(this.legendID + '_text_');\n\n      if (targetId.length === 2) {\n        var index = parseInt(targetId[1], 10);\n        var element = this.chart.element;\n\n        if (!isNaN(index)) {\n          if (this.chart.isTouch) {\n            removeElement(this.chart.element.id + '_EJ2_Legend_Tooltip');\n          }\n\n          if (this.isChartControl) {\n            showTooltip(this.chart.series[index].name, x, y, element.offsetWidth, element.id + '_EJ2_Legend_Tooltip', getElement(this.chart.element.id + '_Secondary_Element'));\n          } else {\n            showTooltip(this.chart.visibleSeries[0].points[index].x.toString(), x + 10, y + 10, element.offsetWidth, element.id + '_EJ2_Legend_Tooltip', getElement(this.chart.element.id + '_Secondary_Element'));\n          }\n        }\n      }\n    } else {\n      removeElement(this.chart.element.id + '_EJ2_Legend_Tooltip');\n    }\n\n    if (this.chart.isTouch) {\n      clearTimeout(this.clearTooltip);\n      this.clearTooltip = +setTimeout(function () {\n        removeElement(_this.chart.element.id + '_EJ2_Legend_Tooltip');\n      }, 1000);\n    }\n  };\n\n  return BaseLegend;\n}();\n\nexport { BaseLegend };\n/**\n * Class for legend options\n *\n * @private\n */\n\nvar LegendOptions =\n/** @class */\nfunction () {\n  function LegendOptions(text, fill, shape, visible, type, url, markerShape, markerVisibility, pointIndex, seriesIndex) {\n    this.location = {\n      x: 0,\n      y: 0\n    };\n    this.text = text;\n    this.fill = fill;\n    this.shape = shape;\n    this.url = url;\n    this.visible = visible;\n    this.type = type;\n    this.markerVisibility = markerVisibility;\n    this.markerShape = markerShape;\n    this.pointIndex = pointIndex;\n    this.seriesIndex = seriesIndex;\n  }\n\n  return LegendOptions;\n}();\n\nexport { LegendOptions };","map":{"version":3,"sources":["/Users/sergeismogliuk/Documents/Project/Project_node/Diplom/react-diplom/react-diplom/node_modules/@syncfusion/ej2-charts/src/common/legend/legend.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Property","Complex","ChildProperty","measureText","Rect","TextOption","Size","PathOption","Font","Border","Margin","ContainerPadding","Theme","subtractThickness","Thickness","drawSymbol","ChartLocation","titlePositionX","getTitle","textTrim","RectOption","textElement","stringToNumber","removeElement","showTooltip","getElement","appendChildElement","Location","_super","apply","LegendSettings","x","y","legendLabelFont","left","right","top","bottom","legendTitleFont","BaseLegend","chart","pageXCollections","legendTitleCollections","legendRegions","pagingRegions","legend","legendSettings","legendID","element","id","isChartControl","getModuleName","isBulletChartControl","bulletChart","fivePixel","rowCount","pageButtonSize","maxColumns","maxWidth","currentPage","backwardArrowOpacity","forwardArrowOpacity","arrowWidth","arrowHeight","isTop","isTitle","currentPageNumber","calculateLegendBounds","rect","availableSize","maxLabelSize","defaultValue","getPosition","position","legendBounds","isVertical","height","margin","width","library","getLegendBounds","containerPadding","getLocation","alignment","accumulation","visibleSeries","type","setBounds","computedWidth","computedHeight","titleHeight","title","titlePosition","legendTitleSize","isPaging","enablePages","Math","min","mode","titleStyle","textOverflow","calculateLegendTitle","max","ceil","padding","maxItemHeight","border","isBulletChart","labelIns","labelPosition","ticklIns","tickPosition","orientation","categoryFieldValue","categoryField","marginBottom","legendHeight","legendWidth","alignLegend","opposedPosition","majorTickLines","location","start","size","legendSize","renderLegend","redraw","titlePlusArrowWidth","pagingLegendBounds","requireLegendBounds","firstLegend","findFirstLegendPosition","legendCollections","upArrowHeight","legendGroup","renderer","createGroup","legendTranslateGroup","createLegendElements","maxHeight","text","textSize","shapeHeight","getLinearLegend","totalPages","legendSeriesGroup","count","previousLegend","shapeWidth","anchor","isRtlEnabled","textOptions","textPadding","shapePadding","leftSpace","bottomSapce","abs","rightSpace","_i","_a","legendOption","fill","points","pointIndex","color","accessbilityText","render","generateId","setAttribute","tabIndex","toString","description","getRenderPoint","renderSymbol","renderText","toggleVisibility","selectionMode","highlightMode","appendChild","renderPagingElements","enableCanvas","svgObject","xmlns","nextLegend","defElement","createDefs","gradientLegendCount","linerGradientEle","document","createElementNS","opacity","fillColors","numberItems","rangeColorSettings","colorMap","indexOf","push","colors","diffValue","end","colorsLength","index","calculatedValue","_b","_c","fillColor","x2","y2","full","offsetValue","stopEle","startLabel","endLabel","startTextSize","textStyle","endTextSize","textWidth","textHeight","otherSpaces","linearBarWidth","linearBarHeight","xValue","yValue","startLabelY","endLabelY","startLabelX","endLabelX","diffWidth","diffHeight","hiddenColor","fontcolor","visible","themeStyle","legendLabel","isCanvas","translatePage","gradientLegend","drawRectangle","legendCollection","legendCollection_1","maximumTitleWidth","renderLegendTitle","textAlignment","topPadding","legendTitleTextOptions","options","background","legendItemsGroup","clippath","createClipPath","clipRect","pagingClipRect","group","control","symbolColor","isStrokeWidth","shape","toLowerCase","isCustomBorder","borderColor","strokewidth","regionPadding","markerShape","seriesBorder","symbolOption","isInversed","url","markerVisibility","bounds","textOption","paginggroup","grayColor","iconSize","titleWidth","clipPathHeight","clearRect","pageTextElement","totalNoOfPages","calTotalPage","pagingText","page","pageNumber","translate","textContent","changePage","event","pageUp","backwardArrow","getElementById","forwardArrow","pageText","parseInt","split","hideArrow","showArrow","arrowElement","option","prefix","move","_this","mouseX","mouseY","targetId","isNaN","isTouch","series","name","offsetWidth","clearTimeout","clearTooltip","setTimeout","LegendOptions","seriesIndex"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/* eslint-disable valid-jsdoc */\n/* eslint-disable jsdoc/require-param */\n/* eslint-disable @typescript-eslint/no-inferrable-types */\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { measureText, Rect, TextOption, Size, PathOption } from '@syncfusion/ej2-svg-base';\nimport { Font, Border, Margin, ContainerPadding } from '../model/base';\nimport { Theme } from '../model/theme';\nimport { subtractThickness, Thickness, drawSymbol, ChartLocation, titlePositionX, getTitle, textTrim } from '../utils/helper';\nimport { RectOption, textElement, stringToNumber } from '../utils/helper';\nimport { removeElement, showTooltip, getElement, appendChildElement } from '../utils/helper';\n/**\n * Configures the location for the legend.\n */\nvar Location = /** @class */ (function (_super) {\n    __extends(Location, _super);\n    function Location() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Location.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Location.prototype, \"y\", void 0);\n    return Location;\n}(ChildProperty));\nexport { Location };\n/**\n * Configures the legends in charts.\n */\nvar LegendSettings = /** @class */ (function (_super) {\n    __extends(LegendSettings, _super);\n    function LegendSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], LegendSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"width\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Location)\n    ], LegendSettings.prototype, \"location\", void 0);\n    __decorate([\n        Property('Auto')\n    ], LegendSettings.prototype, \"position\", void 0);\n    __decorate([\n        Property('Series')\n    ], LegendSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(8)\n    ], LegendSettings.prototype, \"padding\", void 0);\n    __decorate([\n        Property('Center')\n    ], LegendSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Complex(Theme.legendLabelFont, Font)\n    ], LegendSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(10)\n    ], LegendSettings.prototype, \"shapeHeight\", void 0);\n    __decorate([\n        Property(10)\n    ], LegendSettings.prototype, \"shapeWidth\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LegendSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ left: 0, right: 0, top: 0, bottom: 0 }, Margin)\n    ], LegendSettings.prototype, \"margin\", void 0);\n    __decorate([\n        Complex({ left: 0, right: 0, top: 0, bottom: 0 }, ContainerPadding)\n    ], LegendSettings.prototype, \"containerPadding\", void 0);\n    __decorate([\n        Property(5)\n    ], LegendSettings.prototype, \"shapePadding\", void 0);\n    __decorate([\n        Property('transparent')\n    ], LegendSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property(1)\n    ], LegendSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(true)\n    ], LegendSettings.prototype, \"toggleVisibility\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"description\", void 0);\n    __decorate([\n        Property(3)\n    ], LegendSettings.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"title\", void 0);\n    __decorate([\n        Complex(Theme.legendTitleFont, Font)\n    ], LegendSettings.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Property('Top')\n    ], LegendSettings.prototype, \"titlePosition\", void 0);\n    __decorate([\n        Property(100)\n    ], LegendSettings.prototype, \"maximumTitleWidth\", void 0);\n    __decorate([\n        Property(true)\n    ], LegendSettings.prototype, \"enablePages\", void 0);\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"isInversed\", void 0);\n    return LegendSettings;\n}(ChildProperty));\nexport { LegendSettings };\n/**\n * Legend base class for Chart and Accumulation chart.\n *\n * @private\n */\nvar BaseLegend = /** @class */ (function () {\n    /**\n     * Constructor for the dateTime module.\n     *\n     * @private\n     */\n    function BaseLegend(chart) {\n        this.pageXCollections = []; // pages of x locations\n        this.legendTitleCollections = [];\n        this.legendRegions = [];\n        this.pagingRegions = [];\n        this.chart = chart;\n        this.legend = chart.legendSettings;\n        this.legendID = chart.element.id + '_chart_legend';\n        this.isChartControl = (chart.getModuleName() === 'chart');\n        this.isBulletChartControl = (chart.getModuleName() === 'bulletChart');\n        this.bulletChart = this.chart;\n        this.fivePixel = 5;\n        this.rowCount = 0;\n        this.pageButtonSize = 8;\n        this.maxColumns = 0;\n        this.maxWidth = 0;\n        this.currentPage = 1;\n        this.backwardArrowOpacity = 0;\n        this.forwardArrowOpacity = 1;\n        this.arrowWidth = (2 * (this.fivePixel + this.pageButtonSize + this.fivePixel));\n        this.arrowHeight = this.arrowWidth;\n        this.isTop = false;\n        this.isTitle = false;\n        this.currentPageNumber = 1;\n    }\n    /**\n     * Calculate the bounds for the legends.\n     *\n     * @returns {void}\n     * @private\n     */\n    BaseLegend.prototype.calculateLegendBounds = function (rect, availableSize, maxLabelSize) {\n        var legend = this.legend;\n        var defaultValue = (this.isBulletChartControl) ? '40%' : '20%';\n        this.getPosition(legend.position, availableSize);\n        this.legendBounds = new Rect(rect.x, rect.y, 0, 0);\n        this.isVertical = (this.position === 'Left' || this.position === 'Right');\n        if (this.isVertical) {\n            this.legendBounds.height = stringToNumber(legend.height, availableSize.height - (rect.y - this.chart.margin.top)) || rect.height;\n            this.legendBounds.width = stringToNumber(legend.width || defaultValue, availableSize.width);\n        }\n        else {\n            this.legendBounds.width = stringToNumber(legend.width, availableSize.width) || rect.width;\n            this.legendBounds.height = stringToNumber(legend.height || defaultValue, availableSize.height);\n        }\n        this.library.getLegendBounds(availableSize, this.legendBounds, legend);\n        if (!this.isBulletChartControl) {\n            this.legendBounds.width += (this.legend.containerPadding.left + this.legend.containerPadding.right);\n            this.legendBounds.height += (this.legend.containerPadding.top + this.legend.containerPadding.bottom);\n        }\n        this.getLocation(this.position, legend.alignment, this.legendBounds, rect, availableSize, maxLabelSize);\n    };\n    /**\n     * To find legend position based on available size for chart and accumulation chart\n     *\n     * @param position\n     * @param availableSize\n     * @param position\n     * @param availableSize\n     * @returns {void}\n     */\n    BaseLegend.prototype.getPosition = function (position, availableSize) {\n        var chart = this.chart;\n        var accumulation = this.chart;\n        if (this.isChartControl || this.isBulletChartControl) {\n            this.position = (position !== 'Auto') ? position : 'Bottom';\n        }\n        else {\n            if (position === 'Auto' && ((chart || accumulation).visibleSeries && (chart || accumulation).visibleSeries[0].type === 'Funnel' || (chart || accumulation).visibleSeries[0].type === 'Pyramid')) {\n                position = 'Top';\n            }\n            this.position = (position !== 'Auto') ? position :\n                (availableSize.width > availableSize.height ? 'Right' : 'Bottom');\n        }\n    };\n    /**\n     * To set bounds for chart and accumulation chart\n     *\n     * @param computedWidth\n     * @param computedHeight\n     * @param legend\n     * @param legendBounds\n     * @param computedWidth\n     * @param computedHeight\n     * @param legend\n     * @param legendBounds\n     * @param computedWidth\n     * @param computedHeight\n     * @param legend\n     * @param legendBounds\n     * @param computedWidth\n     * @param computedHeight\n     * @param legend\n     * @param legendBounds\n     * @returns {void}\n     */\n    BaseLegend.prototype.setBounds = function (computedWidth, computedHeight, legend, legendBounds) {\n        var titleHeight = legend.title && legend.titlePosition === 'Top' ? this.legendTitleSize.height + this.fivePixel : 0;\n        if (this.isVertical && this.isPaging && !legend.enablePages && !this.isBulletChartControl) {\n            titleHeight = legend.title && legend.titlePosition === 'Top' ? this.legendTitleSize.height + this.fivePixel : 0;\n            titleHeight += (this.pageButtonSize + this.fivePixel);\n        }\n        computedWidth = Math.min(computedWidth, legendBounds.width);\n        computedHeight = Math.min(computedHeight, legendBounds.height);\n        if (legend.mode === 'Gradient') {\n            legendBounds.width = legend.width ? legendBounds.width : this.isVertical ? computedWidth : 0.75 * legendBounds.width;\n            legendBounds.height = legend.height ? legendBounds.height : this.isVertical ? 0.75 * legendBounds.height : computedHeight;\n        }\n        else {\n            legendBounds.width = !legend.width ? computedWidth : legendBounds.width;\n            legendBounds.height = !legend.height ? computedHeight : legendBounds.height;\n        }\n        if (!this.isBulletChartControl) {\n            if (this.isTop && legend.titleStyle.textOverflow !== 'None') {\n                this.calculateLegendTitle(legend, legendBounds);\n                legendBounds.height += legend.titleStyle.textOverflow === 'Wrap' && this.legendTitleCollections.length > 1 ?\n                    (this.legendTitleSize.height - (this.legendTitleSize.height / this.legendTitleCollections.length)) : 0;\n            }\n        }\n        this.rowCount = Math.max(1, Math.ceil((legendBounds.height - legend.padding - titleHeight) /\n            (this.maxItemHeight + legend.padding)));\n    };\n    /**\n     * To find legend location based on position, alignment for chart and accumulation chart\n     *\n     * @param position\n     * @param alignment\n     * @param legendBounds\n     * @param rect\n     * @param availableSize\n     * @param maxLabelSize\n     * @param position\n     * @param alignment\n     * @param legendBounds\n     * @param rect\n     * @param availableSize\n     * @param maxLabelSize\n     * @param position\n     * @param alignment\n     * @param legendBounds\n     * @param rect\n     * @param availableSize\n     * @param maxLabelSize\n     * @param position\n     * @param alignment\n     * @param legendBounds\n     * @param rect\n     * @param availableSize\n     * @param maxLabelSize\n     * @param position\n     * @param alignment\n     * @param legendBounds\n     * @param rect\n     * @param availableSize\n     * @param maxLabelSize\n     * @param position\n     * @param alignment\n     * @param legendBounds\n     * @param rect\n     * @param availableSize\n     * @param maxLabelSize\n     */\n    BaseLegend.prototype.getLocation = function (position, alignment, legendBounds, rect, availableSize, maxLabelSize) {\n        var padding = this.legend.border.width;\n        var isBulletChart = this.isBulletChartControl;\n        var bulletChart = this.bulletChart;\n        var labelIns = bulletChart.labelPosition === 'Inside';\n        var ticklIns = bulletChart.tickPosition === 'Inside';\n        var isVertical = bulletChart.orientation === 'Vertical';\n        var categoryFieldValue = (isBulletChart && bulletChart.categoryField !== '') ?\n            maxLabelSize.width + this.chart.border.width + padding * 3 : 0;\n        var marginBottom = this.chart.margin.bottom;\n        var legendHeight = legendBounds.height + padding + this.legend.margin.top + this.legend.margin.bottom;\n        var legendWidth = legendBounds.width + padding + this.legend.margin.left + this.legend.margin.right;\n        if (position === 'Bottom') {\n            legendBounds.x = this.alignLegend(legendBounds.x, availableSize.width, legendBounds.width, alignment);\n            legendBounds.y = rect.y + (rect.height - legendHeight) + padding + this.legend.margin.top;\n            legendBounds.y += (isBulletChart && !bulletChart.opposedPosition && !labelIns && !ticklIns\n                && !isVertical) ? bulletChart.majorTickLines.height + marginBottom + this.legend.border.width + padding * 2 :\n                (isVertical && bulletChart.categoryField !== '') ? maxLabelSize.height + padding * 2 : 0;\n            subtractThickness(rect, new Thickness(0, 0, 0, legendHeight));\n        }\n        else if (position === 'Top') {\n            legendBounds.x = this.alignLegend(legendBounds.x, availableSize.width, legendBounds.width, alignment);\n            legendBounds.y = rect.y + padding + this.legend.margin.top;\n            legendBounds.y -= (isBulletChart && bulletChart.opposedPosition && !labelIns && !ticklIns &&\n                !isVertical) ? bulletChart.majorTickLines.height + this.chart.margin.top : 0;\n            legendHeight -= (isBulletChart) ? -padding * 2 : 0;\n            subtractThickness(rect, new Thickness(0, 0, legendHeight, 0));\n        }\n        else if (position === 'Right') {\n            legendBounds.x = rect.x + (rect.width - legendBounds.width) - this.legend.margin.right;\n            legendBounds.y = rect.y + this.alignLegend(0, availableSize.height - (rect.y + marginBottom), legendBounds.height, alignment);\n            legendWidth += (isBulletChart && bulletChart.opposedPosition && !labelIns && !ticklIns &&\n                isVertical) ? (this.chart.margin.left + this.chart.margin.right + bulletChart.majorTickLines.height) : 0;\n            subtractThickness(rect, new Thickness(0, legendWidth, 0, 0));\n        }\n        else if (position === 'Left') {\n            legendBounds.x = legendBounds.x + this.legend.margin.left;\n            legendBounds.y = rect.y + this.alignLegend(0, availableSize.height - (rect.y + marginBottom), legendBounds.height, alignment);\n            legendWidth += (isBulletChart && !bulletChart.opposedPosition && !labelIns && !ticklIns &&\n                isVertical) ? (legendBounds.x - this.chart.margin.left + padding + bulletChart.majorTickLines.height) :\n                (bulletChart.orientation !== 'Vertical' && bulletChart.categoryField !== '') ? categoryFieldValue : 0;\n            subtractThickness(rect, new Thickness(legendWidth, 0, 0, 0));\n        }\n        else {\n            legendBounds.x = this.legend.location.x;\n            legendBounds.y = this.legend.location.y;\n            subtractThickness(rect, new Thickness(0, 0, 0, 0));\n        }\n    };\n    /**\n     * To find legend alignment for chart and accumulation chart\n     *\n     * @param start\n     * @param size\n     * @param legendSize\n     * @param alignment\n     * @param start\n     * @param size\n     * @param legendSize\n     * @param alignment\n     * @param start\n     * @param size\n     * @param legendSize\n     * @param alignment\n     * @param start\n     * @param size\n     * @param legendSize\n     * @param alignment\n     */\n    BaseLegend.prototype.alignLegend = function (start, size, legendSize, alignment) {\n        switch (alignment) {\n            case 'Far':\n                start = (size - legendSize) - start;\n                break;\n            case 'Center':\n                start = ((size - legendSize) / 2);\n                break;\n        }\n        return start;\n    };\n    /**\n     * Renders the legend.\n     *\n     * @param chart\n     * @param legend\n     * @param legendBounds\n     * @param redraw\n     * @param chart\n     * @param legend\n     * @param legendBounds\n     * @param redraw\n     * @param chart\n     * @param legend\n     * @param legendBounds\n     * @param redraw\n     * @param chart\n     * @param legend\n     * @param legendBounds\n     * @param redraw\n     * @returns {void}\n     * @private\n     */\n    BaseLegend.prototype.renderLegend = function (chart, legend, legendBounds, redraw) {\n        var titleHeight = 0;\n        var titlePlusArrowWidth = 0;\n        var pagingLegendBounds = new Rect(0, 0, 0, 0);\n        var requireLegendBounds = new Rect(0, 0, 0, 0);\n        var firstLegend = this.findFirstLegendPosition(this.legendCollections);\n        var padding = legend.padding;\n        var isPaging = legend.enablePages;\n        var titlePosition = legend.titlePosition;\n        var upArrowHeight = this.isPaging && !legend.enablePages && this.isVertical ? this.pageButtonSize : 0;\n        var legendGroup = chart.renderer.createGroup({ id: this.legendID + '_g' });\n        var legendTranslateGroup = this.createLegendElements(chart, legendBounds, legendGroup, legend, this.legendID, redraw);\n        this.legendRegions = [];\n        var maxHeight = 0;\n        for (var i = 0; i < this.legendCollections.length; i++) {\n            if (this.legendCollections[i].text !== '') {\n                maxHeight = Math.max(this.legendCollections[i].textSize.height, maxHeight);\n                break;\n            }\n            else {\n                continue;\n            }\n        }\n        this.maxItemHeight = Math.max(maxHeight, legend.shapeHeight);\n        // For new legend navigation\n        if (!isPaging && this.isPaging && !this.isVertical) {\n            titlePlusArrowWidth = !this.isTitle ? 0 : titlePosition === 'Left' ? this.legendTitleSize.width : 0;\n            titlePlusArrowWidth += (this.pageButtonSize + (2 * this.fivePixel));\n        }\n        else if (!this.isPaging && !this.isVertical) {\n            titlePlusArrowWidth = this.isTitle && titlePosition === 'Left' ? (this.fivePixel + this.legendTitleSize.width) : 0;\n        }\n        titleHeight = !this.isTitle ? 0 : (this.isTop || this.isVertical ? this.legendTitleSize.height : 0);\n        if (chart.legendSettings.mode === 'Gradient' && this.legendCollections.length > 1) {\n            this.getLinearLegend(legendBounds, chart, legend, legendTranslateGroup);\n            this.totalPages = 1;\n        }\n        else if (firstLegend !== this.legendCollections.length) {\n            var legendSeriesGroup = void 0; // legendItem group for each series group element\n            var count = 0;\n            var previousLegend = this.legendCollections[firstLegend];\n            // starting shape center x,y position && to resolve lint error used new line for declaration\n            var start = new ChartLocation(this.isBulletChartControl ? legendBounds.x + titlePlusArrowWidth + padding + (legend.shapeWidth / 2) :\n                legendBounds.x + titlePlusArrowWidth + padding + (legend.shapeWidth / 2) + legend.containerPadding.left, this.isBulletChartControl ? legendBounds.y + titleHeight + upArrowHeight + padding + (this.maxItemHeight / 2) :\n                legendBounds.y + titleHeight + upArrowHeight + padding + (this.maxItemHeight / 2) + legend.containerPadding.top);\n            var anchor = chart.isRtlEnabled ? 'end' : 'start';\n            var textOptions = new TextOption('', start.x, start.y, anchor);\n            var textPadding = legend.shapePadding + padding + legend.shapeWidth;\n            //  initialization for totalPages legend click totalpage again calculate\n            this.totalPages = this.totalPages = (this.isChartControl || this.isBulletChartControl) ? this.totalPages : 0;\n            this.pageXCollections = [];\n            this.legendCollections[firstLegend].location = start;\n            if (!legend.enablePages && this.isPaging) {\n                var x = start.x - this.fivePixel;\n                var y = start.y - this.fivePixel;\n                var leftSpace = this.isTitle && !this.isVertical && titlePosition === 'Left' ?\n                    this.legendTitleSize.width + this.fivePixel : 0;\n                var bottomSapce = this.isVertical ? (this.pageButtonSize) + Math.abs(y - legendBounds.y) : 0;\n                var rightSpace = this.isTitle && !this.isVertical && titlePosition === 'Right' ?\n                    this.legendTitleSize.width + this.fivePixel : 0;\n                rightSpace += this.isVertical ? 0 : (this.fivePixel + this.pageButtonSize + this.fivePixel);\n                pagingLegendBounds = new Rect(x, y, legendBounds.width - rightSpace - leftSpace, legendBounds.height - bottomSapce);\n                requireLegendBounds = pagingLegendBounds;\n            }\n            else {\n                requireLegendBounds = legendBounds;\n            }\n            for (var _i = 0, _a = this.legendCollections; _i < _a.length; _i++) {\n                var legendOption = _a[_i];\n                if (this.chart.getModuleName() === 'accumulationchart') {\n                    // eslint-disable-next-line max-len\n                    legendOption.fill = (this.chart || this.chart).visibleSeries[0].points[legendOption.pointIndex].color;\n                }\n                this.accessbilityText = (this.isBulletChartControl) ? 'Legend of bullet chart' + '' + legendOption.text\n                    : 'Click to show or hide the ' + legendOption.text + ' series';\n                if (legendOption.render && legendOption.text !== '') {\n                    legendSeriesGroup = chart.renderer.createGroup({\n                        id: this.legendID + this.generateId(legendOption, '_g_', count)\n                    });\n                    if (legendSeriesGroup) {\n                        legendSeriesGroup.setAttribute('tabindex', legend.tabIndex.toString());\n                        legendSeriesGroup.setAttribute('aria-label', legend.description ||\n                            this.accessbilityText);\n                    }\n                    this.library.getRenderPoint(legendOption, start, textPadding, previousLegend, requireLegendBounds, count, firstLegend);\n                    this.renderSymbol(legendOption, legendSeriesGroup, count);\n                    this.renderText(chart, legendOption, legendSeriesGroup, textOptions, count);\n                    if (legendSeriesGroup) {\n                        legendSeriesGroup.setAttribute('style', 'outline: none; cursor: ' + ((!legend.toggleVisibility && (chart.selectionMode === 'None' ||\n                            chart.highlightMode === 'None' ||\n                            chart.selectionMode === 'None') || this.isBulletChartControl) ? 'auto' : 'pointer'));\n                    }\n                    if (legendTranslateGroup) {\n                        legendTranslateGroup.appendChild(legendSeriesGroup);\n                    }\n                    previousLegend = legendOption;\n                }\n                count++;\n            }\n            if (this.isPaging) {\n                this.renderPagingElements(chart, legendBounds, textOptions, legendGroup);\n            }\n            else {\n                this.totalPages = 1;\n            }\n        }\n        appendChildElement(chart.enableCanvas, chart.svgObject, legendGroup, redraw);\n    };\n    /** @private */\n    BaseLegend.prototype.getLinearLegend = function (legendBounds, chart, legend, legendTranslateGroup) {\n        var xmlns = 'http://www.w3.org/2000/svg';\n        var previousLegend = this.legendCollections[0];\n        var nextLegend = this.legendCollections[1];\n        var defElement = this.chart.renderer.createDefs();\n        var gradientLegendCount = 0;\n        var linerGradientEle = document.createElementNS(xmlns, 'linearGradient');\n        var opacity = 1;\n        var fillColors = [];\n        var numberItems = [];\n        if (legend.title) {\n            if (!this.isVertical) {\n                if (legend.titlePosition === 'Left') {\n                    legendBounds.x += this.legendTitleSize.width;\n                    legendBounds.width -= this.legendTitleSize.width;\n                }\n                else if (legend.titlePosition === 'Right') {\n                    legendBounds.width -= this.legendTitleSize.width;\n                }\n                else if (legend.titlePosition === 'Top') {\n                    legendBounds.y += this.legendTitleSize.height;\n                    legendBounds.height -= this.legendTitleSize.height;\n                }\n            }\n            else {\n                legendBounds.y += this.legendTitleSize.height;\n                legendBounds.height -= this.legendTitleSize.height;\n            }\n        }\n        for (var _i = 0, _a = this.chart.rangeColorSettings; _i < _a.length; _i++) {\n            var colorMap = _a[_i];\n            if (numberItems.indexOf(colorMap.start) < 0) {\n                numberItems.push(colorMap.start);\n            }\n            if (colorMap.colors.length > 2) {\n                var diffValue = (colorMap.end - colorMap.start);\n                var colorsLength = colorMap.colors.length - 1;\n                if (diffValue > 0) {\n                    diffValue = diffValue / colorsLength;\n                    for (var index = 1; index < colorsLength; index++) {\n                        var calculatedValue = colorMap.start + (diffValue * index);\n                        numberItems.push(calculatedValue);\n                    }\n                }\n                else {\n                    for (var index = 1; index < colorsLength; index++) {\n                        numberItems.push(colorMap.start);\n                    }\n                }\n            }\n            if (numberItems.indexOf(colorMap.end) < 0) {\n                numberItems.push(colorMap.end);\n            }\n            for (var _b = 0, _c = colorMap.colors; _b < _c.length; _b++) {\n                var fillColor = _c[_b];\n                if (fillColors.indexOf(fillColor) < 0) {\n                    fillColors.push(fillColor);\n                }\n            }\n            if (colorMap.colors.length > 0 && colorMap.colors.length < 2) {\n                fillColors.push(colorMap.colors[0]);\n            }\n        }\n        var x2 = this.isVertical ? '0' : '100';\n        var y2 = this.isVertical ? '100' : '0';\n        linerGradientEle.setAttribute('id', this.generateId(previousLegend, 'linearGradient', gradientLegendCount));\n        linerGradientEle.setAttribute('x1', 0 + '%');\n        linerGradientEle.setAttribute('y1', 0 + '%');\n        linerGradientEle.setAttribute('x2', x2 + '%');\n        linerGradientEle.setAttribute('y2', y2 + '%');\n        var full = numberItems[numberItems.length - 1] - numberItems[0];\n        for (var b = 0; b < fillColors.length; b++) {\n            var offsetValue = numberItems[b] - numberItems[0];\n            offsetValue = offsetValue / full;\n            var stopEle = document.createElementNS(xmlns, 'stop');\n            stopEle.setAttribute('offset', offsetValue.toString());\n            stopEle.setAttribute('stop-color', fillColors[b]);\n            stopEle.setAttribute('stop-opacity', opacity.toString());\n            linerGradientEle.appendChild(stopEle);\n        }\n        var startLabel = previousLegend.text.toString();\n        var endLabel = nextLegend.text.toString();\n        var startTextSize = measureText(startLabel, legend.textStyle);\n        var endTextSize = measureText(endLabel, legend.textStyle);\n        var textWidth = startTextSize.width > endTextSize.width ? startTextSize.width : endTextSize.width;\n        var textHeight = startTextSize.height > endTextSize.height ? startTextSize.height : endTextSize.height;\n        var otherSpaces = (2 * textWidth) + (4 * legend.padding);\n        var linearBarWidth = legendBounds.width;\n        var linearBarHeight = legendBounds.height;\n        var xValue = legendBounds.x + textWidth + (2 * legend.padding);\n        var yValue = legendBounds.y + legend.padding;\n        var startLabelY;\n        var endLabelY;\n        var startLabelX;\n        var endLabelX;\n        if (this.isVertical) {\n            otherSpaces = (2 * textHeight) + (4 * legend.padding);\n            linearBarWidth = legendBounds.width - (2 * legend.padding);\n            linearBarHeight = legendBounds.height - otherSpaces;\n            xValue = legendBounds.x + legend.padding;\n            yValue = legendBounds.y + textHeight + (2 * legend.padding);\n            startLabelY = legendBounds.y + legend.padding + textHeight;\n            endLabelY = yValue + linearBarHeight + textHeight;\n            startLabelX = (legendBounds.x + (legendBounds.width * 0.5)) - (textWidth * 0.5);\n            endLabelX = startLabelX;\n            if (linearBarWidth > 30) {\n                var diffWidth = linearBarWidth - 30;\n                linearBarWidth = 30;\n                xValue = xValue + (diffWidth / 2);\n            }\n        }\n        else {\n            linearBarWidth = legendBounds.width - otherSpaces;\n            linearBarHeight = legendBounds.height - (2 * legend.padding);\n            startLabelX = legendBounds.x + legend.padding + (textWidth - startTextSize.width);\n            endLabelX = legendBounds.x + linearBarWidth + (3 * legend.padding) + textWidth;\n            startLabelY = legendBounds.y + (legendBounds.height * 0.5) + (textHeight * 0.25);\n            endLabelY = startLabelY;\n            if (linearBarHeight > 30) {\n                var diffHeight = linearBarHeight - 30;\n                linearBarHeight = 30;\n                yValue = yValue + (diffHeight / 2);\n            }\n        }\n        var textOptions = new TextOption('', startLabelX, startLabelY, '', startLabel);\n        var hiddenColor = '#D3D3D3';\n        textOptions.id = this.legendID + this.generateId(previousLegend, '_text_', 1);\n        var fontcolor = previousLegend.visible ? legend.textStyle.color || chart.themeStyle.legendLabel : hiddenColor;\n        var isCanvas = this.chart.enableCanvas;\n        textElement(chart.renderer, textOptions, legend.textStyle, fontcolor, legendTranslateGroup, false, false, false, false, \n        // tslint:disable-next-line:align\n        null, this.currentPageNumber && isCanvas ?\n            new Rect(0, -this.translatePage(null, this.currentPageNumber - 1, this.currentPageNumber), 0, 0) : null);\n        textOptions = new TextOption('', endLabelX, endLabelY, '', endLabel);\n        textOptions.id = this.legendID + this.generateId(previousLegend, '_text_', 2);\n        textElement(chart.renderer, textOptions, legend.textStyle, fontcolor, legendTranslateGroup, false, false, false, false, \n        // tslint:disable-next-line:align\n        null, this.currentPageNumber && isCanvas ?\n            new Rect(0, -this.translatePage(null, this.currentPageNumber - 1, this.currentPageNumber), 0, 0) : null);\n        var gradientLegend = chart.renderer.drawRectangle({\n            width: linearBarWidth,\n            height: linearBarHeight,\n            x: xValue,\n            y: yValue,\n            fill: 'url(#' + this.generateId(previousLegend, 'linearGradient', gradientLegendCount) + ')'\n        });\n        defElement.appendChild(linerGradientEle);\n        legendTranslateGroup.appendChild(defElement);\n        legendTranslateGroup.appendChild(gradientLegend);\n    };\n    /**\n     * To find first valid legend text index for chart and accumulation chart\n     *\n     * @param legendCollection\n     * @returns {number}\n     * @private\n     */\n    BaseLegend.prototype.findFirstLegendPosition = function (legendCollection) {\n        var count = 0;\n        for (var _i = 0, legendCollection_1 = legendCollection; _i < legendCollection_1.length; _i++) {\n            var legend = legendCollection_1[_i];\n            if (legend.render && legend.text !== '') {\n                break;\n            }\n            count++;\n        }\n        return count;\n    };\n    /**\n     * To get the legend title text width and height.\n     *\n     * @param legend\n     * @param legendBounds\n     */\n    BaseLegend.prototype.calculateLegendTitle = function (legend, legendBounds) {\n        if (legend.title) {\n            this.isTop = legend.titlePosition === 'Top';\n            var padding = legend.titleStyle.textOverflow === 'Trim' ? 2 * legend.padding : 0;\n            if (this.isTop || this.isVertical) {\n                this.legendTitleCollections = getTitle(legend.title, legend.titleStyle, (legendBounds.width - padding));\n            }\n            else {\n                this.legendTitleCollections[0] = textTrim(legend.maximumTitleWidth, legend.title, legend.titleStyle);\n            }\n            var text = this.isTop ? legend.title : this.legendTitleCollections[0];\n            this.legendTitleSize = measureText(text, legend.titleStyle);\n            this.legendTitleSize.height *= this.legendTitleCollections.length;\n        }\n        else {\n            this.legendTitleSize = new Size(0, 0);\n        }\n    };\n    /**\n     * Render the legend title\n     *\n     * @param chart\n     * @param legend\n     * @param legendBounds\n     * @param legendGroup\n     */\n    BaseLegend.prototype.renderLegendTitle = function (chart, legend, legendBounds, legendGroup) {\n        var padding = legend.padding;\n        var alignment = legend.titleStyle.textAlignment;\n        this.isTop = legend.titlePosition === 'Top';\n        var anchor = alignment === 'Near' ? 'start' : alignment === 'Far' ? 'end' : 'middle';\n        var x = titlePositionX(legendBounds, legend.titleStyle);\n        anchor = this.isTop || this.isVertical ? anchor : '';\n        x = alignment === 'Near' ? (x + padding) : alignment === 'Far' ? (x - padding) : x;\n        x = (this.isTop || this.isVertical) ? x : ((legendBounds.x) + (legend.titlePosition === 'Left' ? 5 :\n            (legendBounds.width - this.legendTitleSize.width - 5)));\n        var topPadding = (legendBounds.height / 2) + (this.legendTitleSize.height / 4);\n        var y = legendBounds.y + (!this.isTop && !this.isVertical ? topPadding :\n            (this.legendTitleSize.height / this.legendTitleCollections.length));\n        var legendTitleTextOptions = new TextOption(this.legendID + '_title', x, y, anchor, this.legendTitleCollections);\n        textElement(chart.renderer, legendTitleTextOptions, legend.titleStyle, legend.titleStyle.color, legendGroup);\n    };\n    /**\n     * To create legend rendering elements for chart and accumulation chart\n     *\n     * @param chart\n     * @param legendBounds\n     * @param legendGroup\n     * @param legend\n     * @param id\n     * @param redraw\n     */\n    BaseLegend.prototype.createLegendElements = function (chart, legendBounds, legendGroup, legend, id, redraw) {\n        var padding = legend.padding;\n        var options = new RectOption(id + '_element', legend.background, legend.border, legend.opacity, legendBounds);\n        var legendItemsGroup = chart.renderer.createGroup({ id: id + '_collections' });\n        var isCanvas = chart.enableCanvas;\n        var clippath = chart.renderer.createClipPath({ id: id + '_clipPath' });\n        if (legendGroup) {\n            legendGroup.appendChild(chart.renderer.drawRectangle(options));\n        }\n        else {\n            chart.renderer.drawRectangle(options);\n        }\n        if (legend.title) {\n            this.renderLegendTitle(chart, legend, legendBounds, legendGroup);\n        }\n        if (!isCanvas) {\n            legendGroup.appendChild(legendItemsGroup);\n        }\n        this.legendTranslateGroup = chart.renderer.createGroup({ id: id + '_translate_g' });\n        if (!isCanvas) {\n            legendItemsGroup.appendChild(this.legendTranslateGroup);\n        }\n        options.y += padding + (this.isTop ? this.legendTitleSize.height : 0);\n        options.id += '_clipPath_rect';\n        options.width = ((!this.isChartControl && chart.getModuleName() !== 'bulletChart') && this.isVertical) ? this.maxWidth - padding + legend.containerPadding.left + legend.containerPadding.right\n            : legendBounds.width;\n        if (!isCanvas) {\n            this.clipRect = chart.renderer.drawRectangle(options);\n            clippath.appendChild(this.clipRect);\n        }\n        else {\n            this.pagingClipRect = options;\n        }\n        appendChildElement(isCanvas, chart.svgObject, clippath, redraw);\n        if (!isCanvas) {\n            legendItemsGroup.setAttribute('style', 'clip-path:url(#' + clippath.id + ')');\n        }\n        return this.legendTranslateGroup;\n    };\n    /**\n     * To render legend symbols for chart and accumulation chart\n     *\n     * @param legendOption\n     * @param group\n     * @param i\n     * @param legendOption\n     * @param group\n     * @param i\n     * @param legendOption\n     * @param group\n     * @param i\n     */\n    BaseLegend.prototype.renderSymbol = function (legendOption, group, i) {\n        var control = this.isBulletChartControl ? this.chart : null;\n        var symbolColor = legendOption.visible ? legendOption.fill : '#D3D3D3';\n        var isStrokeWidth = (this.chart.getModuleName() === 'chart' && (legendOption.shape === 'SeriesType') &&\n            (legendOption.type.toLowerCase().indexOf('line') > -1) && (legendOption.type.toLowerCase().indexOf('area') === -1));\n        var isCustomBorder = this.chart.getModuleName() === 'chart' &&\n            (legendOption.type === 'Scatter' || legendOption.type === 'Bubble');\n        var isCanvas = this.chart.enableCanvas;\n        var borderColor;\n        var shape = (legendOption.shape === 'SeriesType') ? legendOption.type : legendOption.shape;\n        var strokewidth = isStrokeWidth ? (this.legend.mode === 'Series' ?\n            this.chart.visibleSeries[i].width : this.chart.visibleSeries[0].width) :\n            (this.isBulletChartControl && legendOption.shape === 'Multiply') ? 4 : 1;\n        var regionPadding;\n        shape = shape === 'Scatter' ? legendOption.markerShape : shape;\n        if (isCustomBorder && i < this.chart.visibleSeries.length) {\n            var seriesBorder = this.chart.visibleSeries[i].border;\n            borderColor = seriesBorder.color ? seriesBorder.color : symbolColor;\n            strokewidth = seriesBorder.width ? seriesBorder.width : 1;\n        }\n        var symbolOption = new PathOption(this.legendID + this.generateId(legendOption, '_shape_', i), symbolColor, strokewidth, (isCustomBorder ? borderColor : symbolColor), 1, '', '');\n        var textSize = measureText(legendOption.text, this.legend.textStyle);\n        var x = this.legend.isInversed ? legendOption.location.x + textSize.width + this.legend.shapePadding\n            : legendOption.location.x;\n        var y = legendOption.location.y;\n        if (!isCanvas) {\n            group.appendChild(drawSymbol({ x: x, y: y }, shape, new Size(this.legend.shapeWidth, this.legend.shapeHeight), legendOption.url, symbolOption, this.accessbilityText, this.chart.renderer, null, this.isBulletChartControl, control));\n        }\n        else {\n            regionPadding = -this.translatePage(null, this.currentPageNumber - 1, this.currentPageNumber);\n            drawSymbol({ x: x, y: y }, shape, new Size(this.legend.shapeWidth, this.legend.shapeHeight), '', symbolOption, this.accessbilityText, this.chart.renderer, this.currentPageNumber ? new Rect(0, regionPadding, 0, 0) : null, this.isBulletChartControl, control);\n            this.legendRegions.push({\n                rect: new Rect(legendOption.location.x, legendOption.location.y, this.legend.shapeWidth, this.legend.shapeHeight + regionPadding), index: i\n            });\n        }\n        if (shape === 'Line' && legendOption.markerVisibility && legendOption.markerShape !== 'Image' ||\n            (legendOption.type === 'Doughnut' && shape === 'Doughnut')) {\n            symbolOption.id = this.legendID + this.generateId(legendOption, '_shape_marker_', i);\n            shape = legendOption.type === 'Doughnut' ? 'Circle' : legendOption.markerShape;\n            symbolOption.fill = legendOption.type === 'Doughnut' ? '#FFFFFF' : symbolOption.fill;\n            if (!isCanvas) {\n                // eslint-disable-next-line max-len\n                group.appendChild(drawSymbol({ x: x, y: y }, shape, new Size(this.legend.shapeWidth / 2, this.legend.shapeHeight / 2), '', symbolOption, this.accessbilityText, null, null, this.isBulletChartControl, control));\n            }\n            else {\n                drawSymbol({ x: x, y: y }, shape, new Size(this.legend.shapeWidth / 2, this.legend.shapeHeight / 2), '', symbolOption, this.accessbilityText, this.chart.renderer, this.currentPageNumber ?\n                    new Rect(0, -this.translatePage(null, this.currentPageNumber - 1, this.currentPageNumber), 0, 0) : null, this.isBulletChartControl, control);\n            }\n        }\n    };\n    /**\n     * To render legend text for chart and accumulation chart\n     *\n     * @param chart\n     * @param legendOption\n     * @param group\n     * @param textOptions\n     * @param i\n     * @param chart\n     * @param legendOption\n     * @param group\n     * @param textOptions\n     * @param i\n     * @param chart\n     * @param legendOption\n     * @param group\n     * @param textOptions\n     * @param i\n     * @param chart\n     * @param legendOption\n     * @param group\n     * @param textOptions\n     * @param i\n     * @param chart\n     * @param legendOption\n     * @param group\n     * @param textOptions\n     * @param i\n     */\n    BaseLegend.prototype.renderText = function (chart, legendOption, group, textOptions, i) {\n        var legend = chart.legendSettings;\n        var hiddenColor = '#D3D3D3';\n        var fontcolor = legendOption.visible ? legend.textStyle.color || chart.themeStyle.legendLabel : hiddenColor;\n        var isCanvas = this.chart.enableCanvas;\n        textOptions.id = this.legendID + this.generateId(legendOption, '_text_', i);\n        textOptions.text = legendOption.text;\n        textOptions.x = legend.isInversed ? legendOption.location.x - (legend.shapeWidth / 2) :\n            legendOption.location.x + (legend.shapeWidth / 2) + legend.shapePadding;\n        textOptions.y = legendOption.location.y + this.maxItemHeight / 4;\n        var element = textElement(chart.renderer, textOptions, legend.textStyle, fontcolor, group, false, false, false, false, null, this.currentPageNumber && isCanvas ?\n            new Rect(0, -this.translatePage(null, this.currentPageNumber - 1, this.currentPageNumber), 0, 0) : null);\n        if (element) {\n            element.setAttribute('aria-label', legend.description || this.accessbilityText);\n        }\n        if (isCanvas) {\n            var textSize = measureText(textOptions.text, legend.textStyle);\n            this.legendRegions[i].rect.y = textOptions.y < this.legendRegions[i].rect.y ? textOptions.y : this.legendRegions[i].rect.y;\n            this.legendRegions[i].rect.width += textSize.width;\n            this.legendRegions[i].rect.height = textSize.height;\n            this.legendRegions[i].rect.y -= textSize.height * 0.5;\n        }\n    };\n    /**\n     * To render legend paging elements for chart and accumulation chart\n     *\n     * @param chart\n     * @param bounds\n     * @param textOption\n     * @param legendGroup\n     * @param chart\n     * @param bounds\n     * @param textOption\n     * @param legendGroup\n     * @param chart\n     * @param bounds\n     * @param textOption\n     * @param legendGroup\n     * @param chart\n     * @param bounds\n     * @param textOption\n     * @param legendGroup\n     */\n    BaseLegend.prototype.renderPagingElements = function (chart, bounds, textOption, legendGroup) {\n        var paginggroup = chart.renderer.createGroup({ id: this.legendID + '_navigation' });\n        var isCanvas = chart.enableCanvas;\n        var titleHeight = this.isBulletChartControl ? 0 : this.legendTitleSize.height;\n        var grayColor = '#545454';\n        var legend = chart.legendSettings; // to solve parameter lint error, legend declaration is here\n        var padding = 8; // const padding for paging elements\n        var symbolOption = new PathOption(this.legendID + '_pageup', 'transparent', 5, grayColor, 1, '', '');\n        var iconSize = this.pageButtonSize;\n        // Page left arrow drawing calculation started here\n        var rowCount = !legend.enablePages && this.isPaging && !this.isVertical && !this.isBulletChartControl ? 1 :\n            (this.rowCount - 1);\n        var titleWidth = this.isTitle && legend.titlePosition === 'Left' ? this.legendTitleSize.width : 0;\n        this.pagingRegions = [];\n        this.backwardArrowOpacity = this.currentPage !== 1 ? 1 : 0;\n        this.forwardArrowOpacity = this.currentPage === this.totalPages ? 0 : 1;\n        if (!isCanvas) {\n            legendGroup.appendChild(paginggroup);\n        }\n        if (this.isChartControl || this.isBulletChartControl || !this.isVertical) {\n            this.totalPages = Math.ceil(this.totalPages / Math.max(1, this.rowCount - 1));\n        }\n        else {\n            this.totalPages = Math.ceil(this.totalPages / this.maxColumns);\n        }\n        if (paginggroup) {\n            paginggroup.setAttribute('style', 'cursor: pointer');\n        }\n        this.clipPathHeight = rowCount * (this.maxItemHeight + legend.padding);\n        if (!isCanvas) {\n            this.clipRect.setAttribute('height', this.clipPathHeight.toString());\n        }\n        else {\n            //paging clipRect only for canvas mode\n            this.pagingClipRect.height = this.legendBounds.height - this.clipPathHeight -\n                (this.pagingClipRect.y - this.legendBounds.y) - legend.border.width;\n            this.pagingClipRect.y = this.pagingClipRect.y + this.clipPathHeight;\n            this.pagingClipRect.x += legend.border.width;\n            this.pagingClipRect.width -= (legend.border.width + legend.border.width / 2);\n            this.chart.renderer.clearRect(new Rect(this.pagingClipRect.x, this.pagingClipRect.y, this.pagingClipRect.width, this.pagingClipRect.height));\n        }\n        var pageTextElement;\n        var x = (bounds.x + iconSize / 2);\n        var y = bounds.y + this.clipPathHeight + ((titleHeight + bounds.height - this.clipPathHeight) / 2);\n        if (this.isPaging && !legend.enablePages && !this.isVertical && !this.isBulletChartControl) {\n            x = (bounds.x + this.fivePixel + this.pageButtonSize + titleWidth);\n            y = legend.title && this.isTop ? (bounds.y + padding + titleHeight + (iconSize / 1) + 0.5) :\n                (bounds.y + padding + iconSize + 0.5);\n        }\n        var size = measureText(this.totalPages + '/' + this.totalPages, legend.textStyle);\n        if (!isCanvas) {\n            if (this.isVertical && !legend.enablePages && !this.isBulletChartControl) {\n                x = bounds.x + (bounds.width / 2);\n                y = bounds.y + (iconSize / 2) + padding + titleHeight;\n                symbolOption.opacity = this.backwardArrowOpacity;\n                paginggroup.appendChild(drawSymbol({ x: x, y: y }, 'UpArrow', new Size(iconSize, iconSize), '', symbolOption, 'UpArrow'));\n            }\n            else {\n                symbolOption.opacity = this.isBulletChartControl ? symbolOption.opacity :\n                    (legend.enablePages ? 1 : this.backwardArrowOpacity);\n                paginggroup.appendChild(drawSymbol({ x: x, y: y }, 'LeftArrow', new Size(iconSize, iconSize), '', symbolOption, 'LeftArrow'));\n            }\n        }\n        else {\n            drawSymbol({ x: x, y: y }, 'LeftArrow', new Size(iconSize, iconSize), '', symbolOption, 'LeftArrow', this.chart.renderer, new Rect(bounds.width - (2 * (iconSize + padding) + padding + size.width), 0, 0, 0));\n        }\n        this.pagingRegions.push(new Rect(x + bounds.width - (2 * (iconSize + padding) + padding + size.width) - iconSize * 0.5, y - iconSize * 0.5, iconSize, iconSize));\n        // Page numbering rendering calculation started here\n        textOption.x = x + (iconSize / 2) + padding;\n        textOption.y = y + (size.height / 4);\n        textOption.id = this.legendID + '_pagenumber';\n        textOption.text = '1/' + this.totalPages;\n        if (isCanvas && this.totalNoOfPages) {\n            textOption.text = this.currentPageNumber + '/' + this.totalNoOfPages;\n        }\n        if (legend.enablePages || this.isBulletChartControl) {\n            pageTextElement = textElement(chart.renderer, textOption, legend.textStyle, legend.textStyle.color, paginggroup, false, false, false, false, null, new Rect(bounds.width - (2 * (iconSize + padding) + padding + size.width), 0, 0, 0));\n        }\n        // Page right arrow rendering calculation started here\n        x = textOption.x + padding + (iconSize / 2) + size.width;\n        if (this.isPaging && !legend.enablePages && !this.isVertical) {\n            x = (bounds.x + bounds.width - this.fivePixel - this.pageButtonSize - (legend.title && legend.titlePosition === 'Right' ?\n                this.legendTitleSize.width + this.fivePixel : 0));\n        }\n        symbolOption.id = this.legendID + '_pagedown';\n        symbolOption.opacity = !legend.enablePages ? this.forwardArrowOpacity : 1;\n        if (!isCanvas) {\n            if (this.isVertical && !legend.enablePages && !this.isBulletChartControl) {\n                x = bounds.x + (bounds.width / 2);\n                y = bounds.y + bounds.height - (iconSize / 2) - padding;\n                paginggroup.appendChild(drawSymbol({ x: x, y: y }, 'DownArrow', new Size(iconSize, iconSize), '', symbolOption, 'DownArrow'));\n            }\n            else {\n                paginggroup.appendChild(drawSymbol({ x: x, y: y }, 'RightArrow', new Size(iconSize, iconSize), '', symbolOption, 'RightArrow'));\n            }\n        }\n        else {\n            drawSymbol({ x: x, y: y }, 'RightArrow', new Size(iconSize, iconSize), '', symbolOption, 'RightArrow', this.chart.renderer, new Rect(bounds.width - (2 * (iconSize + padding) + padding + size.width), 0, 0, 0));\n        }\n        this.pagingRegions.push(new Rect(x + (bounds.width - (2 * (iconSize + padding) + padding + size.width) - iconSize * 0.5), y - iconSize * 0.5, iconSize, iconSize));\n        if (!isCanvas && (legend.enablePages || this.isBulletChartControl)) {\n            //placing the navigation buttons and page numbering in legend right corner\n            paginggroup.setAttribute('transform', 'translate(' + (bounds.width - (2 * (iconSize + padding) +\n                padding + size.width)) + ', ' + 0 + ')');\n        }\n        else {\n            if (this.currentPageNumber === 1 && this.calTotalPage && (legend.enablePages || this.isBulletChartControl)) {\n                this.totalNoOfPages = this.totalPages;\n                this.calTotalPage = false;\n            }\n            if (!legend.enablePages && !this.isBulletChartControl) { // For new legend page navigation\n                this.translatePage(null, this.currentPage - 1, this.currentPage, legend);\n            }\n        }\n        if (legend.enablePages || this.isBulletChartControl) {\n            this.translatePage(pageTextElement, this.currentPage - 1, this.currentPage, legend);\n        }\n    };\n    /**\n     * To translate legend pages for chart and accumulation chart\n     *\n     * @param pagingText\n     * @param page\n     * @param pageNumber\n     * @param legend\n     * @param pagingText\n     * @param page\n     * @param pageNumber\n     * @param legend\n     * @param pagingText\n     * @param page\n     * @param pageNumber\n     * @param legend\n     * @param pagingText\n     * @param page\n     * @param pageNumber\n     * @param legend\n     */\n    BaseLegend.prototype.translatePage = function (pagingText, page, pageNumber, legend) {\n        var size = (this.clipPathHeight) * page;\n        var translate = 'translate(0,-' + size + ')';\n        if (!this.isChartControl && !this.isBulletChartControl && this.isVertical) {\n            size = this.pageXCollections[page * this.maxColumns] - this.legendBounds.x;\n            size = size < 0 ? 0 : size; // to avoid small pixel variation\n            translate = 'translate(-' + size + ',0)';\n        }\n        if (!this.chart.enableCanvas) {\n            this.legendTranslateGroup.setAttribute('transform', translate);\n        }\n        if (!this.chart.enableCanvas && (legend.enablePages || this.isBulletChartControl)) {\n            pagingText.textContent = (pageNumber) + '/' + this.totalPages;\n        }\n        this.currentPage = pageNumber;\n        return size;\n    };\n    /**\n     * To change legend pages for chart and accumulation chart\n     *\n     * @param event\n     * @param pageUp\n     * @param event\n     * @param pageUp\n     */\n    BaseLegend.prototype.changePage = function (event, pageUp) {\n        var legend = this.chart.legendSettings;\n        var backwardArrow = document.getElementById(this.legendID + '_pageup');\n        var forwardArrow = document.getElementById(this.legendID + '_pagedown');\n        var pageText = (legend.enablePages || this.isBulletChartControl) ?\n            document.getElementById(this.legendID + '_pagenumber') : null;\n        var page = (legend.enablePages || this.isBulletChartControl) ? parseInt(pageText.textContent.split('/')[0], 10) :\n            this.currentPage;\n        if (pageUp && page > 1) {\n            this.translatePage(pageText, (page - 2), (page - 1), legend);\n        }\n        else if (!pageUp && page < this.totalPages) {\n            this.translatePage(pageText, page, (page + 1), legend);\n        }\n        if (this.isPaging && !legend.enablePages && !this.isBulletChartControl) {\n            // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n            this.currentPage === this.totalPages ? this.hideArrow(forwardArrow) : this.showArrow(forwardArrow);\n            // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n            this.currentPage === 1 ? this.hideArrow(backwardArrow) : this.showArrow(backwardArrow);\n        }\n    };\n    /**\n     * To hide the backward and forward arrow\n     *\n     * @param arrowElement\n     */\n    BaseLegend.prototype.hideArrow = function (arrowElement) {\n        arrowElement.setAttribute('opacity', '0');\n    };\n    /**\n     * To show the  backward and forward arrow\n     *\n     * @param arrowElement\n     */\n    BaseLegend.prototype.showArrow = function (arrowElement) {\n        arrowElement.setAttribute('opacity', '1');\n    };\n    /**\n     * To find legend elements id based on chart or accumulation chart\n     *\n     * @param option\n     * @param prefix\n     * @param count\n     * @param option\n     * @param prefix\n     * @param count\n     * @param option\n     * @param prefix\n     * @param count\n     * @private\n     */\n    BaseLegend.prototype.generateId = function (option, prefix, count) {\n        if (this.isChartControl) {\n            return prefix + count;\n        }\n        else {\n            return prefix + option.pointIndex;\n        }\n    };\n    /**\n     * To show or hide trimmed text tooltip for legend.\n     *\n     * @param event\n     * @returns {void}\n     * @private\n     */\n    BaseLegend.prototype.move = function (event) {\n        var _this = this;\n        var x = this.chart.mouseX;\n        var y = this.chart.mouseY;\n        if (event.target.textContent.indexOf('...') > -1) {\n            var targetId = event.target.id.split(this.legendID + '_text_');\n            if (targetId.length === 2) {\n                var index = parseInt(targetId[1], 10);\n                var element = this.chart.element;\n                if (!isNaN(index)) {\n                    if (this.chart.isTouch) {\n                        removeElement(this.chart.element.id + '_EJ2_Legend_Tooltip');\n                    }\n                    if (this.isChartControl) {\n                        showTooltip(this.chart.series[index].name, x, y, element.offsetWidth, element.id + '_EJ2_Legend_Tooltip', getElement(this.chart.element.id + '_Secondary_Element'));\n                    }\n                    else {\n                        showTooltip(this.chart.visibleSeries[0].points[index].x.toString(), x + 10, y + 10, element.offsetWidth, element.id + '_EJ2_Legend_Tooltip', getElement(this.chart.element.id + '_Secondary_Element'));\n                    }\n                }\n            }\n        }\n        else {\n            removeElement(this.chart.element.id + '_EJ2_Legend_Tooltip');\n        }\n        if (this.chart.isTouch) {\n            clearTimeout(this.clearTooltip);\n            this.clearTooltip = +setTimeout(function () { removeElement(_this.chart.element.id + '_EJ2_Legend_Tooltip'); }, 1000);\n        }\n    };\n    return BaseLegend;\n}());\nexport { BaseLegend };\n/**\n * Class for legend options\n *\n * @private\n */\nvar LegendOptions = /** @class */ (function () {\n    function LegendOptions(text, fill, shape, visible, type, url, markerShape, markerVisibility, pointIndex, seriesIndex) {\n        this.location = { x: 0, y: 0 };\n        this.text = text;\n        this.fill = fill;\n        this.shape = shape;\n        this.url = url;\n        this.visible = visible;\n        this.type = type;\n        this.markerVisibility = markerVisibility;\n        this.markerShape = markerShape;\n        this.pointIndex = pointIndex;\n        this.seriesIndex = seriesIndex;\n    }\n    return LegendOptions;\n}());\nexport { LegendOptions };\n"]},"metadata":{},"sourceType":"module"}