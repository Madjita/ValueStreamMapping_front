{"ast":null,"code":"var _jsxFileName = \"/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Card/AllCardsView/ViewCard_all.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ViewCard from '../ViewCard';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport { useActionCardVSM } from '../../../hooks/useActionCardVSM';\nimport { useTypedSelector } from '../../../hooks/leftMenuSelector';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ViewCard_all = props => {\n  _s();\n\n  const [BDitems, setBDItem] = useState();\n  const {\n    cardVSMs,\n    loading\n  } = useTypedSelector(state => state.cardVSM);\n  const {\n    cardVSMLoading\n  } = useActionCardVSM();\n  const [card, setCard] = useState(cardVSMs);\n  let cardSections = new Array();\n  let etapSection = new Array();\n  let item = props.sectionsCard;\n\n  for (let index = 0; index < item.length; index++) {\n    const element = item[index];\n\n    if (index === 0) {\n      etapSection.push(element);\n    } else {\n      if (element.etapNumeric === etapSection[0].etapNumeric) {\n        etapSection.push(element);\n      } else {\n        let cardSection = new Object();\n        cardSection.sections = etapSection.slice();\n        cardSections.push(cardSection);\n        etapSection = new Array();\n        etapSection.push(element);\n      }\n    }\n  }\n\n  let cardSection = new Object();\n  cardSection.sections = etapSection.slice();\n  cardSections.push(cardSection);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      marginBottom: '150px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      action: /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"settings\",\n        children: /*#__PURE__*/_jsxDEV(SettingsIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this) //title={'\\\"'+item.name + '\\\" | Количество: '+props.order.order.orders_production[index].quantity}\n      ,\n      sx: {\n        fontWeight: 'bold',\n        color: 'white',\n        backgroundColor: '#575757'\n      },\n      style: {\n        color: 'white'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      sx: {\n        backgroundColor: 'rgba(0, 0, 0, .03)'\n      },\n      children: /*#__PURE__*/_jsxDEV(ViewCard, {\n        sections: cardSections\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ViewCard_all, \"o5F3S6OzNKhEPEneNJdzXvPG1yg=\", false, function () {\n  return [useTypedSelector, useActionCardVSM];\n});\n\n_c = ViewCard_all;\nexport default ViewCard_all;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewCard_all\");","map":{"version":3,"sources":["/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Card/AllCardsView/ViewCard_all.tsx"],"names":["React","useState","ViewCard","Card","CardHeader","CardContent","IconButton","SettingsIcon","useActionCardVSM","useTypedSelector","ViewCard_all","props","BDitems","setBDItem","cardVSMs","loading","state","cardVSM","cardVSMLoading","card","setCard","cardSections","Array","etapSection","item","sectionsCard","index","length","element","push","etapNumeric","cardSection","Object","sections","slice","marginBottom","fontWeight","color","backgroundColor"],"mappings":"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","sourcesContent":["import React,{useEffect, useState} from 'react'\n\nimport IDataCardSection from '../../Data/IDataCardSection'\nimport IDataOrderItem from '../../Data/IDataOrderItem'\nimport Divider from '@material-ui/core/Divider';\nimport ViewCard from '../ViewCard'\n\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { Box } from '@material-ui/system';\n\n\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardContent from '@material-ui/core/CardContent'\n\nimport IconButton from '@material-ui/core/IconButton'\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport SettingsIcon from '@material-ui/icons/Settings';\n\nimport IDataVSM from '../../Data/IDataVSM'\nimport IDataProduction from '../../Data/IDataProduction';\nimport IDataCardVSM from '../../Data/IDataCardVSM';\nimport { useCardVSMActionType, useProductionCardVSM } from '../../../type/useCardVSMType';\n\nimport { useActionCardVSM } from '../../../hooks/useActionCardVSM';\nimport { useTypedSelector } from '../../../hooks/leftMenuSelector';\nimport IDataOrder from '../../Data/IDataOrder';\nimport { MyCards, OrderMy } from '../../../type/useOrdersType';\n\n\n\nconst ViewCard_all =  (props: {sectionsCard: IDataCardVSM[]}) => {\n\n    const [BDitems, setBDItem] = useState<IDataOrderItem[]>();\n\n    const {cardVSMs, loading} = useTypedSelector(state => state.cardVSM);\n    const {cardVSMLoading} = useActionCardVSM()\n\n    const [card, setCard] = useState(cardVSMs);\n\n    \n    let cardSections = new Array as IDataCardSection[];\n    let etapSection = new Array as IDataCardVSM[];\n\n    let item = props.sectionsCard;\n\n    for (let index = 0; index < item.length; index++) \n    {\n        const element = item[index];\n\n        if(index === 0)\n        {\n            etapSection.push(element);\n        }\n        else\n        {\n            if(element.etapNumeric === etapSection[0].etapNumeric)\n            {\n                etapSection.push(element);\n            }\n            else\n            {\n                let cardSection = new Object as IDataCardSection;\n                cardSection.sections = etapSection.slice()\n                cardSections.push(cardSection);\n\n                etapSection = new Array as IDataCardVSM[];\n\n                etapSection.push(element);\n            }\n        }\n    }\n\n    let cardSection = new Object as IDataCardSection;\n    cardSection.sections = etapSection.slice()\n    cardSections.push(cardSection);\n\n\n    return(\n        <Card sx={{marginBottom: '150px'}}>\n            <CardHeader\n                action={\n                    <IconButton aria-label=\"settings\">\n                        <SettingsIcon />\n                    </IconButton>\n                }\n                //title={'\\\"'+item.name + '\\\" | Количество: '+props.order.order.orders_production[index].quantity}\n                sx={{fontWeight: 'bold',color: 'white', backgroundColor: '#575757'}}\n                style={{color: 'white'}}\n            >\n                \n            </CardHeader>\n            <CardContent sx={{backgroundColor: 'rgba(0, 0, 0, .03)'}}>\n                <ViewCard sections={cardSections} /> \n           </CardContent>\n        </Card>\n\n    )\n\n\n    \n}\n\n\nexport default ViewCard_all;"]},"metadata":{},"sourceType":"module"}