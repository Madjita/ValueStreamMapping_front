{"ast":null,"code":"var _jsxFileName = \"/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst URL = 'ws://192.168.0.2:5001/ws';\n\nconst Chat = () => {\n  _s();\n\n  const [user, setUser] = useState('Tarzan');\n  const [message, setMessage] = useState([]); //const [ws, setWs] = useState(null);\n\n  const submitMessage = (usr, msg) => {\n    const message = {\n      user: usr,\n      message: msg\n    };\n    ws.send(JSON.stringify(message));\n    setMessage([message, ...messages]);\n  };\n\n  const soket = useRef(null); //let ws = useRef(null);\n\n  /*\tuseEffect(() => {\n     soket.onopen = () => {\n       console.log('WebSocket Connected');\n     }\n      soket.onmessage = (e) => {\n          console.log('Read');\n       const message = JSON.parse(e.data);\n       setMessages([message, ...messages]);\n     }\n      return () => {\n            soket.onclose = () => {\n         console.log('WebSocket Disconnected');\n         setWs(new WebSocket(URL));\n       }\n     }\n  \t}, ); //[ws.onmessage, ws.onopen, ws.onclose, messages]\n  */\n\n  const [isPaused, setIsPaused] = useState(false);\n  const [data, setData] = useState(null);\n  const [status, setStatus] = useState(\"\");\n  const ws = useRef(null);\n  useEffect(() => {\n    if (!isPaused) {\n      ws.current = new WebSocket(URL); // создаем ws соединение\n\n      ws.current.onopen = () => setStatus(\"Соединение открыто\"); // callback на ивент открытия соединения\n\n\n      ws.current.onclose = () => setStatus(\"Соединение закрыто\"); // callback на ивент закрытия соединения\n\n\n      gettingData();\n    }\n\n    return () => ws.current.close(); // кода меняется isPaused - соединение закрывается\n  }, [ws, isPaused]);\n  const gettingData = useCallback(() => {\n    if (!ws.current) return;\n\n    ws.current.onmessage = e => {\n      //подписка на получение данных по вебсокету\n      if (isPaused) return;\n      const message = JSON.parse(e.data);\n      setMessage(message);\n    };\n  }, [isPaused]);\n  console.log('rerender');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"user\",\n      children: [\"Name :\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"user\",\n        placeholder: \"User\",\n        value: user,\n        onChange: e => setUser(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: messages.reverse().map((message, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: message.user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 16\n        }, this), \": \", /*#__PURE__*/_jsxDEV(\"em\", {\n          children: message.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 39\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 14\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      onSubmit: e => {\n        e.preventDefault();\n        submitMessage(user, message);\n        setMessage([]);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: 'Type a message ...',\n        value: message,\n        onChange: e => setMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: 'Send'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setPause(!isPaused),\n      children: isPaused ? \"Resume\" : \"Pause\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 6\n  }, this);\n};\n\n_s(Chat, \"BNZI/rzkuU7Z/ERE5v3Je0abltg=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Chat.js"],"names":["React","useState","useEffect","useRef","useCallback","URL","Chat","user","setUser","message","setMessage","submitMessage","usr","msg","ws","send","JSON","stringify","messages","soket","isPaused","setIsPaused","data","setData","status","setStatus","current","WebSocket","onopen","onclose","gettingData","close","onmessage","e","parse","console","log","target","value","reverse","map","index","preventDefault","setPause"],"mappings":"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","sourcesContent":["\n\nimport React, { useState, useEffect, useRef,useCallback } from \"react\";\n\nconst URL = 'ws://192.168.0.2:5001/ws';\n\n\nconst Chat =() => {\n\tconst [user, setUser] = useState('Tarzan');\n  \tconst [message, setMessage] = useState([]);\n  \t//const [ws, setWs] = useState(null);\n\n\n  \tconst submitMessage = (usr, msg) => {\n  \t\tconst message = { user: usr, message: msg };\n  \t\tws.send(JSON.stringify(message));\n  \t\tsetMessage([message, ...messages]);\n  \t}\n\n    const soket = useRef(null)\n    //let ws = useRef(null);\n   \n  /*\tuseEffect(() => {\n\t    soket.onopen = () => {\n\t      console.log('WebSocket Connected');\n\t    }\n\n\t    soket.onmessage = (e) => {\n          console.log('Read');\n\t      const message = JSON.parse(e.data);\n\t      setMessages([message, ...messages]);\n\t    }\n\n\t    return () => {\n            soket.onclose = () => {\n\t        console.log('WebSocket Disconnected');\n\t        setWs(new WebSocket(URL));\n\t      }\n\t    }\n  \t}, ); //[ws.onmessage, ws.onopen, ws.onclose, messages]\n*/\n\nconst [isPaused, setIsPaused] = useState(false);\nconst [data, setData] = useState(null); \nconst [status, setStatus] = useState(\"\");\nconst ws = useRef(null);\n\nuseEffect(() => {\n    if (!isPaused) {\n        ws.current = new WebSocket(URL); // создаем ws соединение\n        ws.current.onopen = () => setStatus(\"Соединение открыто\");\t// callback на ивент открытия соединения\n        ws.current.onclose = () => setStatus(\"Соединение закрыто\"); // callback на ивент закрытия соединения\n\n        gettingData();\n    }\n\n    return () => ws.current.close(); // кода меняется isPaused - соединение закрывается\n}, [ws, isPaused]);\n\nconst gettingData = useCallback(() => {\n    if (!ws.current) return;\n\n    ws.current.onmessage = e => {                //подписка на получение данных по вебсокету\n        if (isPaused) return;\n        const message = JSON.parse(e.data);\n        setMessage(message);\n    };\n}, [isPaused]);\n\n      console.log('rerender')\n\n  \treturn (\n\t    <div>\n\t        <label htmlFor=\"user\">\n\t          Name :\n\t          <input\n\t            type=\"text\"\n\t            id=\"user\"\n\t            placeholder=\"User\"\n\t            value={user}\n\t            onChange={e => setUser(e.target.value)}\n\t          />\n\t        </label>\n\n\t        <ul>\n\t          {messages.reverse().map((message, index) =>\n\t            <li key={index}>\n\t              <b>{message.user}</b>: <em>{message.message}</em>\n\t            </li>\n\t          )}\n\t        </ul>\n\n\t        <form\n\t          action=\"\"\n\t          onSubmit={e => {\n\t            e.preventDefault();\n\t            submitMessage(user, message);\n\t            setMessage([]);\n\t          }}\n\t        >\n\t          <input\n\t            type=\"text\"\n\t            placeholder={'Type a message ...'}\n\t            value={message}\n\t            onChange={e => setMessage(e.target.value)}\n\t          />\n\t          <input type=\"submit\" value={'Send'} />\n\t        </form>\n            <button onClick={() => setPause(!isPaused)}>\n                {isPaused ? \"Resume\" : \"Pause\"}\n            </button>\n\t    </div>\n  \t)\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}