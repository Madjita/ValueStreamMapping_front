{"ast":null,"code":"var _jsxFileName = \"/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Pages/PageNewAlgoritmAddOrder.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport serverApiHost, { port } from \"../../global\";\nimport { Grid } from '@material-ui/core';\nimport CardOrderInNewAlgoritmDefault from '../Card/Pages/CardOrderInNewAlgoritmDefault';\nimport { experimentalStyled as styled } from '@mui/material/styles';\nimport Paper from '@mui/material/Paper';\nimport { IDataColorOrderInDefault } from '../Data/DataCardOrderInDefault/IDataColorOrderInDefault';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport Button from '@mui/material/Button';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { Box } from '@material-ui/system';\nimport OrderRole from '../Data/OrderRole';\nimport DialogAddOrder from '../Dialog/DialogAddOrder';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n///////////////////////////////////\nconst Item = styled(Paper)(({\n  theme\n}) => ({ ...theme.typography.body2,\n  padding: theme.spacing(2),\n  textAlign: 'center',\n  color: theme.palette.text.secondary\n}));\n\nconst PageNewAlgoritmAddOrder = () => {\n  _s();\n\n  //const {orders, loading} = useTypedSelector(state => state.orders);\n  //const {ordersLoading,orderAdd} = useActionOrders()\n  const [orders, SetOrders] = useState();\n  const [loading, SetLoading] = useState(true);\n\n  const ordersLoading = async () => {\n    const response = await axios.get('http://' + serverApiHost + ':' + port + '/api/cardVSM/getallorders');\n\n    if (response.status != 200) {\n      return;\n    }\n\n    let content = response.data;\n    let ordersFromServer = content.orders;\n    SetOrders(ordersFromServer); //console.log(\"orders = \",orders )\n\n    SetLoading(false);\n  };\n\n  useEffect(() => {\n    const timer = setTimeout(async () => await ordersLoading(), 1000);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [orders]); //orders\n\n  /*\n  const [newOrder,setOrder] = useState<IDialogAddOrder>();\n  \n  const addOrder= (value : IDialogAddOrder) =>\n  {\n      console.log(\"NEW = \", value)\n  \n      if(value.name == undefined)\n      {\n          return ;\n      }\n      //orderAdd(value);\n      ordersLoading();\n  }\n  \n  \n  const even = (n: number) => !(n % 2);\n  \n  //Array.from(Array(10))\n  \n  */\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this);\n  }\n\n  const listData = orders === null || orders === void 0 ? void 0 : orders.map((item, index) => {\n    if (item === undefined) {\n      return;\n    }\n\n    let OrderColor = IDataColorOrderInDefault.NotWork;\n\n    switch (item.orderRole) {\n      case OrderRole.Actual:\n        OrderColor = IDataColorOrderInDefault.NotWork;\n        break;\n\n      case OrderRole.Work:\n        OrderColor = IDataColorOrderInDefault.InWork;\n        break;\n\n      case OrderRole.Archive:\n        OrderColor = IDataColorOrderInDefault.Done;\n        break;\n\n      default:\n        break;\n    }\n\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      md: 4,\n      lg: 4,\n      xl: 3,\n      children: /*#__PURE__*/_jsxDEV(CardOrderInNewAlgoritmDefault, {\n        OrderColor: OrderColor,\n        data: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 12\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 8\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        padding: '0px 10px 0px 10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u0417\\u0430\\u043A\\u0430\\u0437\\u044B \\u0432 \\u0441\\u0438\\u0441\\u0442\\u0435\\u043C\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(DialogAddOrder, {\n            addOrder: addOrder\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            size: \"small\",\n            startIcon: /*#__PURE__*/_jsxDEV(AddCircleOutlineIcon, {\n              fontSize: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 73\n            }, this),\n            children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0437\\u0430\\u043A\\u0430\\u0437\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex'\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: listData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 13\n  }, this);\n};\n\n_s(PageNewAlgoritmAddOrder, \"jjK5ygp/yCFZc3NkQ/FFM3lNDUg=\");\n\n_c = PageNewAlgoritmAddOrder;\nexport default PageNewAlgoritmAddOrder; //xs={12} sm={6} md={4} lg={4} xl={3}\n//xs={12} md={3}\n\n/*\n  <DialogAddOrder addOrder={addOrder}/>\n            <Box sx={{display: 'flex'}}>\n                <Grid container spacing={2}>\n                    {listData}\n                </Grid>\n            </Box>\n            */\n\nvar _c;\n\n$RefreshReg$(_c, \"PageNewAlgoritmAddOrder\");","map":{"version":3,"sources":["/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Pages/PageNewAlgoritmAddOrder.tsx"],"names":["React","useEffect","useState","axios","serverApiHost","port","Grid","CardOrderInNewAlgoritmDefault","experimentalStyled","styled","Paper","IDataColorOrderInDefault","AddCircleOutlineIcon","Button","CircularProgress","Box","OrderRole","DialogAddOrder","Item","theme","typography","body2","padding","spacing","textAlign","color","palette","text","secondary","PageNewAlgoritmAddOrder","orders","SetOrders","loading","SetLoading","ordersLoading","response","get","status","content","data","ordersFromServer","timer","setTimeout","clearTimeout","display","justifyContent","listData","map","item","index","undefined","OrderColor","NotWork","orderRole","Actual","Work","InWork","Archive","Done","alignItems","addOrder"],"mappings":"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","sourcesContent":["import  React, { useEffect,useState } from 'react'\nimport axios from 'axios'\nimport serverApiHost,{port} from \"../../global\";\n\nimport { Grid } from '@material-ui/core';\nimport CardOrderInNewAlgoritmDefault from '../Card/Pages/CardOrderInNewAlgoritmDefault';\n\nimport { experimentalStyled as styled } from '@mui/material/styles';\nimport Paper from '@mui/material/Paper';\n\nimport {IDataColorOrderInDefault} from '../Data/DataCardOrderInDefault/IDataColorOrderInDefault'\n\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport IconButton from '@mui/material/IconButton';\nimport Button from '@mui/material/Button';\n\nimport { useActionOrders } from '../../hooks/useActionOrders';\nimport { useTypedSelector } from '../../hooks/leftMenuSelector';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { Box } from '@material-ui/system';\nimport IDataOrder from '../Data/IDataOrder';\nimport OrderRole from '../Data/OrderRole';\n\nimport DialogAddOrder from '../Dialog/DialogAddOrder'\nimport IDialogAddOrder from '../Data/Dialog/IDialogAddOrder'\nimport IDataProduction from '../Data/IDataProduction';\n\n\n\n/////////////////////////////////\nimport Order_view from '../Data/IDataOrder/IDataOrder'\n\n\n\n///////////////////////////////////\n\nconst Item = styled(Paper)(({ theme }) => ({\n    ...theme.typography.body2,\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  }));\n\n\n\nconst PageNewAlgoritmAddOrder = () =>\n{\n//const {orders, loading} = useTypedSelector(state => state.orders);\n//const {ordersLoading,orderAdd} = useActionOrders()\n\n\nconst [orders, SetOrders] = useState<Order_view[]>();\nconst [loading, SetLoading] = useState(true);\n\nconst ordersLoading = async () => {\n\n\n    const response = await axios.get('http://'+serverApiHost+':'+port+'/api/cardVSM/getallorders')\n\n    if(response.status != 200)\n    {\n      return ;\n    }\n\n    let content = response.data as any;\n\n    let ordersFromServer =  content.orders as Order_view[];\n    SetOrders(ordersFromServer);\n    //console.log(\"orders = \",orders )\n    SetLoading(false);\n}\n\n\nuseEffect(() => {\n    const timer = setTimeout(async () => await ordersLoading(), 1000);\n    return () => {\n      clearTimeout(timer);\n    };   \n},[orders]) //orders\n\n\n/*\nconst [newOrder,setOrder] = useState<IDialogAddOrder>();\n\nconst addOrder= (value : IDialogAddOrder) =>\n{\n    console.log(\"NEW = \", value)\n\n    if(value.name == undefined)\n    {\n        return ;\n    }\n    //orderAdd(value);\n    ordersLoading();\n}\n\n\nconst even = (n: number) => !(n % 2);\n\n//Array.from(Array(10))\n\n*/\n\n\n\nif(loading)\n{\n    return (\n        <Box sx={{ display: 'flex', justifyContent: 'center' }}>\n          <CircularProgress />\n        </Box>\n    )\n}\n\nconst listData =  orders?.map((item: Order_view, index)=>{\n\n    if(item === undefined)\n    {\n        return ;\n    }\n\n    let OrderColor = IDataColorOrderInDefault.NotWork;\n    switch(item.orderRole)\n    {\n        case OrderRole.Actual:\n            OrderColor = IDataColorOrderInDefault.NotWork\n            break;\n        case OrderRole.Work:\n            OrderColor = IDataColorOrderInDefault.InWork\n            break;\n        case OrderRole.Archive:\n            OrderColor = IDataColorOrderInDefault.Done\n            break;\n        default:\n            break;\n    }\n\n   return (\n       <Grid item xs={12} sm={6} md={4} lg={4} xl={3} key={index}>\n           <CardOrderInNewAlgoritmDefault OrderColor={OrderColor} data={item}/>\n       </Grid>\n   )\n})\n\n\n    return (\n            <div>\n           \n            <Box sx={{padding:'0px 10px 0px 10px'}}>\n                <div style={{display: 'flex', justifyContent: 'space-between',alignItems: 'center'}}>\n                    <h3>Заказы в система</h3>\n                    <div>\n                    <DialogAddOrder addOrder={addOrder}/>\n                    <Button variant=\"contained\" size=\"small\" startIcon={<AddCircleOutlineIcon  fontSize=\"small\"/>}>\n                    Добавить заказ\n                    </Button>\n                    </div>\n                </div>\n                <Box sx={{display: 'flex', }}>\n                    <Grid container spacing={2}>\n                        {listData}\n                    </Grid>\n                </Box>\n            </Box>\n            </div>\n    ) \n}\n\nexport default PageNewAlgoritmAddOrder;\n\n//xs={12} sm={6} md={4} lg={4} xl={3}\n//xs={12} md={3}\n/*\n  <DialogAddOrder addOrder={addOrder}/>\n            <Box sx={{display: 'flex'}}>\n                <Grid container spacing={2}>\n                    {listData}\n                </Grid>\n            </Box>\n            */"]},"metadata":{},"sourceType":"module"}