{"ast":null,"code":"var _jsxFileName = \"/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/CustomizedAccordionsNewAlgoritm.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { styled } from '@material-ui/core/styles';\nimport ArrowForwardIosSharpIcon from '@material-ui/icons/ArrowForwardIosSharp';\nimport MuiAccordion from '@material-ui/core/Accordion';\nimport MuiAccordionSummary from '@material-ui/core/AccordionSummary';\nimport MuiAccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography'; //\n\nimport CustomizedAccordiongsHeaderNewAlgoritm from './CustomizedAccordiongsHeaderNewAlgoritm';\nimport View from './Card/View'; //\n\n//\nimport { useActionOrders } from '../hooks/useActionOrders';\nimport { useTypedSelector } from '../hooks/leftMenuSelector';\nimport { URL_orderList } from '../global';\nimport serverApiHost, { port } from \"../global\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet URL = 'ws://+ip+:5001/orderlist';\nconst Accordion = styled(props => /*#__PURE__*/_jsxDEV(MuiAccordion, {\n  disableGutters: true,\n  elevation: 0,\n  square: true,\n  ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 36,\n  columnNumber: 3\n}, this))(({\n  theme\n}) => ({\n  border: `1px solid ${theme.palette.divider}`,\n  '&:not(:last-child)': {\n    borderBottom: 0\n  },\n  '&:before': {\n    display: 'none'\n  }\n}));\nconst AccordionSummary = styled(props => /*#__PURE__*/_jsxDEV(MuiAccordionSummary, {\n  expandIcon: /*#__PURE__*/_jsxDEV(ArrowForwardIosSharpIcon, {\n    sx: {\n      fontSize: '0.9rem'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 17\n  }, this),\n  ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 48,\n  columnNumber: 3\n}, this))(({\n  theme\n}) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, .05)' : 'rgba(0, 0, 0, .03)',\n  flexDirection: 'row-reverse',\n  '& .MuiAccordionSummary-expandIconWrapper.Mui-expanded': {\n    transform: 'rotate(90deg)'\n  },\n  '& .MuiAccordionSummary-content': {\n    margin: 0\n  }\n})); /////////\n\nlet product1_vsm = [{\n  sections: [{\n    etapNumeric: 1,\n    bufferVSM: {\n      name: \"Буфер 1\",\n      max: 100,\n      value: 75,\n      minHold: 50\n    },\n    etapVSM: {\n      name: \"Етап 2\"\n    }\n  }]\n}, //item 2 section             \n{\n  sections: [{\n    etapNumeric: 2,\n    bufferVSM: {\n      name: \"Буфер 2\",\n      max: 100,\n      value: 30\n    },\n    etapVSM: {\n      name: \"Етап 2\"\n    }\n  }, {\n    etapNumeric: 2,\n    bufferVSM: {\n      name: \"Буфер 3\",\n      max: 100,\n      value: 30\n    },\n    etapVSM: {\n      name: \"Етап 3\"\n    }\n  }, {\n    etapNumeric: 2,\n    bufferVSM: {\n      name: \"Буфер 3\",\n      max: 100,\n      value: 30\n    },\n    etapVSM: {\n      name: \"Етап 3\"\n    }\n  }, {\n    etapNumeric: 2,\n    bufferVSM: {\n      name: \"Буфер 3\",\n      max: 100,\n      value: 30\n    },\n    etapVSM: {\n      name: \"Етап 3\"\n    }\n  }]\n}, /// item 3\n{\n  sections: [{\n    etapNumeric: 3,\n    bufferVSM: {\n      name: \"Буфер 4\",\n      max: 100,\n      value: 30\n    },\n    etapVSM: {\n      name: \"Етап 4\"\n    }\n  }, {\n    etapNumeric: 3,\n    bufferVSM: {\n      name: \"Буфер 4\",\n      max: 100,\n      value: 30\n    },\n    etapVSM: {\n      name: \"Етап 4\"\n    }\n  }, {\n    etapNumeric: 3,\n    bufferVSM: {\n      name: \"Буфер 4\",\n      max: 100,\n      value: 30\n    },\n    etapVSM: {\n      name: \"Етап 4\"\n    }\n  }]\n}, // item 4\n{\n  sections: [{\n    etapNumeric: 1,\n    bufferVSM: {\n      name: \"Буфер 1\",\n      max: 100,\n      value: 50\n    },\n    etapVSM: {\n      name: \"Етап 2\"\n    }\n  }]\n}];\nlet product2_vsm = [{\n  sections: [{\n    etapNumeric: 1,\n    bufferVSM: {\n      name: \"Буфер 1\"\n    },\n    etapVSM: {\n      name: \"Етап 1\"\n    }\n  }]\n}];\nlet shemaOrder_1 = [{\n  name: 'Продукт 1',\n  TActual: 600,\n  TPlan: 800,\n  sections: product1_vsm\n}, //\n{\n  name: 'Продукт 2',\n  TActual: 600,\n  TPlan: 800,\n  sections: product2_vsm\n} //\n];\nlet shemaOrder_2 = [{\n  name: 'Продукт 1',\n  TActual: 600,\n  TPlan: 800,\n  sections: product1_vsm\n}, //\n{\n  name: 'Продукт 2',\n  TActual: 600,\n  TPlan: 800,\n  sections: product2_vsm\n} //\n];\nlet list = [{\n  name: 'Заказ 1',\n  TActual: 920,\n  TPlan: 800,\n  products: shemaOrder_1\n}, {\n  name: 'Заказ 2',\n  TActual: 500,\n  TPlan: 800,\n  products: shemaOrder_1\n}, {\n  name: 'Заказ 2',\n  TActual: 500,\n  TPlan: 800,\n  products: shemaOrder_1\n}, {\n  name: 'Заказ 2',\n  TActual: 500,\n  TPlan: 800,\n  products: shemaOrder_1\n}, {\n  name: 'Заказ 2',\n  TActual: 500,\n  TPlan: 800,\n  products: shemaOrder_1\n}, {\n  name: 'Заказ 2',\n  TActual: 500,\n  TPlan: 800,\n  products: shemaOrder_1\n}, //\n{\n  name: 'Заказ 1',\n  TActual: 920,\n  TPlan: 800,\n  products: shemaOrder_1\n}, {\n  name: 'Заказ 2',\n  TActual: 500,\n  TPlan: 800,\n  products: shemaOrder_1\n}, {\n  name: 'Заказ 2',\n  TActual: 500,\n  TPlan: 800,\n  products: shemaOrder_1\n}, {\n  name: 'Заказ 2',\n  TActual: 500,\n  TPlan: 800,\n  products: shemaOrder_1\n}, {\n  name: 'Заказ 2',\n  TActual: 500,\n  TPlan: 800,\n  products: shemaOrder_1\n}, {\n  name: 'Заказ 2',\n  TActual: 500,\n  TPlan: 800,\n  products: shemaOrder_1\n}, {\n  name: 'Заказ 1',\n  TActual: 920,\n  TPlan: 800,\n  products: shemaOrder_1\n}, {\n  name: 'Заказ 2',\n  TActual: 500,\n  TPlan: 800,\n  products: shemaOrder_1\n}, {\n  name: 'Заказ 2',\n  TActual: 500,\n  TPlan: 800,\n  products: shemaOrder_1\n}, {\n  name: 'Заказ 2',\n  TActual: 500,\n  TPlan: 800,\n  products: shemaOrder_1\n}, {\n  name: 'Заказ 2',\n  TActual: 500,\n  TPlan: 800,\n  products: shemaOrder_1\n}, {\n  name: 'Заказ 2',\n  TActual: 500,\n  TPlan: 800,\n  products: shemaOrder_1\n}, {\n  name: 'Заказ 1',\n  TActual: 920,\n  TPlan: 800,\n  products: shemaOrder_1\n}, {\n  name: 'Заказ 2',\n  TActual: 500,\n  TPlan: 800,\n  products: shemaOrder_1\n}, {\n  name: 'Заказ 2',\n  TActual: 500,\n  TPlan: 800,\n  products: shemaOrder_1\n}, {\n  name: 'Заказ 2',\n  TActual: 500,\n  TPlan: 800,\n  products: shemaOrder_1\n}, {\n  name: 'Заказ 2',\n  TActual: 500,\n  TPlan: 800,\n  products: shemaOrder_1\n}, {\n  name: 'Заказ 2',\n  TActual: 500,\n  TPlan: 800,\n  products: shemaOrder_1\n}];\nlet count = 2; ////////\n\nconst AccordionDetails = styled(MuiAccordionDetails)(({\n  theme\n}) => ({\n  padding: theme.spacing(2),\n  borderTop: '1px solid rgba(0, 0, 0, .125)'\n}));\nexport default function CustomizedAccordionsNewAlgoritm(props) {\n  _s();\n\n  const [expanded, setExpanded] = React.useState('panel1');\n\n  const handleChange = panel => (event, newExpanded) => {\n    setExpanded(newExpanded ? panel : false);\n  };\n  /*\n  //\n  // Builds the SignalR connection, mapping it to /chat\n  const hubConnection = new signalR.HubConnectionBuilder()\n  .withUrl(\"https://192.168.0.2:5001/chat\",{\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n    },\n  })\n  //.configureLogging(signalR.LogLevel.Information)  \n  .build();\n    // Starts the SignalR connection\n  hubConnection.start().then(a => {\n    // Once started, invokes the sendConnectionId in our ChatHub inside our ASP.NET Core application.\n    if (hubConnection.connectionId) {\n      hubConnection.invoke(\"sendConnectionId\", hubConnection.connectionId);\n    }   \n  }).catch(err => console.log('Error while starting connection: ' + err));\n    const SignalRTime: React.FC = () => {      \n    // Sets the time from the server\n    const [time, setTime] = React.useState<string | null>(null);\n      React.useEffect(() => {\n      hubConnection.on(\"setTime\", message => {\n        setTime(message);\n      });     \n    });\n      return <p>The time is {time}</p>;\n  };\n  */\n  ///\n\n\n  const {\n    orders2,\n    loading\n  } = useTypedSelector(state => state.orders);\n  const {\n    ordersLoading2\n  } = useActionOrders();\n  const socket = React.useRef(null); //const [myOrders, setMyOrders] = React.useState([] as IDataOrder[]);\n\n  const [myOrders, setMyOrders] = React.useState([]);\n  const [reconnect, setRecconect] = React.useState(false);\n  const [orders, SetOrders] = React.useState();\n  /* React.useEffect(() => {\n     const timer = setInterval(()=>{ordersLoading2()},1000)\n     return () => {\n       clearInterval(timer);\n     }\n   }, [orders2]) */\n\n  /*\n  React.useEffect(() => {\n  console.log(\"Set socket after = \", socket.current);\n  if (!socket.current || reconnect === false) {\n  console.log(\"Set socket = \", socket.current);\n  socket.current = new WebSocket(URL_orderList) ; //URL\n  socket.current.onmessage = (e: any) => {\n  \n  const OrdersFromServer = JSON.parse(e.data) as IDataOrder[];  \n  console.log(\"e\", OrdersFromServer);\n      console.log(\"e myOrders\", myOrders);\n  setMyOrders([...OrdersFromServer] as IDataOrder[]);\n  };\n  socket.current.onopen = () => {\n  // on connecting, do nothing but log it to the console\n  console.log('connected')\n  //socket.current.send(JSON.stringify({ id: '1'}));\n  }\n  \n  socket.current.onerror = (e : any) => {\n  console.log(\"eror\", e.data);\n      console.log(\"CONNECTION CLOSED\", e.data);\n  socket.current.close(1000, \"\");\n       setRecconect(true);\n  };\n  socket.current.onclose = (e : any)=>{\n  console.log(\"CONNECTION CLOSED\", e.data);\n  socket.current.close(1000, \"\");\n  \tsetRecconect(true);\n  }\n  }\n  return () => {\n  if (socket.current) {\n  socket.current.close(1000, \"\");\n  }\n  };\n  }, [socket,reconnect]);\n   console.log(\"rerender\")\n  */\n\n  const updateOrderWork = async () => {\n    const response = await axios.post('http://' + serverApiHost + ':' + port + '/api/cardVSM/getAllOrderInWork', {\n      headers: {\n        // Overwrite Axios's automatically set Content-Type\n        \"Access-Control-Allow-Origin\": \"*\",\n        'Content-Type': 'application/json'\n      }\n    });\n\n    if (response.status != 200) {\n      return;\n    }\n\n    console.log(\"updateOrderWork = \", response.data);\n    let content = response.data;\n    let object = content.orders;\n    SetOrders(object);\n  };\n\n  React.useEffect(() => {\n    const timer = setTimeout(async () => await updateOrderWork(), 1000);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [orders]);\n  React.useEffect(() => {\n    console.log(\"Set socket after = \", socket.current);\n\n    if (!socket.current || reconnect === false) {\n      console.log(\"Set socket = \", socket.current);\n      socket.current = new WebSocket(URL_orderList); //URL\n\n      socket.current.onmessage = e => {\n        const OrdersFromServer = JSON.parse(e.data); //console.log(\"e\", OrdersFromServer);\n\n        setMyOrders(OrdersFromServer);\n      };\n\n      socket.current.onopen = () => {\n        // on connecting, do nothing but log it to the console\n        console.log('connected'); //socket.current.send(JSON.stringify({ id: '1'}));\n      };\n\n      socket.current.onerror = e => {\n        console.log(\"eror\", e.data);\n        console.log(\"CONNECTION CLOSED\", e.data);\n        socket.current.close(1000, \"\");\n        setRecconect(true);\n      };\n\n      socket.current.onclose = e => {\n        console.log(\"CONNECTION CLOSED\", e.data);\n        socket.current.close(1000, \"\");\n        setRecconect(true);\n      };\n    }\n\n    return () => {\n      if (socket.current) {\n        socket.current.close(1000, \"\");\n      }\n    };\n  }, [socket, reconnect]);\n  console.log(\"rerender\");\n  /*\n      React.useEffect(() => {\n      const timer = setTimeout(() => ordersLoading(), 1000); \n      return () => {\n        \n        //console.log(\"timer \", orders);\n      };  \n      },[orders])//orders*/\n  // console.log(\"CustomizedAccordions rerender\")\n\n  /*if(props.newOrder != null)\n  {\n    count++;\n      let listOrderProduct = props.newOrder.products.map((item: IDialogAddOrderItem)=>{\n         let sectionVSM;\n         if(item.name === 'Продукт 1')\n        {\n          sectionVSM = product1_vsm;\n        }\n        if(item.name === 'Продукт 2')\n        {\n          sectionVSM = product2_vsm;\n        }\n         let newObj = {\n          name: item.name,\n          quantity: item.quantity,\n          TActual: 600, \n          TPlan: 800,\n          sections: sectionVSM\n        }\n        return newObj;\n      \n     })\n     let shemaOrder_1 = [\n      ...listOrderProduct\n    ]\n       let obj = {name: 'Заказ '+count, TActual: 500, TPlan: 800,\n    products: shemaOrder_1\n    }\n     list.push(obj as any)\n  }\n  */\n\n  let listData = orders === null || orders === void 0 ? void 0 : orders.map((item, index) => {\n    let idName = \"panel\" + index + \"a-header\";\n    let ariaControls = \"panel\" + index + \"a-content\";\n    return /*#__PURE__*/_jsxDEV(Accordion, {\n      TransitionProps: {\n        unmountOnExit: true\n      },\n      children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n        expandIcon: /*#__PURE__*/_jsxDEV(ArrowForwardIosSharpIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 31\n        }, this),\n        \"aria-controls\": ariaControls,\n        id: idName,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          component: 'span',\n          sx: {\n            width: '100%',\n            marginLeft: '10px'\n          },\n          children: /*#__PURE__*/_jsxDEV(CustomizedAccordiongsHeaderNewAlgoritm, {\n            data: item.order\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 605,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 599,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n        sx: {\n          height: 'calc(100vh - 200px)'\n        },\n        children: /*#__PURE__*/_jsxDEV(View, {\n          item: item\n        }, item.order.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 608,\n        columnNumber: 17\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 598,\n      columnNumber: 15\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      paddingLeft: '50px',\n      paddingRight: '50px'\n    },\n    children: [reconnect ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setRecconect(!reconnect),\n      children: \"\\u041F\\u0435\\u0440\\u0435\\u043F\\u043E\\u0434\\u043A\\u043B\\u044E\\u0447\\u0435\\u043D\\u0438\\u0435\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 620,\n      columnNumber: 7\n    }, this) : null, listData.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u0412 \\u0440\\u0430\\u0431\\u043E\\u0442\\u0435 \\u043D\\u0435\\u0442 \\u0437\\u0430\\u043A\\u0430\\u0437\\u043E\\u0432\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 629,\n      columnNumber: 9\n    }, this) : listData]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 617,\n    columnNumber: 7\n  }, this);\n}\n/*\n\n{name: 'Заказ 3', TActual: 600, TPlan: 800},\n      {name: 'Заказ 4', TActual: 600, TPlan: 800},\n      {name: 'Заказ 1', TActual: 600, TPlan: 800},\n      {name: 'Заказ 2', TActual: 600, TPlan: 800},\n      {name: 'Заказ 3', TActual: 600, TPlan: 800},\n      {name: 'Заказ 4', TActual: 600, TPlan: 800},\n      {name: 'Заказ 1', TActual: 600, TPlan: 800},\n      {name: 'Заказ 2', TActual: 600, TPlan: 800},\n      {name: 'Заказ 3', TActual: 600, TPlan: 800},\n      {name: 'Заказ 4', TActual: 600, TPlan: 800},\n      {name: 'Заказ 1', TActual: 600, TPlan: 800},\n      {name: 'Заказ 2', TActual: 600, TPlan: 800},\n      {name: 'Заказ 3', TActual: 600, TPlan: 800},\n      {name: 'Заказ 4', TActual: 600, TPlan: 800},\n      {name: 'Заказ 1', TActual: 600, TPlan: 800},\n      {name: 'Заказ 2', TActual: 600, TPlan: 800},\n      {name: 'Заказ 3', TActual: 600, TPlan: 800},\n      {name: 'Заказ 4', TActual: 600, TPlan: 800},\n      {name: 'Заказ 1', TActual: 600, TPlan: 800},\n      {name: 'Заказ 2', TActual: 600, TPlan: 800},\n      {name: 'Заказ 3', TActual: 600, TPlan: 800},\n      {name: 'Заказ 4', TActual: 600, TPlan: 800},\n      {name: 'Заказ 1', TActual: 600, TPlan: 800},\n      {name: 'Заказ 2', TActual: 600, TPlan: 800},\n      {name: 'Заказ 3', TActual: 600, TPlan: 800},\n      {name: 'Заказ 4', TActual: 600, TPlan: 800},\n      {name: 'Заказ 1', TActual: 600, TPlan: 800},\n      {name: 'Заказ 2', TActual: 600, TPlan: 800},\n      {name: 'Заказ 3', TActual: 600, TPlan: 800},\n      {name: 'Заказ 4', TActual: 600, TPlan: 800},\n      {name: 'Заказ 1', TActual: 600, TPlan: 800},\n      {name: 'Заказ 2', TActual: 600, TPlan: 800},\n      {name: 'Заказ 3', TActual: 600, TPlan: 800},\n      {name: 'Заказ 4', TActual: 600, TPlan: 800},\n      {name: 'Заказ 1', TActual: 600, TPlan: 800},\n      {name: 'Заказ 2', TActual: 600, TPlan: 800},\n      {name: 'Заказ 3', TActual: 600, TPlan: 800},\n      {name: 'Заказ 4', TActual: 600, TPlan: 800},\n      {name: 'Заказ 1', TActual: 600, TPlan: 800},\n      {name: 'Заказ 2', TActual: 600, TPlan: 800},\n      {name: 'Заказ 3', TActual: 600, TPlan: 800},\n      {name: 'Заказ 4', TActual: 600, TPlan: 800},\n      {name: 'Заказ 1', TActual: 600, TPlan: 800},\n      {name: 'Заказ 2', TActual: 600, TPlan: 800},\n      {name: 'Заказ 3', TActual: 600, TPlan: 800},\n      {name: 'Заказ 4', TActual: 600, TPlan: 800},\n      {name: 'Заказ 1', TActual: 600, TPlan: 800},\n      {name: 'Заказ 2', TActual: 600, TPlan: 800},\n      {name: 'Заказ 3', TActual: 600, TPlan: 800},\n      {name: 'Заказ 4', TActual: 600, TPlan: 800},\n\n*/\n\n_s(CustomizedAccordionsNewAlgoritm, \"OkZpACUrlmgRDmeRslxeGSI0xRU=\", false, function () {\n  return [useTypedSelector, useActionOrders];\n});\n\n_c = CustomizedAccordionsNewAlgoritm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomizedAccordionsNewAlgoritm\");","map":{"version":3,"sources":["/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/CustomizedAccordionsNewAlgoritm.tsx"],"names":["React","styled","ArrowForwardIosSharpIcon","MuiAccordion","MuiAccordionSummary","MuiAccordionDetails","Typography","CustomizedAccordiongsHeaderNewAlgoritm","View","useActionOrders","useTypedSelector","URL_orderList","serverApiHost","port","axios","URL","Accordion","props","theme","border","palette","divider","borderBottom","display","AccordionSummary","fontSize","backgroundColor","mode","flexDirection","transform","margin","product1_vsm","sections","etapNumeric","bufferVSM","name","max","value","minHold","etapVSM","product2_vsm","shemaOrder_1","TActual","TPlan","shemaOrder_2","list","products","count","AccordionDetails","padding","spacing","borderTop","CustomizedAccordionsNewAlgoritm","expanded","setExpanded","useState","handleChange","panel","event","newExpanded","orders2","loading","state","orders","ordersLoading2","socket","useRef","myOrders","setMyOrders","reconnect","setRecconect","SetOrders","updateOrderWork","response","post","headers","status","console","log","data","content","object","useEffect","timer","setTimeout","clearTimeout","current","WebSocket","onmessage","e","OrdersFromServer","JSON","parse","onopen","onerror","close","onclose","listData","map","item","index","idName","ariaControls","unmountOnExit","width","marginLeft","order","height","id","paddingLeft","paddingRight","length"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { styled } from '@material-ui/core/styles';\nimport ArrowForwardIosSharpIcon from '@material-ui/icons/ArrowForwardIosSharp';\nimport MuiAccordion, { AccordionProps } from '@material-ui/core/Accordion';\nimport MuiAccordionSummary, {\n  AccordionSummaryProps,\n} from '@material-ui/core/AccordionSummary';\nimport MuiAccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\n\n//\nimport CustomizedAccordiongsHeaderNewAlgoritm from './CustomizedAccordiongsHeaderNewAlgoritm';\nimport View from './Card/View'\n//\nimport IDialogAddOrder from './Data/Dialog/IDialogAddOrder'\nimport IDialogAddOrderItem from './Data/Dialog/IDialogAddOrderItem'\n\n//\nimport { useActionOrders } from '../hooks/useActionOrders';\nimport { useTypedSelector } from '../hooks/leftMenuSelector';\nimport IDataOrder from './Data/IDataOrder';\n\nimport * as signalR from \"@microsoft/signalr\";\nimport useWebSocket, { ReadyState } from 'react-use-websocket';\n\nimport {OrderMy} from '../type/useOrdersType'\n\nimport ip,{URL_orderList} from '../global'\nimport serverApiHost,{port} from \"../global\";\n\nimport axios from 'axios';\nimport Order_view from './Data/IDataOrder/IDataOrder';\nlet URL = 'ws://+ip+:5001/orderlist';\n\nconst Accordion = styled((props: AccordionProps) => (\n  <MuiAccordion disableGutters elevation={0} square {...props} />\n))(({ theme }) => ({\n  border: `1px solid ${theme.palette.divider}`,\n  '&:not(:last-child)': {\n    borderBottom: 0,\n  },\n  '&:before': {\n    display: 'none',\n  },\n}));\n\nconst AccordionSummary = styled((props: AccordionSummaryProps) => (\n  <MuiAccordionSummary\n    expandIcon={<ArrowForwardIosSharpIcon sx={{ fontSize: '0.9rem' }} />}\n    {...props}\n  />\n))(({ theme }) => ({\n  backgroundColor:\n    theme.palette.mode === 'dark'\n      ? 'rgba(255, 255, 255, .05)'\n      : 'rgba(0, 0, 0, .03)',\n  flexDirection: 'row-reverse',\n  '& .MuiAccordionSummary-expandIconWrapper.Mui-expanded': {\n    transform: 'rotate(90deg)',\n  },\n  '& .MuiAccordionSummary-content': {\n    margin: 0\n  },\n}));\n\n\n/////////\n\n\n\n\n\nlet product1_vsm = [\n  {\n     sections: [\n       {\n         etapNumeric: 1,\n         bufferVSM: {\n           name: \"Буфер 1\",\n           max: 100,\n           value: 75,\n           minHold: 50\n           \n         },\n         etapVSM: {\n           name: \"Етап 2\"\n         }\n       },\n   ]\n  },\n   //item 2 section             \n  {\n     sections: [\n       {\n         etapNumeric: 2,\n         bufferVSM: {\n           name: \"Буфер 2\",\n           max: 100,\n           value: 30\n         },\n         etapVSM: {\n           name: \"Етап 2\"\n         }\n       },\n       {\n         etapNumeric: 2,\n         bufferVSM: {\n           name: \"Буфер 3\",\n           max: 100,\n           value: 30\n         },\n         etapVSM: {\n           name: \"Етап 3\"\n         }\n       },\n       {\n         etapNumeric: 2,\n         bufferVSM: {\n           name: \"Буфер 3\",\n           max: 100,\n           value: 30\n         },\n         etapVSM: {\n           name: \"Етап 3\"\n         }\n       },\n       {\n         etapNumeric: 2,\n         bufferVSM: {\n           name: \"Буфер 3\",\n           max: 100,\n           value: 30\n         },\n         etapVSM: {\n           name: \"Етап 3\"\n         }\n       },\n       \n     ]\n  },\n  /// item 3\n  {\n    sections:[\n     {\n       etapNumeric: 3,\n       bufferVSM: {\n         name: \"Буфер 4\",\n         max: 100,\n         value: 30\n       },\n       etapVSM: {\n         name: \"Етап 4\"\n       }\n     },\n     {\n       etapNumeric: 3,\n       bufferVSM: {\n         name: \"Буфер 4\",\n         max: 100,\n         value: 30\n       },\n       etapVSM: {\n         name: \"Етап 4\"\n       }\n     },\n     {\n       etapNumeric: 3,\n       bufferVSM: {\n         name: \"Буфер 4\",\n         max: 100,\n         value: 30\n       },\n       etapVSM: {\n         name: \"Етап 4\"\n       }\n     },\n    ]\n  },\n  // item 4\n  {\n   sections: [\n     {\n       etapNumeric: 1,\n       bufferVSM: {\n         name: \"Буфер 1\",\n         max: 100,\n         value: 50\n         \n       },\n       etapVSM: {\n         name: \"Етап 2\"\n       }\n     },\n ]\n},\n]\n\nlet product2_vsm = [\n{\n  sections: [\n    {\n      etapNumeric: 1,\n      bufferVSM: {\n      name: \"Буфер 1\"\n  },\n  etapVSM: {\n    name: \"Етап 1\"\n  }\n    }\n]\n}\n]\n\n\nlet shemaOrder_1 = [\n  {\n    name: 'Продукт 1', TActual: 600, TPlan: 800,\n  sections: product1_vsm\n  },\n  //\n  {\n    name: 'Продукт 2', TActual: 600, TPlan: 800,\n  sections: product2_vsm\n  }\n  //\n]\n\n\nlet shemaOrder_2 = [\n  {\n    name: 'Продукт 1', TActual: 600, TPlan: 800,\n  sections: product1_vsm\n  },\n  //\n  {\n    name: 'Продукт 2', TActual: 600, TPlan: 800,\n  sections: product2_vsm\n  }\n  //\n]\n\n\nlet list =[\n  {name: 'Заказ 1', TActual: 920, TPlan: 800,\n    products: shemaOrder_1\n  },\n  {name: 'Заказ 2', TActual: 500, TPlan: 800,\n  products: shemaOrder_1\n  },\n  {name: 'Заказ 2', TActual: 500, TPlan: 800,\n  products: shemaOrder_1\n  },\n  {name: 'Заказ 2', TActual: 500, TPlan: 800,\n  products: shemaOrder_1\n  },\n  {name: 'Заказ 2', TActual: 500, TPlan: 800,\n  products: shemaOrder_1\n  },\n  {name: 'Заказ 2', TActual: 500, TPlan: 800,\n  products: shemaOrder_1\n  },\n\n\n  //\n\n  {name: 'Заказ 1', TActual: 920, TPlan: 800,\n    products: shemaOrder_1\n  },\n  {name: 'Заказ 2', TActual: 500, TPlan: 800,\n  products: shemaOrder_1\n  },\n  {name: 'Заказ 2', TActual: 500, TPlan: 800,\n  products: shemaOrder_1\n  },\n  {name: 'Заказ 2', TActual: 500, TPlan: 800,\n  products: shemaOrder_1\n  },\n  {name: 'Заказ 2', TActual: 500, TPlan: 800,\n  products: shemaOrder_1\n  },\n  {name: 'Заказ 2', TActual: 500, TPlan: 800,\n  products: shemaOrder_1\n  },\n  {name: 'Заказ 1', TActual: 920, TPlan: 800,\n    products: shemaOrder_1\n  },\n  {name: 'Заказ 2', TActual: 500, TPlan: 800,\n  products: shemaOrder_1\n  },\n  {name: 'Заказ 2', TActual: 500, TPlan: 800,\n  products: shemaOrder_1\n  },\n  {name: 'Заказ 2', TActual: 500, TPlan: 800,\n  products: shemaOrder_1\n  },\n  {name: 'Заказ 2', TActual: 500, TPlan: 800,\n  products: shemaOrder_1\n  },\n  {name: 'Заказ 2', TActual: 500, TPlan: 800,\n  products: shemaOrder_1\n  },\n  {name: 'Заказ 1', TActual: 920, TPlan: 800,\n    products: shemaOrder_1\n  },\n  {name: 'Заказ 2', TActual: 500, TPlan: 800,\n  products: shemaOrder_1\n  },\n  {name: 'Заказ 2', TActual: 500, TPlan: 800,\n  products: shemaOrder_1\n  },\n  {name: 'Заказ 2', TActual: 500, TPlan: 800,\n  products: shemaOrder_1\n  },\n  {name: 'Заказ 2', TActual: 500, TPlan: 800,\n  products: shemaOrder_1\n  },\n  {name: 'Заказ 2', TActual: 500, TPlan: 800,\n  products: shemaOrder_1\n  },\n  \n]\n\nlet count = 2;\n\n\n\n////////\n\nconst AccordionDetails = styled(MuiAccordionDetails)(({ theme }) => ({\n  padding: theme.spacing(2),\n  borderTop: '1px solid rgba(0, 0, 0, .125)',\n}));\n\nexport default function CustomizedAccordionsNewAlgoritm(props:{newOrder: IDialogAddOrder}) {\n  const [expanded, setExpanded] = React.useState<string | false>('panel1');\n\n  const handleChange =\n    (panel: string) => (event: React.SyntheticEvent, newExpanded: boolean) => {\n      setExpanded(newExpanded ? panel : false);\n    };\n\n\n    /*\n    //\n    // Builds the SignalR connection, mapping it to /chat\n    const hubConnection = new signalR.HubConnectionBuilder()\n    .withUrl(\"https://192.168.0.2:5001/chat\",{\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n  })\n    //.configureLogging(signalR.LogLevel.Information)  \n    .build();\n\n\n    // Starts the SignalR connection\n    hubConnection.start().then(a => {\n      // Once started, invokes the sendConnectionId in our ChatHub inside our ASP.NET Core application.\n      if (hubConnection.connectionId) {\n        hubConnection.invoke(\"sendConnectionId\", hubConnection.connectionId);\n      }   \n    }).catch(err => console.log('Error while starting connection: ' + err));\n\n\n    const SignalRTime: React.FC = () => {      \n      // Sets the time from the server\n      const [time, setTime] = React.useState<string | null>(null);\n \n      React.useEffect(() => {\n        hubConnection.on(\"setTime\", message => {\n          setTime(message);\n        });     \n      });\n \n      return <p>The time is {time}</p>;\n    };\n    */\n    ///\n\n\n    const {orders2, loading} = useTypedSelector(state => state.orders);\n    const {ordersLoading2} = useActionOrders()\n\n\n   \n\n\n \n    const socket = React.useRef(null)  as any;\n    //const [myOrders, setMyOrders] = React.useState([] as IDataOrder[]);\n    const [myOrders, setMyOrders] = React.useState([] as OrderMy[]);\n    const [reconnect, setRecconect] = React.useState(false);\n\n\n    const [orders, SetOrders] = React.useState<Order_view[]>();\n  \n   /* React.useEffect(() => {\n      const timer = setInterval(()=>{ordersLoading2()},1000)\n      return () => {\n        clearInterval(timer);\n      }\n    }, [orders2]) */\n\n\n    /*\n    React.useEffect(() => {\n\t\tconsole.log(\"Set socket after = \", socket.current);\n\t\tif (!socket.current || reconnect === false) {\n\t\t\tconsole.log(\"Set socket = \", socket.current);\n\t\t\tsocket.current = new WebSocket(URL_orderList) ; //URL\n\t\t\tsocket.current.onmessage = (e: any) => {\n\t\t\t\t\n\t\t\t\tconst OrdersFromServer = JSON.parse(e.data) as IDataOrder[];  \n\t\t\t\tconsole.log(\"e\", OrdersFromServer);\n        console.log(\"e myOrders\", myOrders);\n\t\t\t\tsetMyOrders([...OrdersFromServer] as IDataOrder[]);\n\t\t\t};\n\n\t\t\tsocket.current.onopen = () => {\n\t\t\t\t// on connecting, do nothing but log it to the console\n\t\t\t\tconsole.log('connected')\n\t\t\t\t//socket.current.send(JSON.stringify({ id: '1'}));\n\t\t\t}\n\n\t\t\t\n\n\t\t\tsocket.current.onerror = (e : any) => {\n\t\t\t\tconsole.log(\"eror\", e.data);\n        console.log(\"CONNECTION CLOSED\", e.data);\n\t\t\t\tsocket.current.close(1000, \"\");\n\n        setRecconect(true);\n\t\t\t};\n\n\t\t\tsocket.current.onclose = (e : any)=>{\n\t\t\t\tconsole.log(\"CONNECTION CLOSED\", e.data);\n\t\t\t\tsocket.current.close(1000, \"\");\n\n\t\t\t\tsetRecconect(true);\n\t\t\t}\n\t\t}\n\t\treturn () => {\n\t\t  if (socket.current) {\n\t\t\tsocket.current.close(1000, \"\");\n\t\t  }\n\t\t};\n\t  }, [socket,reconnect]);\n\n    console.log(\"rerender\")\n    */\n\n\n    const updateOrderWork = async () =>{\n      const response = await axios.post('http://'+serverApiHost+':'+port+'/api/cardVSM/getAllOrderInWork',{\n          headers: {\n            // Overwrite Axios's automatically set Content-Type\n            \"Access-Control-Allow-Origin\": \"*\",\n            'Content-Type': 'application/json'\n          }\n        })\n\n        if(response.status != 200)\n        {\n          return ;\n        }\n\n        console.log(\"updateOrderWork = \", response.data)\n\n        let content = response.data as any;\n\n        let object = content.orders as Order_view[];\n        \n        SetOrders(object)\n  }\n  \n  \n  React.useEffect(() => {\n      const timer = setTimeout(async () => await updateOrderWork(), 1000);\n      return () => {\n        clearTimeout(timer);\n      };   \n  },[orders])\n  \n\n\n    React.useEffect(() => {\n      console.log(\"Set socket after = \", socket.current);\n      if (!socket.current || reconnect === false) {\n        console.log(\"Set socket = \", socket.current);\n        socket.current = new WebSocket(URL_orderList) ; //URL\n        socket.current.onmessage = (e: any) => {\n\n          const OrdersFromServer = JSON.parse(e.data) as OrderMy[];  \n          //console.log(\"e\", OrdersFromServer);\n          setMyOrders(OrdersFromServer as OrderMy[]);\n        };\n  \n        socket.current.onopen = () => {\n          // on connecting, do nothing but log it to the console\n          console.log('connected')\n          //socket.current.send(JSON.stringify({ id: '1'}));\n        }\n  \n        \n  \n        socket.current.onerror = (e : any) => {\n          console.log(\"eror\", e.data);\n          console.log(\"CONNECTION CLOSED\", e.data);\n          socket.current.close(1000, \"\");\n  \n          setRecconect(true);\n        };\n  \n        socket.current.onclose = (e : any)=>{\n          console.log(\"CONNECTION CLOSED\", e.data);\n          socket.current.close(1000, \"\");\n  \n          setRecconect(true);\n        }\n      }\n      return () => {\n        if (socket.current) {\n        socket.current.close(1000, \"\");\n        }\n      };\n      }, [socket,reconnect]);\n  \n      console.log(\"rerender\")\n\n\n     \n\n\n/*\n    React.useEffect(() => {\n    const timer = setTimeout(() => ordersLoading(), 1000); \n    return () => {\n      \n      //console.log(\"timer \", orders);\n    };  \n    },[orders])//orders*/\n\n   // console.log(\"CustomizedAccordions rerender\")\n\n    /*if(props.newOrder != null)\n    {\n      count++;\n\n\n      let listOrderProduct = props.newOrder.products.map((item: IDialogAddOrderItem)=>{\n\n          let sectionVSM;\n\n          if(item.name === 'Продукт 1')\n          {\n            sectionVSM = product1_vsm;\n          }\n          if(item.name === 'Продукт 2')\n          {\n            sectionVSM = product2_vsm;\n          }\n\n          let newObj = {\n            name: item.name,\n            quantity: item.quantity,\n            TActual: 600, \n            TPlan: 800,\n            sections: sectionVSM\n          }\n          return newObj;\n        \n\n      })\n\n      let shemaOrder_1 = [\n        ...listOrderProduct\n      ]\n\n\n\n      let obj = {name: 'Заказ '+count, TActual: 500, TPlan: 800,\n      products: shemaOrder_1\n      }\n\n      list.push(obj as any)\n    }\n    */\n\n\n\n\n    let listData = orders?.map((item: Order_view, index: number)=>{\n      let idName = \"panel\"+index+\"a-header\"\n      let ariaControls = \"panel\"+index+\"a-content\"\n\n\n      return (  \n              <Accordion key={index} TransitionProps={{ unmountOnExit: true }}>\n                <AccordionSummary\n                  expandIcon={<ArrowForwardIosSharpIcon/>}\n                  aria-controls={ariaControls}\n                  id={idName}\n                >\n                  <Typography component={'span'} sx={{width: '100%',marginLeft:'10px'}}>\n                    <CustomizedAccordiongsHeaderNewAlgoritm data={item.order}/>\n                  </Typography>\n                </AccordionSummary>\n                <AccordionDetails  sx={{height: 'calc(100vh - 200px)'}}>\n                  <View key={item.order.id} item={item}/>\n                </AccordionDetails>\n              </Accordion>\n      )\n    })\n\n\n    return (\n      <div style={{paddingLeft: '50px', paddingRight: '50px'}}>\n      {\n       reconnect ?  \n      <button onClick={() => setRecconect(!reconnect)}>\n\t\t\t Переподключение\n\t\t\t</button> \n      :\n      null\n      }\n\n        {listData.length === 0  ? \n        \n        <p>В работе нет заказов</p>\n        \n        :listData }\n      </div>\n    );\n}\n\n\n/*\n\n{name: 'Заказ 3', TActual: 600, TPlan: 800},\n      {name: 'Заказ 4', TActual: 600, TPlan: 800},\n      {name: 'Заказ 1', TActual: 600, TPlan: 800},\n      {name: 'Заказ 2', TActual: 600, TPlan: 800},\n      {name: 'Заказ 3', TActual: 600, TPlan: 800},\n      {name: 'Заказ 4', TActual: 600, TPlan: 800},\n      {name: 'Заказ 1', TActual: 600, TPlan: 800},\n      {name: 'Заказ 2', TActual: 600, TPlan: 800},\n      {name: 'Заказ 3', TActual: 600, TPlan: 800},\n      {name: 'Заказ 4', TActual: 600, TPlan: 800},\n      {name: 'Заказ 1', TActual: 600, TPlan: 800},\n      {name: 'Заказ 2', TActual: 600, TPlan: 800},\n      {name: 'Заказ 3', TActual: 600, TPlan: 800},\n      {name: 'Заказ 4', TActual: 600, TPlan: 800},\n      {name: 'Заказ 1', TActual: 600, TPlan: 800},\n      {name: 'Заказ 2', TActual: 600, TPlan: 800},\n      {name: 'Заказ 3', TActual: 600, TPlan: 800},\n      {name: 'Заказ 4', TActual: 600, TPlan: 800},\n      {name: 'Заказ 1', TActual: 600, TPlan: 800},\n      {name: 'Заказ 2', TActual: 600, TPlan: 800},\n      {name: 'Заказ 3', TActual: 600, TPlan: 800},\n      {name: 'Заказ 4', TActual: 600, TPlan: 800},\n      {name: 'Заказ 1', TActual: 600, TPlan: 800},\n      {name: 'Заказ 2', TActual: 600, TPlan: 800},\n      {name: 'Заказ 3', TActual: 600, TPlan: 800},\n      {name: 'Заказ 4', TActual: 600, TPlan: 800},\n      {name: 'Заказ 1', TActual: 600, TPlan: 800},\n      {name: 'Заказ 2', TActual: 600, TPlan: 800},\n      {name: 'Заказ 3', TActual: 600, TPlan: 800},\n      {name: 'Заказ 4', TActual: 600, TPlan: 800},\n      {name: 'Заказ 1', TActual: 600, TPlan: 800},\n      {name: 'Заказ 2', TActual: 600, TPlan: 800},\n      {name: 'Заказ 3', TActual: 600, TPlan: 800},\n      {name: 'Заказ 4', TActual: 600, TPlan: 800},\n      {name: 'Заказ 1', TActual: 600, TPlan: 800},\n      {name: 'Заказ 2', TActual: 600, TPlan: 800},\n      {name: 'Заказ 3', TActual: 600, TPlan: 800},\n      {name: 'Заказ 4', TActual: 600, TPlan: 800},\n      {name: 'Заказ 1', TActual: 600, TPlan: 800},\n      {name: 'Заказ 2', TActual: 600, TPlan: 800},\n      {name: 'Заказ 3', TActual: 600, TPlan: 800},\n      {name: 'Заказ 4', TActual: 600, TPlan: 800},\n      {name: 'Заказ 1', TActual: 600, TPlan: 800},\n      {name: 'Заказ 2', TActual: 600, TPlan: 800},\n      {name: 'Заказ 3', TActual: 600, TPlan: 800},\n      {name: 'Заказ 4', TActual: 600, TPlan: 800},\n      {name: 'Заказ 1', TActual: 600, TPlan: 800},\n      {name: 'Заказ 2', TActual: 600, TPlan: 800},\n      {name: 'Заказ 3', TActual: 600, TPlan: 800},\n      {name: 'Заказ 4', TActual: 600, TPlan: 800},\n\n*/"]},"metadata":{},"sourceType":"module"}