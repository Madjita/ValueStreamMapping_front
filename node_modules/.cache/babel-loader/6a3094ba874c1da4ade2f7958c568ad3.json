{"ast":null,"code":"var _jsxFileName = \"/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Card/Pages/CardOrderInNewAlgoritmArchive.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport Typography from '@mui/material/Typography';\nimport { CardHeader, IconButton } from '@material-ui/core';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport { Divider } from '@mui/material';\nimport { IDataColorOrderInDefault } from '../../Data/DataCardOrderInDefault/IDataColorOrderInDefault';\nimport { useHistory } from 'react-router';\nimport axios from 'axios';\nimport ip, { port } from '../../../global';\nimport moment from 'moment';\nimport OrderRole from '../../Data/OrderRole';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CardOrderInNewAlgoritmArchive = props => {\n  _s();\n\n  const [simulation, setSimulation] = useState({\n    color: IDataColorOrderInDefault.Done,\n    work: false\n  });\n  const [order, setOrder] = useState(props.data);\n\n  if (props.data.name != order.name) {\n    setOrder(props.data);\n    setSimulation({\n      color: IDataColorOrderInDefault.Done,\n      work: false\n    });\n  }\n\n  const startSimulation = async (name, sim) => {\n    let copyObjet = {\n      name: name,\n      simulation: sim\n    };\n    const response = await axios.post('http://' + ip + ':' + port + '/api/cardVSM/addorderinwork', JSON.stringify(copyObjet), {\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        'Content-Type': 'application/json'\n      }\n    });\n\n    if (response.status === 200) {\n      console.log(\"Add Ok\");\n    }\n  };\n\n  const timer = useRef(null);\n\n  const GetInformation = async () => {\n    let copyObjet = {\n      name: order.name,\n      simulation: order.simulation\n    };\n    const response = await axios.post('http://' + ip + ':' + port + '/api/cardVSM/updateInfoOrder', JSON.stringify(copyObjet), {\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        'Content-Type': 'application/json'\n      }\n    });\n\n    if (response.status === 200) {\n      let responseData = JSON.parse(JSON.stringify(response.data));\n      setOrder(responseData);\n    }\n  };\n\n  useEffect(() => {\n    const timer = setTimeout(() => GetInformation(), 500);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [order]);\n  const history = useHistory();\n\n  const openInfo = () => {\n    history.push('/orderInfo', {\n      data: props.data\n    });\n  }; // Helper\n\n\n  const StringIsNumber = (value, index) => {\n    if (index === (order === null || order === void 0 ? void 0 : order.orderRole) - 1) return true;\n  }; // Turn enum into array\n\n\n  function ToArray(enumme) {\n    return Object.keys(enumme).filter(StringIsNumber).map(key => enumme[key]).at(0);\n  }\n\n  let listRole = ToArray(IDataColorOrderInDefault);\n  let timeTActual = moment.unix(order === null || order === void 0 ? void 0 : order.tActual).utc().format('H:m:s');\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      minWidth: 100,\n      color: 'white',\n      backgroundColor: simulation.color\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      titleTypographyProps: {\n        variant: \"h6\"\n      },\n      action: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"settings\",\n          onClick: openInfo,\n          children: /*#__PURE__*/_jsxDEV(SettingsIcon, {\n            style: {\n              color: ''\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 10\n      }, this),\n      title: \"Заказ номер: \" + (order === null || order === void 0 ? void 0 : order.name),\n      subheader: /*#__PURE__*/_jsxDEV(Typography, {\n        style: {\n          color: simulation.work ? 'white' : 'black'\n        },\n        children: [order.orderRole === OrderRole.Archive || order.orderRole === OrderRole.Work ? timeTActual : '', /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-around'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u0410\\u043A\\u0442\\u0443\\u0430\\u043B\\u044C\\u043D\\u043E\\u0435 \\u0432\\u0440\\u0435\\u043C\\u044F: \", moment(Date.now()).format('MM/DD/YYYY H:m:s')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u0421\\u0440\\u043E\\u043A \\u0434\\u043E: \", moment(order === null || order === void 0 ? void 0 : order.limitation).format('MM/DD/YYYY H:m:s')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      style: {\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        style: {\n          color: 'white'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-around'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u0417\\u0430\\u0442\\u0440\\u0430\\u0447\\u0435\\u043D\\u043D\\u043E\\u0435 \\u0432\\u0440\\u0435\\u043C\\u044F: \", timeTActual]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u0421\\u0440\\u043E\\u043A \\u0434\\u043E: \", moment(order === null || order === void 0 ? void 0 : order.limitation).format('MM/DD/YYYY H:m:s')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CardOrderInNewAlgoritmArchive, \"sAm+1TqvsImPwysyHpSsBp4XFDE=\", false, function () {\n  return [useHistory];\n});\n\n_c = CardOrderInNewAlgoritmArchive;\nexport default CardOrderInNewAlgoritmArchive;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardOrderInNewAlgoritmArchive\");","map":{"version":3,"sources":["/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Card/Pages/CardOrderInNewAlgoritmArchive.tsx"],"names":["React","useEffect","useState","useRef","Card","CardActions","Typography","CardHeader","IconButton","SettingsIcon","Divider","IDataColorOrderInDefault","useHistory","axios","ip","port","moment","OrderRole","CardOrderInNewAlgoritmArchive","props","simulation","setSimulation","color","Done","work","order","setOrder","data","name","startSimulation","sim","copyObjet","response","post","JSON","stringify","headers","status","console","log","timer","GetInformation","responseData","parse","setTimeout","clearTimeout","history","openInfo","push","StringIsNumber","value","index","orderRole","ToArray","enumme","Object","keys","filter","map","key","at","listRole","timeTActual","unix","tActual","utc","format","minWidth","backgroundColor","variant","Archive","Work","display","justifyContent","Date","now","limitation"],"mappings":"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","sourcesContent":["import React,{useEffect, useState,useRef} from 'react';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport { CardHeader, IconButton } from '@material-ui/core';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport { Divider } from '@mui/material';\n\nimport {IDataColorOrderInDefault} from '../../Data/DataCardOrderInDefault/IDataColorOrderInDefault'\nimport IDataOrder from '../../Data/IDataOrder';\nimport { Redirect,useHistory, useLocation } from 'react-router'\nimport { useActionOrders } from '../../../hooks/useActionOrders';\nimport { useTypedSelector } from '../../../hooks/leftMenuSelector';\n\nimport axios from 'axios'\nimport ip, {port} from '../../../global'\n\nimport moment from 'moment';\nimport Order_view from '../../Data/IDataOrder/IDataOrder';\nimport OrderRole from '../../Data/OrderRole';\n\nconst CardOrderInNewAlgoritmArchive = (props:{OrderColor: IDataColorOrderInDefault, data: Order_view}) => {\n\n\n  const [simulation, setSimulation] = useState({\n    color: IDataColorOrderInDefault.Done,\n    work: false\n  });\n\n  const[order, setOrder] = useState<Order_view>(props.data);\n\n\n  if(props.data.name != order.name)\n  {\n    setOrder(props.data);\n    setSimulation({\n      color: IDataColorOrderInDefault.Done,\n      work: false\n    });\n  }\n\n\n  const startSimulation = async (name: string, sim: boolean) => {\n\n    let copyObjet = {\n      name: name,\n      simulation: sim\n    }\n            const response = await axios.post('http://'+ip+':'+port+'/api/cardVSM/addorderinwork',JSON.stringify(copyObjet),\n            {\n                headers: {\n                   \"Access-Control-Allow-Origin\": \"*\",\n                  'Content-Type': 'application/json'\n                }\n            })\n\n            if(response.status === 200)\n            {\n                console.log(\"Add Ok\")\n            }\n  }\n\n\n  const timer = useRef(null);\n  const GetInformation = async() => {\n\n    let copyObjet = {\n      name: order.name,\n      simulation: order.simulation\n    }\n\n    const response = await axios.post('http://'+ip+':'+port+'/api/cardVSM/updateInfoOrder',JSON.stringify(copyObjet),\n    {\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          'Content-Type': 'application/json'\n        }\n    })\n\n    if(response.status === 200)\n    {\n       let responseData =  JSON.parse(JSON.stringify(response.data)) as Order_view;\n\n       setOrder(responseData);\n    }\n  }\n\n   \n  useEffect(() => {\n    const timer = setTimeout(() => GetInformation(), 500); \n    return () => {\n      clearTimeout(timer);\n    };\n  },[order]);\n \n  const history = useHistory();\n\n  const openInfo = () => {\n    history.push('/orderInfo', { data: props.data});\n  }\n\n\n    // Helper\nconst StringIsNumber = (value: any,index: any) => {if(index === order?.orderRole-1) return true};\n\n// Turn enum into array\nfunction ToArray(enumme: any) {\n    return Object.keys(enumme)\n        .filter(StringIsNumber)\n        .map(key => enumme[key])\n        .at(0);\n}\n\nlet listRole = ToArray(IDataColorOrderInDefault);\n\n\nlet timeTActual = moment.unix(order?.tActual).utc().format('H:m:s')\n\n  return (\n    <Card sx={{ minWidth: 100,color:'white',  backgroundColor: simulation.color }}>\n      <CardHeader\n        titleTypographyProps={{ variant: \"h6\" }}\n        action={\n         <div>\n          <IconButton \n          aria-label=\"settings\"\n          onClick={openInfo}>\n            <SettingsIcon style={{color: ''}}/>\n          </IconButton>\n         </div>\n        }\n        title={\"Заказ номер: \"+order?.name}\n\n        subheader={\n          <Typography style={{color: simulation.work ? 'white':'black'}}>{ order.orderRole === OrderRole.Archive || order.orderRole === OrderRole.Work ? timeTActual : ''}   \n                     <Divider/>\n                     <div style={{display: 'flex', justifyContent:'space-around'}} >\n                      <p>Актуальное время: {moment(Date.now()).format('MM/DD/YYYY H:m:s')}</p>\n                      <p>Срок до: {moment(order?.limitation).format('MM/DD/YYYY H:m:s')}</p>\n                    </div>\n          </Typography>\n        }\n        \n      />\n      <Divider/>\n      <CardActions style={{justifyContent: 'center'}}>\n        <Typography style={{color:'white'}}> \n                   <div style={{display: 'flex', justifyContent:'space-around'}} >\n                    <p>Затраченное время: {timeTActual}</p>\n                    <p>Срок до: {moment(order?.limitation).format('MM/DD/YYYY H:m:s')}</p>\n                  </div>\n        </Typography>\n      </CardActions>\n    </Card>\n  );\n}\n\nexport default CardOrderInNewAlgoritmArchive;"]},"metadata":{},"sourceType":"module"}