{"ast":null,"code":"var _jsxFileName = \"/Users/sergeismogliuk/Documents/Project/Project_node/Diplom/react-diplom/react-diplom/src/components/Container/MidleContainer/MidleContent/MidleContent.js\";\nimport React from \"react\";\nimport MidleContentStyle from \"./MidleContentStyle\";\nimport DiagramViewBox from \"../../../Diagrams/DiagramViewBox\"; //import  {ListActiveConxtext} from \"../../../../ListActiveContextProvider\"\n\nimport Triangle from \"../../../SVG/Triangle/Triangle\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MidleContent extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this._showCard = () => {\n      if (this.context.ListActive.length === 0) {\n        return /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"MidleContent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 20\n        }, this);\n      }\n\n      let object = this.context.ListActive.find(item => item.isSelected === true);\n      console.log(\"this._showCard(context)\", this.context);\n      return /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: object.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 18\n      }, this);\n    };\n\n    this.getCoords = elem => {\n      let box = elem.getBoundingClientRect();\n      console.log(this.MidleContentStyle.pageYOffset);\n      return {\n        top: Math.round(box.top),\n        //pageYOffset\n        left: Math.round(box.left) //pageXOffset\n\n      };\n    };\n\n    this.handleOnWhell = e => {\n      let count = e.deltaY / 17;\n      console.log(\"sdf\");\n      let target = this.MidleContentStyle; //e.target.closest('....'); // Здесь что-то уникальное, что может указать на род. блок\n\n      let targetCoords = target.getBoundingClientRect();\n      let xCoord = e.clientX - targetCoords.left;\n      let yCoord = e.clientY - targetCoords.top;\n      const wheel = e.deltaY < 0 ? 1 : -1;\n      let scale = this.state.scale; // Compute zoom factor.\n\n      let zoom; // = Math.exp(wheel * this.state.scale);\n\n      if (wheel) {\n        zoom = scale + 0.05;\n      } else {\n        zoom = scale - 0.05;\n      }\n\n      let originX = this.state.originX;\n      let originY = this.state.originY;\n      originX -= xCoord / (scale * zoom) - xCoord / scale;\n      originY -= yCoord / (scale * zoom) - yCoord / scale;\n      console.log(\"zoom = \", zoom, \" originX =\", originX, \" originY =\", originY);\n\n      switch (e.deltaY > 0) {\n        case true:\n          console.log('positive', e.deltaY, count);\n          let plus = this.state.scale + 0.05;\n          this.setState({\n            scale: zoom,\n            originX: originX,\n            originY: originY\n          }); //,x: xCoord, y: yCoord\n\n          break;\n\n        default:\n          console.log('negative', e.deltaY, count);\n          count *= -1;\n          let minus = this.state.scale - 0.05;\n\n          if (minus < 0) {\n            minus = 0;\n          }\n\n          this.setState({\n            scale: zoom,\n            originX: originX,\n            originY: originY\n          });\n        //,x: e.screenX, y: e.screenY\n      }\n    };\n\n    this.handleOnMouseMove = e => {\n      let target = this.MidleContentStyle; //e.target.closest('....'); // Здесь что-то уникальное, что может указать на род. блок\n\n      let targetCoords = target.getBoundingClientRect();\n      let xCoord = e.clientX - targetCoords.left;\n      let yCoord = e.clientY - targetCoords.top;\n      const wheel = e.deltaY < 0 ? 1 : -1; // Compute zoom factor.\n\n      const zoom = Math.exp(wheel * this.state.scale);\n      let scale = this.state.scale;\n      let originX = this.state.originX;\n      let originY = this.state.originY;\n      originX -= xCoord / (scale * zoom) - xCoord / scale;\n      originY -= yCoord / (scale * zoom) - yCoord / scale;\n      this.setState({\n        x: xCoord,\n        y: yCoord\n      });\n    };\n\n    this.handleOnClick = e => {\n      let target = this.MidleContentStyle; //e.target.closest('....'); // Здесь что-то уникальное, что может указать на род. блок\n\n      let targetCoords = target.getBoundingClientRect();\n      let xCoord = 100; //- targetCoords.left;\n\n      let yCoord = 100; //- targetCoords.top;\n\n      let newX = e.clientX - targetCoords.left * this.state.scale;\n      let newY = e.clientY - targetCoords.top; //Нормализируем координаты\n\n      var relX = newX / targetCoords.width;\n      var relY = newY / targetCoords.height;\n      console.log({\n        xCoord,\n        yCoord\n      }, {\n        newX,\n        newY\n      }, this.state.scale);\n      this.setState({\n        x: xCoord,\n        y: yCoord,\n        mouseX: relX,\n        mouseY: relY\n      });\n    };\n\n    this.state = {\n      error: null,\n      isLoaded: false,\n      scale: 1,\n      x: 0,\n      y: 0,\n      originX: 0,\n      originY: 0,\n      mouseX: 0,\n      mouseY: 0\n    };\n  }\n\n  //translate(\"+this.state.x+\"px,\"+this.state.y+\"px)\n  //transformOrigin:this.state.xScale+\"px \"+this.state.yScale+\"px\"\n  render() {\n    return /*#__PURE__*/_jsxDEV(MidleContentStyle, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"100%\",\n          height: \"100%\",\n          position: \"relative\"\n        },\n        onWheel: this.handleOnWhell,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: this.handleOnClick,\n          ref: MidleContentStyle => {\n            this.MidleContentStyle = MidleContentStyle;\n          },\n          style: {\n            width: \"100%\",\n            height: \"100%\",\n            position: \"absolute\",\n            transformOrigin: this.state.originX + \"px \" + this.state.originY + \"px\",\n            transform: \"scale(\" + this.state.scale + \")\",\n            boxShadow: \"rgba(0,0,0,0.2) 0px 3px 5px -1px,rgba(0,0,0,0.14) 0px 6px 10px 0px,rgba(0,0,0,0.12) 0px 1px 14px 0px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Triangle, {\n            left: 0,\n            top: 0,\n            width: 100,\n            height: 100,\n            min: 50,\n            max: 100,\n            value: 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Triangle, {\n            left: 200,\n            top: 0,\n            width: 100,\n            height: 100,\n            min: 50,\n            max: 100,\n            value: 50\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            id: \"crosshair\",\n            src: \"https://interactive-examples.mdn.mozilla.net/media/examples/crosshair.svg\",\n            style: {\n              position: \"absolute\",\n              left: \"calc(\" + (this.state.x - 12) + \"px)\",\n              top: \"calc(\" + (this.state.y - 12) + \"px)\",\n              opacity: \"1\"\n            },\n            width: \"24px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            id: \"crosshair\",\n            src: \"https://interactive-examples.mdn.mozilla.net/media/examples/crosshair.svg\",\n            style: {\n              backgroundColor: \"blue\",\n              position: \"absolute\",\n              left: \"calc(\" + (this.state.mouseX - 12) + \"px)\",\n              top: \"calc(\" + (this.state.mouseY - 12) + \"px)\",\n              opacity: \"1\"\n            },\n            width: \"24px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MidleContent; //<h3>{context.activeObject.name ? context.activeObject.name : \"MidleContent\"}</h3>","map":{"version":3,"sources":["/Users/sergeismogliuk/Documents/Project/Project_node/Diplom/react-diplom/react-diplom/src/components/Container/MidleContainer/MidleContent/MidleContent.js"],"names":["React","MidleContentStyle","DiagramViewBox","Triangle","MidleContent","PureComponent","constructor","props","_showCard","context","ListActive","length","object","find","item","isSelected","console","log","name","getCoords","elem","box","getBoundingClientRect","pageYOffset","top","Math","round","left","handleOnWhell","e","count","deltaY","target","targetCoords","xCoord","clientX","yCoord","clientY","wheel","scale","state","zoom","originX","originY","plus","setState","minus","handleOnMouseMove","exp","x","y","handleOnClick","newX","newY","relX","width","relY","height","mouseX","mouseY","error","isLoaded","render","position","transformOrigin","transform","boxShadow","opacity","backgroundColor"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport MidleContentStyle from \"./MidleContentStyle\"\n\nimport DiagramViewBox from \"../../../Diagrams/DiagramViewBox\"\n\n//import  {ListActiveConxtext} from \"../../../../ListActiveContextProvider\"\n\nimport Triangle from \"../../../SVG/Triangle/Triangle\"\n\nclass MidleContent extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n          error: null,\n          isLoaded: false,\n          scale: 1,\n          x: 0,\n          y: 0,\n          originX: 0,\n          originY: 0,\n          mouseX: 0,\n          mouseY: 0\n        };\n      }\n\n      static MidleContentStyle;\n\n      //static contextType = ListActiveConxtext;\n\n      _showCard = () =>\n      {\n          if(this.context.ListActive.length === 0)\n          {\n            return <h3>MidleContent</h3>\n          }\n\n          let object = this.context.ListActive.find(item => item.isSelected === true)\n\n          console.log(\"this._showCard(context)\",this.context)\n\n     \n\n          return <h3>{object.name}</h3>\n      }\n\n      getCoords = (elem) => {\n        let box = elem.getBoundingClientRect();\n        console.log(this.MidleContentStyle.pageYOffset)\n        return {\n          top: Math.round(box.top), //pageYOffset\n          left: Math.round(box.left)//pageXOffset\n        };\n      }\n\n      handleOnWhell = (e) =>\n      {\n        let count = (e.deltaY/17)\n        console.log(\"sdf\")\n\n        let target = this.MidleContentStyle//e.target.closest('....'); // Здесь что-то уникальное, что может указать на род. блок\n\n        let targetCoords = target.getBoundingClientRect();\n        let xCoord = e.clientX - targetCoords.left;\n        let yCoord = e.clientY - targetCoords.top;\n\n        const wheel = e.deltaY < 0 ? 1 : -1;\n\n        let scale = this.state.scale\n\n        // Compute zoom factor.\n        let zoom// = Math.exp(wheel * this.state.scale);\n\n        if(wheel)\n        {\n          zoom = scale+0.05\n        }\n        else\n        {\n          zoom = scale-0.05\n        }\n\n       \n        \n        let originX = this.state.originX;\n        let originY = this.state.originY;\n\n        originX -= xCoord/(scale*zoom) - xCoord/scale;\n        originY -= yCoord/(scale*zoom) - yCoord/scale;\n\n        console.log(\"zoom = \",zoom,\" originX =\",originX,\" originY =\",originY)\n\n        switch (e.deltaY > 0) {\n            case true:\n              console.log('positive',e.deltaY,count);\n              let plus = this.state.scale+0.05\n\n              this.setState({scale: zoom,originX: originX, originY: originY }) //,x: xCoord, y: yCoord\n              break;\n            default:\n              console.log('negative',e.deltaY,count);\n              count *=(-1)\n\n              let minus = this.state.scale-0.05\n              if(minus < 0 )\n              {\n                minus = 0\n              }\n              this.setState({scale: zoom,originX: originX, originY: originY}) //,x: e.screenX, y: e.screenY\n          }\n      }\n\n      handleOnMouseMove = (e) =>\n      {\n        let target = this.MidleContentStyle//e.target.closest('....'); // Здесь что-то уникальное, что может указать на род. блок\n\n        \n\n        let targetCoords = target.getBoundingClientRect();\n        let xCoord = e.clientX - targetCoords.left;\n        let yCoord = e.clientY - targetCoords.top;\n\n        const wheel = e.deltaY < 0 ? 1 : -1;\n\n        // Compute zoom factor.\n        const zoom = Math.exp(wheel * this.state.scale);\n\n        let scale = this.state.scale\n        let originX = this.state.originX;\n        let originY = this.state.originY;\n\n        originX -= xCoord/(scale*zoom) - xCoord/scale;\n        originY -= yCoord/(scale*zoom) - yCoord/scale;\n\n        this.setState({ x: xCoord, y: yCoord });\n      }\n\n      handleOnClick = (e) =>{\n        let target = this.MidleContentStyle//e.target.closest('....'); // Здесь что-то уникальное, что может указать на род. блок\n\n        let targetCoords = target.getBoundingClientRect();\n        let xCoord = 100 //- targetCoords.left;\n        let yCoord = 100 //- targetCoords.top;\n\n        let newX = e.clientX-targetCoords.left*this.state.scale\n        let newY = e.clientY-targetCoords.top\n\n        //Нормализируем координаты\n        var relX = newX / targetCoords.width;\n        var relY = newY / targetCoords.height;\n\n        console.log({xCoord,yCoord},{newX,newY},this.state.scale)\n\n        this.setState({ x: xCoord, y: yCoord, mouseX: relX, mouseY: relY });\n      }\n      //translate(\"+this.state.x+\"px,\"+this.state.y+\"px)\n      //transformOrigin:this.state.xScale+\"px \"+this.state.yScale+\"px\"\n      render() {\n        return (\n            <MidleContentStyle >\n                <div style={{width: \"100%\", height: \"100%\",position: \"relative\"}}  onWheel={this.handleOnWhell} >\n                  <div  onClick={this.handleOnClick} ref={(MidleContentStyle) => { this.MidleContentStyle = MidleContentStyle;}}   style={{width: \"100%\", height: \"100%\",position: \"absolute\",transformOrigin:this.state.originX+\"px \"+this.state.originY+\"px\",transform:\"scale(\"+this.state.scale+\")\",boxShadow: \"rgba(0,0,0,0.2) 0px 3px 5px -1px,rgba(0,0,0,0.14) 0px 6px 10px 0px,rgba(0,0,0,0.12) 0px 1px 14px 0px\"}}>\n                    <Triangle   left={0} top={0} width={100} height={100} min={50} max={100} value={0}/>\n                    <Triangle   left={200} top={0}  width={100} height={100} min={50} max={100} value={50}/>\n                    <img id=\"crosshair\" src=\"https://interactive-examples.mdn.mozilla.net/media/examples/crosshair.svg\" style={{position: \"absolute\",left: \"calc(\"+(this.state.x-12)+\"px)\", top: \"calc(\"+(this.state.y-12)+\"px)\",opacity: \"1\"}} width=\"24px\"></img>\n                    <img id=\"crosshair\" src=\"https://interactive-examples.mdn.mozilla.net/media/examples/crosshair.svg\" style={{backgroundColor:\"blue\",position: \"absolute\",left: \"calc(\"+(this.state.mouseX-12)+\"px)\", top:\"calc(\"+(this.state.mouseY-12)+\"px)\",opacity: \"1\"}} width=\"24px\"></img>\n                  </div>\n                 \n                </div>\n\n\n               {/* <DiagramViewBox/>\n\n              <ListActiveConxtext.Consumer>\n                {value => (\n                  <h3>MidleContent {console.log(value.ListActive)}</h3>\n                )}\n                \n                </ListActiveConxtext.Consumer>*/} \n            </MidleContentStyle>\n\n        )\n      }\n}\n\n\n\nexport default MidleContent;\n\n//<h3>{context.activeObject.name ? context.activeObject.name : \"MidleContent\"}</h3>"]},"metadata":{},"sourceType":"module"}