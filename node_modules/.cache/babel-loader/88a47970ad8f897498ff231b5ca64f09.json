{"ast":null,"code":"var _jsxFileName = \"/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/CustomizedAccordiongsHeader.tsx\",\n    _s = $RefreshSig$();\n\nimport moment from 'moment';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CustomizedAccordiongsHeader = props => {\n  _s();\n\n  const {\n    name,\n    TActual,\n    TPlan\n  } = props.data;\n  const [bad, setBad] = useState(false);\n  const [textPeriod, setTextPeriod] = useState(\"\");\n  let timeTActual = moment.unix(TActual).utc().format('H:m:s');\n  let timeTPlan = moment.unix(TPlan).utc().format('H:m:s');\n\n  const ConvertPeriodToString = timePeriod => {\n    var list = timePeriod.split(' ');\n    let text = timePeriod;\n    console.log(list);\n\n    if (list[0] === 'in') {\n      if (list[1] === 'a') {\n        text = \"Отставание на несколько сукунд\";\n      } else {\n        let t = list[1];\n        text = \"Отставание на \" + t;\n\n        switch (list[2]) {\n          case \"hours\":\n            text += \" часа\";\n            break;\n\n          case \"minutes\":\n            text += \" минут\";\n            break;\n        }\n      }\n\n      console.log(text);\n    } else {\n      text = \"В запасе \" + list[0];\n\n      switch (list[1]) {\n        case \"hours\":\n          text += \" часа\";\n          break;\n\n        case \"minutes\":\n          text += \" минут\";\n          break;\n      }\n    }\n\n    if (textPeriod != text) {\n      setTextPeriod(text);\n    }\n  };\n\n  let timePeriod = ConvertPeriodToString(moment.unix(TActual).utc().from(moment.unix(TPlan).utc()));\n\n  if (TActual > TPlan && bad === false) {\n    setBad(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'grid',\n      gridTemplateColumns: '100px auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: '1fr 1fr 1fr'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-around'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u0410\\u043A\\u0442\\u0443\\u0430\\u043B\\u044C\\u043D\\u043E\\u0435 \\u0432\\u0435\\u0440\\u043C\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            backgroundColor: bad ? 'red' : '',\n            color: bad ? \"white\" : \"\"\n          },\n          children: timeTActual\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-around'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: textPeriod\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-around'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u041F\\u043B\\u0430\\u043D\\u043E\\u0432\\u043E\\u0435 \\u0432\\u0440\\u0435\\u043C\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            backgroundColor: bad ? 'red' : '',\n            color: bad ? \"white\" : \"\"\n          },\n          children: timeTPlan\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CustomizedAccordiongsHeader, \"/3D1WddiSwimj/vhR0Lm8FjSV5Y=\");\n\n_c = CustomizedAccordiongsHeader;\nexport default CustomizedAccordiongsHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomizedAccordiongsHeader\");","map":{"version":3,"sources":["/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/CustomizedAccordiongsHeader.tsx"],"names":["moment","React","useState","CustomizedAccordiongsHeader","props","name","TActual","TPlan","data","bad","setBad","textPeriod","setTextPeriod","timeTActual","unix","utc","format","timeTPlan","ConvertPeriodToString","timePeriod","list","split","text","console","log","t","from","display","gridTemplateColumns","justifyContent","backgroundColor","color"],"mappings":"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","sourcesContent":["import moment from 'moment';\nimport React,{useState} from 'react'\n\n\ninterface IDataHeader{\n    name?: string,\n    TActual: number,\n    TPlan: number\n}\n\n\nconst CustomizedAccordiongsHeader = (props:{data: IDataHeader})  => \n{\n    const {\n        name,\n        TActual,\n        TPlan} = props.data;\n\n    const [bad,setBad] = useState(false);\n    const [textPeriod,setTextPeriod] = useState(\"\");\n\n    let timeTActual = moment.unix(TActual).utc().format('H:m:s')\n    let timeTPlan = moment.unix(TPlan).utc().format('H:m:s')\n    \n\n\n    const ConvertPeriodToString = (timePeriod: any)=>\n    {\n        var list = timePeriod.split(' ')\n\n        let text = timePeriod;\n        console.log(list);\n\n        if(list[0] === 'in')\n        {\n\n\n            if(list[1] === 'a')\n            {\n                text = \"Отставание на несколько сукунд\"\n            }\n            else\n            {\n                let t =list[1];\n                text = \"Отставание на \"+ t\n\n                switch(list[2])\n                {\n                    case \"hours\": \n                        text += \" часа\"\n                    break;\n                    case \"minutes\": \n                        text += \" минут\"\n                    break;\n                    \n                }\n            }\n            console.log(text)\n        }\n        else\n        {\n            text = \"В запасе \" + list[0];\n            switch(list[1])\n            {\n                case \"hours\": \n                    text += \" часа\"\n                break;\n                case \"minutes\": \n                    text += \" минут\"\n                break;\n                \n            }\n        }\n\n        if(textPeriod != text)\n        {\n            setTextPeriod(text);\n        }\n       \n    }\n\n    let timePeriod = ConvertPeriodToString( moment.unix(TActual).utc().from(moment.unix(TPlan).utc()) )\n\n\n    if(TActual > TPlan && bad === false)\n    {\n        setBad(true);\n    }\n\n\n    return (\n        <div style={{display: 'grid', gridTemplateColumns: '100px auto',}}>\n                <p>{name}</p>\n                <div style={{display: 'grid', gridTemplateColumns: '1fr 1fr 1fr'}}>\n                <div style={{display: 'flex', justifyContent:'space-around'}} >\n                    <p>Актуальное вермя</p>\n                    <p style ={{backgroundColor: bad ? 'red': '', color: bad ? \"white\": \"\" }}>{timeTActual}</p>\n                  </div>\n                  <div style={{display: 'flex', justifyContent:'space-around'}} >\n                    <p>{textPeriod}</p>\n                  </div>\n                  <div style={{display: 'flex', justifyContent:'space-around'}} >\n                    <p>Плановое время</p>\n                    <p style ={{backgroundColor: bad ? 'red': '', color: bad ? \"white\": \"\" }}>{timeTPlan}</p>\n                  </div>\n                </div>\n        </div>\n    )\n}\n\n\nexport default CustomizedAccordiongsHeader;"]},"metadata":{},"sourceType":"module"}