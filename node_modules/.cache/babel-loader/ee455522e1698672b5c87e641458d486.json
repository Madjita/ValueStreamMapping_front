{"ast":null,"code":"var _jsxFileName = \"/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/PageExample/DemoArchive.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DemoArchive = props => {\n  _s();\n\n  const [tableData, setTableData] = React.useState(props.orders != undefined ? props.orders : []);\n\n  if (tableData.length > 0) {\n    tableData.forEach((element, i) => {\n      element.id = i + 1;\n      element.limitation = moment(element.limitation).format('MM/DD/YYYY H:m:s').toString();\n    });\n  }\n\n  const columns = [{\n    field: 'id',\n    headerName: '№',\n    width: 90\n  }, {\n    field: 'name',\n    headerName: 'Заказ',\n    width: 150,\n    editable: true\n  }, {\n    field: 'limitation',\n    headerName: 'Сроком до',\n    width: 150,\n    editable: true\n  }, {\n    field: 'tPlan',\n    headerName: 'Плановое',\n    //type: 'number',\n    width: 110,\n    editable: true\n  }\n  /*\n  {\n  field: 'fullName',\n  headerName: 'Full name',\n  description: 'This column has a value getter and is not sortable.',\n  sortable: false,\n  width: 160,\n  valueGetter: (params: GridValueGetterParams) =>\n    `${params.getValue(params.id, 'orderName') || ''} ${\n      params.getValue(params.id, 'limitation') || ''\n    }`,\n  },*/\n  ];\n\n  const convertToTime = t => {\n    return moment.unix(t).utc().format('H:m:s');\n  };\n\n  const rows = [{\n    id: 1,\n    limitation: 'Snow',\n    orderName: 'Jon',\n    tPlan: convertToTime(35)\n  }, {\n    id: 2,\n    limitation: 'Lannister',\n    orderName: 'Cersei',\n    tPlan: convertToTime(42)\n  }, {\n    id: 3,\n    limitation: 'Lannister',\n    orderName: 'Jaime',\n    tPlan: convertToTime(45)\n  }, {\n    id: 4,\n    limitation: 'Stark',\n    orderName: 'Arya',\n    tPlan: convertToTime(16)\n  }, {\n    id: 5,\n    limitation: 'Targaryen',\n    orderName: 'Daenerys',\n    tPlan: null\n  }, {\n    id: 6,\n    limitation: 'Melisandre',\n    orderName: null,\n    tPlan: convertToTime(150)\n  }, {\n    id: 7,\n    limitation: 'Clifford',\n    orderName: 'Ferrara',\n    tPlan: convertToTime(44)\n  }, {\n    id: 8,\n    limitation: 'Frances',\n    orderName: 'Rossini',\n    tPlan: convertToTime(36)\n  }, {\n    id: 9,\n    limitation: 'Roxie',\n    orderName: 'Harvey',\n    tPlan: convertToTime(65)\n  }];\n  console.log(\"props.orders = \", props.orders);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 520,\n      width: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      columns: columns,\n      rows: tableData,\n      pageSize: 5,\n      rowsPerPageOptions: [5],\n      checkboxSelection: true,\n      disableSelectionOnClick: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DemoArchive, \"goAM2D7gza4TGLhGX8ue8BRu8fQ=\");\n\n_c = DemoArchive;\nexport default DemoArchive;\n\nvar _c;\n\n$RefreshReg$(_c, \"DemoArchive\");","map":{"version":3,"sources":["/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/PageExample/DemoArchive.tsx"],"names":["React","DataGrid","moment","DemoArchive","props","tableData","setTableData","useState","orders","undefined","length","forEach","element","i","id","limitation","format","toString","columns","field","headerName","width","editable","convertToTime","t","unix","utc","rows","orderName","tPlan","console","log","height"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { DataGridPro } from '@mui/x-data-grid-pro';\nimport { DataGrid, GridColDef, GridValueGetterParams } from '@mui/x-data-grid';\nimport moment from 'moment';\nimport Order_view from '../Data/IDataOrder/IDataOrder';\n\n\n\n\nconst DemoArchive = (props:{orders?: Order_view[]}) => {\n  \n  const [tableData, setTableData] = React.useState<Order_view[]>(props.orders != undefined ? props.orders : [])\n\n\n  if(tableData.length > 0 )\n  {\n    tableData.forEach((element, i) => {\n          element.id = i+1;\n\n          element.limitation = moment(element.limitation).format('MM/DD/YYYY H:m:s').toString();\n    });\n  }\n\n\n  const columns: GridColDef[] = [\n    { field: 'id', headerName: '№', width: 90 },\n    {\n      field: 'name',\n      headerName: 'Заказ',\n      width: 150,\n      editable: true,\n    },\n    {\n      field: 'limitation',\n      headerName: 'Сроком до',\n      width: 150,\n      editable: true,\n    },\n    {\n      field: 'tPlan',\n      headerName: 'Плановое',\n      //type: 'number',\n      width: 110,\n      editable: true,\n    },/*\n    {\n      field: 'fullName',\n      headerName: 'Full name',\n      description: 'This column has a value getter and is not sortable.',\n      sortable: false,\n      width: 160,\n      valueGetter: (params: GridValueGetterParams) =>\n        `${params.getValue(params.id, 'orderName') || ''} ${\n          params.getValue(params.id, 'limitation') || ''\n        }`,\n    },*/\n  ];\n\n  const convertToTime = (t: number) =>\n  {\n    return moment.unix(t).utc().format('H:m:s')\n  }\n  \n  const rows = [\n    { id: 1, limitation: 'Snow', orderName: 'Jon', tPlan: convertToTime(35) },\n    { id: 2, limitation: 'Lannister', orderName: 'Cersei', tPlan: convertToTime(42) },\n    { id: 3, limitation: 'Lannister', orderName: 'Jaime', tPlan: convertToTime(45) },\n    { id: 4, limitation: 'Stark', orderName: 'Arya', tPlan: convertToTime(16) },\n    { id: 5, limitation: 'Targaryen', orderName: 'Daenerys', tPlan: null },\n    { id: 6, limitation: 'Melisandre', orderName: null, tPlan: convertToTime(150) },\n    { id: 7, limitation: 'Clifford', orderName: 'Ferrara', tPlan: convertToTime(44) },\n    { id: 8, limitation: 'Frances', orderName: 'Rossini', tPlan: convertToTime(36) },\n    { id: 9, limitation: 'Roxie', orderName: 'Harvey', tPlan: convertToTime(65) },\n  ];\n\n  console.log(\"props.orders = \",props.orders);\n    \n  return (\n    <div style={{ height: 520, width: '100%' }}>\n      <DataGrid\n\n        columns={columns}\n        rows={tableData}\n\n        pageSize={5}\n        rowsPerPageOptions={[5]}\n        checkboxSelection\n        disableSelectionOnClick\n      />\n    </div>\n  );\n}\nexport default DemoArchive;"]},"metadata":{},"sourceType":"module"}