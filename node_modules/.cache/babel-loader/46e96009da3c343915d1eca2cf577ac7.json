{"ast":null,"code":"var _jsxFileName = \"/Users/sergeismogliuk/Documents/Project/Project_node/Diplom/react-diplom/react-diplom/src/components/ListView/ListView.js\";\nimport React from 'react';\nimport ListItem from \"./ListItem\";\nimport { Conxtext, ListActiveConsumer } from \"../../ListActiveContextProvider\";\nimport { MidleContentContext, MidleContentConsumer } from \"../../providers/MidleContextProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ListView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this._showChoices = contextMidleContent => {\n      this.contextMidleContent = contextMidleContent;\n      return this.context.ListActive.map((item, i) => {\n        return /*#__PURE__*/_jsxDEV(ListItem, {\n          title: item.choice_name,\n          checked: item.isChecked,\n          size: 50,\n          onIconPress: () => {},\n          onPress: () => {\n            this.context.ListActive.map((item2, j) => {\n              item2.isSelected = false;\n            });\n            item.isSelected = true;\n\n            this._updateListView();\n          },\n          isSelected: this.context.ListActive[i].isSelected,\n          MyKey: item.choice_id\n        }, item.choice_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this);\n      });\n    };\n\n    this.escFunction = this.escFunction.bind(this);\n    this.state = {\n      selected: false\n    };\n  }\n\n  _updateListView() {\n    this.setState({\n      selected: !this.state.selected\n    });\n  }\n\n  escFunction(event) {\n    let list = this.context.ListActive;\n    let object = list.find(item => item.isSelected === true);\n\n    if (object === undefined) {\n      if (list.length > 0) {\n        list[0].isSelected = true;\n\n        this._updateListView();\n      }\n\n      return;\n    }\n\n    let position = list.indexOf(object);\n\n    switch (event.keyCode) {\n      case 38:\n        {\n          if (position - 1 < 0) {\n            break;\n          }\n\n          if (position < list.length) {\n            object.isSelected = false;\n            list[position - 1].isSelected = true;\n          } else {\n            object.isSelected = false;\n          }\n\n          this._updateListView();\n\n          break;\n        }\n\n      case 40:\n        {\n          if (position + 1 >= list.length) {\n            console.log(\"position+1\", position + 1);\n            break;\n          }\n\n          if (position < list.length) {\n            object.isSelected = false;\n            list[position + 1].isSelected = true;\n          } else {\n            object.isSelected = false;\n          }\n\n          this._updateListView();\n\n          break;\n        }\n    }\n  }\n\n  componentDidMount() {\n    console.log(\"componentDidMount\");\n    document.addEventListener(\"keydown\", this.escFunction, false);\n  }\n\n  componentWillUnmount() {\n    console.log(\"componentWillUnmount\");\n    document.removeEventListener(\"keydown\", this.escFunction, false);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ListActiveConsumer, {\n        children: context => /*#__PURE__*/_jsxDEV(MidleContentConsumer, {\n          children: contextMidleContent => /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: this._showChoices(contextMidleContent)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nListView.contextType = Conxtext;\nListView.contextMidleContent = MidleContentContext;\nexport default ListView;","map":{"version":3,"sources":["/Users/sergeismogliuk/Documents/Project/Project_node/Diplom/react-diplom/react-diplom/src/components/ListView/ListView.js"],"names":["React","ListItem","Conxtext","ListActiveConsumer","MidleContentContext","MidleContentConsumer","ListView","PureComponent","constructor","props","_showChoices","contextMidleContent","context","ListActive","map","item","i","choice_name","isChecked","item2","j","isSelected","_updateListView","choice_id","escFunction","bind","state","selected","setState","event","list","object","find","undefined","length","position","indexOf","keyCode","console","log","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","render","contextType"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport ListItem from \"./ListItem\"\n\nimport  {Conxtext,ListActiveConsumer} from \"../../ListActiveContextProvider\"\n\nimport  {MidleContentContext,MidleContentConsumer} from \"../../providers/MidleContextProvider\"\n\nclass ListView extends React.PureComponent {\n    constructor(props) {\n      super(props);\n      this.escFunction = this.escFunction.bind(this);\n      this.state = {\n        selected: false,\n      }\n    }\n\n    static contextType = Conxtext\n    static contextMidleContent = MidleContentContext\n\n    _updateListView()\n    {\n      this.setState({ selected: !this.state.selected});\n    }\n\n    _showChoices = (contextMidleContent) => {\n\n      this.contextMidleContent = contextMidleContent\n\n      return this.context.ListActive.map((item, i) => {\n        return (\n            <ListItem\n                title={item.choice_name}\n                checked={item.isChecked}\n                size={50}\n                onIconPress={() => {}}\n                onPress={() => {\n\n                  this.context.ListActive.map((item2,j) =>{\n                    item2.isSelected = false;\n                  });\n                  item.isSelected = true;\n                  this._updateListView()\n\n                }}\n                isSelected={this.context.ListActive[i].isSelected}\n                key={item.choice_id}\n                MyKey = {item.choice_id}\n            />\n        );\n      });\n    };\n\n    escFunction(event){\n      \n      let list = this.context.ListActive;\n      let object = list.find(item => item.isSelected === true)\n\n      if(object === undefined)\n      {\n        if(list.length > 0)\n        { \n          list[0].isSelected = true;\n          this._updateListView()\n        }\n\n        return;\n      }\n      let position = list.indexOf(object)\n      \n      switch(event.keyCode)\n      {\n        case 38:\n        {\n            if(position-1 < 0)\n            {\n              break;\n            }\n          \n            if(position < list.length )\n            {\n              object.isSelected = false;\n              list[position-1].isSelected = true;\n            }\n            else\n            {\n              object.isSelected = false;\n            }\n            this._updateListView()\n            break;\n        }\n\n        case 40:\n        {\n\n            if(position+1 >= list.length)\n            {\n              console.log(\"position+1\",position+1)\n              break;\n            }\n\n            if(position < list.length)\n            {\n              object.isSelected = false;\n              list[position+1].isSelected = true;\n            }\n            else\n            {\n              object.isSelected = false;\n            }\n            this._updateListView()\n          break;\n        }\n      }\n\n      \n      \n    }\n    componentDidMount(){\n      console.log(\"componentDidMount\")\n      document.addEventListener(\"keydown\", this.escFunction, false);\n    }\n    componentWillUnmount(){\n      console.log(\"componentWillUnmount\")\n      document.removeEventListener(\"keydown\", this.escFunction, false);\n    }\n\n    render() {\n      return (\n        <div>\n          <ListActiveConsumer>\n          {context => (\n            <MidleContentConsumer>\n              {contextMidleContent => (\n                <ul>{this._showChoices(contextMidleContent)}</ul>\n              )}\n              </MidleContentConsumer>\n          )}\n          </ListActiveConsumer>  \n        </div>\n      );\n    }\n  }\n\n  export default ListView;"]},"metadata":{},"sourceType":"module"}