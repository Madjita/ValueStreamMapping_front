{"ast":null,"code":"var _jsxFileName = \"/Users/sergeismogliuk/Documents/Project/Project_node/Diplom/react-diplom/react-diplom/src/components/ListView/ListView.js\";\nimport React from 'react';\nimport ListItem from \"./ListItem\";\nimport { ListActiveConsumer } from \"../../ListActiveContextProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ListView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this._showChoices = context => {\n      return context.ListActive.map((item, i) => {\n        return /*#__PURE__*/_jsxDEV(ListItem, {\n          title: item.choice_name,\n          checked: item.isChecked,\n          size: 50,\n          onIconPress: () => {},\n          onPress: () => {//let clonedList = this.state.list.slice();\n            //clonedList[i].isChecked = !clonedList[i].isChecked;\n            //this.setState({ list: clonedList });\n          },\n          MyKey: item.choice_id\n        }, item.choice_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this);\n      });\n    };\n\n    this.state = {};\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ListActiveConsumer, {\n        children: context => /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: this._showChoices(context)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default ListView;","map":{"version":3,"sources":["/Users/sergeismogliuk/Documents/Project/Project_node/Diplom/react-diplom/react-diplom/src/components/ListView/ListView.js"],"names":["React","ListItem","ListActiveConsumer","ListView","PureComponent","constructor","props","_showChoices","context","ListActive","map","item","i","choice_name","isChecked","choice_id","state","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,QAAP,MAAqB,YAArB;AAEA,SAASC,kBAAT,QAAkC,iCAAlC;;;AAEA,MAAMC,QAAN,SAAuBH,KAAK,CAACI,aAA7B,CAA2C;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAUnBC,YAVmB,GAUHC,OAAD,IAAa;AAC1B,aAAOA,OAAO,CAACC,UAAR,CAAmBC,GAAnB,CAAuB,CAACC,IAAD,EAAOC,CAAP,KAAa;AACzC,4BACI,QAAC,QAAD;AACI,UAAA,KAAK,EAAED,IAAI,CAACE,WADhB;AAEI,UAAA,OAAO,EAAEF,IAAI,CAACG,SAFlB;AAGI,UAAA,IAAI,EAAE,EAHV;AAII,UAAA,WAAW,EAAE,MAAM,CAAE,CAJzB;AAKI,UAAA,OAAO,EAAE,MAAM,CACf;AACA;AACA;AACC,WATL;AAWI,UAAA,KAAK,EAAIH,IAAI,CAACI;AAXlB,WAUSJ,IAAI,CAACI,SAVd;AAAA;AAAA;AAAA;AAAA,gBADJ;AAeD,OAhBM,CAAP;AAiBD,KA5BkB;;AAGjB,SAAKC,KAAL,GAAa,EAAb;AAED;;AAyBDC,EAAAA,iBAAiB,GACjB,CAEC;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACE,QAAC,kBAAD;AAAA,kBACCV,OAAO,iBACN;AAAA,oBAAK,KAAKD,YAAL,CAAkBC,OAAlB;AAAL;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AA9CsC;;AAmDzC,eAAeL,QAAf","sourcesContent":["import React from 'react';\n\nimport ListItem from \"./ListItem\"\n\nimport  {ListActiveConsumer} from \"../../ListActiveContextProvider\"\n\nclass ListView extends React.PureComponent {\n    constructor(props) {\n      super(props);\n      \n      this.state = {\n      }\n    }\n\n\n\n  \n    _showChoices = (context) => {\n      return context.ListActive.map((item, i) => {\n        return (\n            <ListItem\n                title={item.choice_name}\n                checked={item.isChecked}\n                size={50}\n                onIconPress={() => {}}\n                onPress={() => {\n                //let clonedList = this.state.list.slice();\n                //clonedList[i].isChecked = !clonedList[i].isChecked;\n                //this.setState({ list: clonedList });\n                }}\n                key={item.choice_id}\n                MyKey = {item.choice_id}\n            />\n        );\n      });\n    };\n\n    componentDidMount()\n    {\n        \n    }\n\n    render() {\n      return (\n        <div>\n          <ListActiveConsumer>\n          {context => (\n            <ul>{this._showChoices(context)}</ul>\n          )}\n          </ListActiveConsumer>  \n        </div>\n      );\n    }\n  }\n\n\n  \n  export default ListView;"]},"metadata":{},"sourceType":"module"}