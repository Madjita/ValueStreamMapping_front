{"ast":null,"code":"var _jsxFileName = \"/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Card/ViewOrderCardNew.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport { useActionCardVSM } from '../../hooks/useActionCardVSM';\nimport { useTypedSelector } from '../../hooks/leftMenuSelector';\nimport ViewCardNew from './ViewCardNew';\n/*\ninterface productionCardVSM{\n    name: string,\n    productions: IDataCardVSM[]\n}\ninterface IDataCardProduct{\n    cardVSMs: productionCardVSM[]\n}*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ViewOrderCardNew = props => {\n  _s();\n\n  const [BDitems, setBDItem] = useState();\n  const {\n    cardVSMs,\n    loading\n  } = useTypedSelector(state => state.cardVSM);\n  const {\n    cardVSMLoading\n  } = useActionCardVSM();\n  const [card, setCard] = useState(cardVSMs);\n  let listProduct = props.order.orderProduction_views.map((item, index) => {\n    console.log(\"dsfasfd = \", item);\n    return /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        marginBottom: '150px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        action: /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"settings\",\n          children: /*#__PURE__*/_jsxDEV(SettingsIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this),\n        title: '\\\"' + item.name + '\\\" | Количество: ' + item.orderProductionItems.length,\n        sx: {\n          fontWeight: 'bold',\n          color: 'white',\n          backgroundColor: '#575757'\n        },\n        style: {\n          color: 'white'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        sx: {\n          backgroundColor: 'rgba(0, 0, 0, .03)'\n        },\n        children: /*#__PURE__*/_jsxDEV(ViewCardNew, {\n          sectionLogic_views: item.card_View.sectionLogic_views,\n          orderProduct: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: listProduct\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 8\n  }, this);\n};\n\n_s(ViewOrderCardNew, \"o5F3S6OzNKhEPEneNJdzXvPG1yg=\", false, function () {\n  return [useTypedSelector, useActionCardVSM];\n});\n\n_c = ViewOrderCardNew;\nexport default ViewOrderCardNew;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewOrderCardNew\");","map":{"version":3,"sources":["/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Card/ViewOrderCardNew.tsx"],"names":["React","useState","Card","CardHeader","CardContent","IconButton","SettingsIcon","useActionCardVSM","useTypedSelector","ViewCardNew","ViewOrderCardNew","props","BDitems","setBDItem","cardVSMs","loading","state","cardVSM","cardVSMLoading","card","setCard","listProduct","order","orderProduction_views","map","item","index","console","log","marginBottom","name","orderProductionItems","length","fontWeight","color","backgroundColor","card_View","sectionLogic_views"],"mappings":";;;AAAA,OAAOA,KAAP,IAAyBC,QAAzB,QAAwC,OAAxC;AAWA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AAEA,OAAOC,UAAP,MAAuB,8BAAvB;AAEA,OAAOC,YAAP,MAAyB,6BAAzB;AAOA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AAIA,OAAOC,WAAP,MAAwB,eAAxB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAGA,MAAMC,gBAAgB,GAAKC,KAAD,IAAgC;AAAA;;AACtD,QAAM,CAACC,OAAD,EAAUC,SAAV,IAAuBZ,QAAQ,EAArC;AAEA,QAAM;AAACa,IAAAA,QAAD;AAAWC,IAAAA;AAAX,MAAsBP,gBAAgB,CAACQ,KAAK,IAAIA,KAAK,CAACC,OAAhB,CAA5C;AACA,QAAM;AAACC,IAAAA;AAAD,MAAmBX,gBAAgB,EAAzC;AAEA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAACa,QAAD,CAAhC;AAGA,MAAIO,WAAW,GAAGV,KAAK,CAACW,KAAN,CAAYC,qBAAZ,CAAkCC,GAAlC,CAAsC,CAACC,IAAD,EAA6BC,KAA7B,KAA6C;AAGjGC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BH,IAA1B;AACA,wBACI,QAAC,IAAD;AAAkB,MAAA,EAAE,EAAE;AAACI,QAAAA,YAAY,EAAE;AAAf,OAAtB;AAAA,8BACI,QAAC,UAAD;AACI,QAAA,MAAM,eACF,QAAC,UAAD;AAAY,wBAAW,UAAvB;AAAA,iCACI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFR;AAMI,QAAA,KAAK,EAAE,OAAKJ,IAAI,CAACK,IAAV,GAAiB,mBAAjB,GAAqCL,IAAI,CAACM,oBAAL,CAA0BC,MAN1E;AAOI,QAAA,EAAE,EAAE;AAACC,UAAAA,UAAU,EAAE,MAAb;AAAoBC,UAAAA,KAAK,EAAE,OAA3B;AAAoCC,UAAAA,eAAe,EAAE;AAArD,SAPR;AAQI,QAAA,KAAK,EAAE;AAACD,UAAAA,KAAK,EAAE;AAAR;AARX;AAAA;AAAA;AAAA;AAAA,cADJ,eAaI,QAAC,WAAD;AAAa,QAAA,EAAE,EAAE;AAACC,UAAAA,eAAe,EAAE;AAAlB,SAAjB;AAAA,+BACI,QAAC,WAAD;AAAa,UAAA,kBAAkB,EAAEV,IAAI,CAACW,SAAL,CAAeC,kBAAhD;AAAoE,UAAA,YAAY,EAAEZ;AAAlF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAbJ;AAAA,OAAWC,KAAX;AAAA;AAAA;AAAA;AAAA,YADJ;AAoBH,GAxBiB,CAAlB;AA0BA,sBACG;AAAA,cACKL;AADL;AAAA;AAAA;AAAA;AAAA,UADH;AAMH,CAzCD;;GAAMX,gB;UAG0BF,gB,EACHD,gB;;;KAJvBG,gB;AA4CN,eAAeA,gBAAf","sourcesContent":["import React,{useEffect, useState} from 'react'\n\nimport IDataCardSection from '../Data/IDataCardSection'\nimport IDataOrderItem from '../Data/IDataOrderItem'\nimport Divider from '@material-ui/core/Divider';\nimport ViewCard from './ViewCard'\n\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { Box } from '@material-ui/system';\n\n\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardContent from '@material-ui/core/CardContent'\n\nimport IconButton from '@material-ui/core/IconButton'\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport SettingsIcon from '@material-ui/icons/Settings';\n\nimport IDataVSM from '../Data/IDataVSM'\nimport IDataProduction from '../Data/IDataProduction';\nimport IDataCardVSM from '../Data/IDataCardVSM';\nimport { useCardVSMActionType, useProductionCardVSM } from '../../type/useCardVSMType';\n\nimport { useActionCardVSM } from '../../hooks/useActionCardVSM';\nimport { useTypedSelector } from '../../hooks/leftMenuSelector';\nimport IDataOrder from '../Data/IDataOrder';\nimport { MyCards, OrderMy } from '../../type/useOrdersType';\nimport Order_view, { OrderProduction_view } from '../Data/IDataOrder/IDataOrder';\nimport ViewCardNew from './ViewCardNew';\n\n/*\ninterface productionCardVSM{\n    name: string,\n    productions: IDataCardVSM[]\n}\ninterface IDataCardProduct{\n    cardVSMs: productionCardVSM[]\n}*/\n\n\nconst ViewOrderCardNew =  (props: {order: Order_view}) => {\n    const [BDitems, setBDItem] = useState<IDataOrderItem[]>();\n\n    const {cardVSMs, loading} = useTypedSelector(state => state.cardVSM);\n    const {cardVSMLoading} = useActionCardVSM()\n\n    const [card, setCard] = useState(cardVSMs);\n\n\n    let listProduct = props.order.orderProduction_views.map((item: OrderProduction_view, index: number)=>{\n        \n\n        console.log(\"dsfasfd = \", item)\n        return(\n            <Card key={index} sx={{marginBottom: '150px'}}>\n                <CardHeader\n                    action={\n                        <IconButton aria-label=\"settings\">\n                            <SettingsIcon />\n                        </IconButton>\n                    }\n                    title={'\\\"'+item.name + '\\\" | Количество: '+item.orderProductionItems.length}\n                    sx={{fontWeight: 'bold',color: 'white', backgroundColor: '#575757'}}\n                    style={{color: 'white'}}\n                >\n                    \n                </CardHeader>\n                <CardContent sx={{backgroundColor: 'rgba(0, 0, 0, .03)'}}>\n                    <ViewCardNew sectionLogic_views={item.card_View.sectionLogic_views} orderProduct={item}/>\n               </CardContent>\n            </Card>\n\n        )\n    })\n\n    return(\n       <div>\n           {listProduct}\n       </div>\n    )\n    \n}\n\n\nexport default ViewOrderCardNew;"]},"metadata":{},"sourceType":"module"}