{"ast":null,"code":"import axios from \"axios\";\nimport { useOrdersActionType } from \"../../type/useOrdersType\";\nimport { fetch_orders } from '../reducers/useOrdersReducer';\nexport const ordersLoading = () => {\n  return async dispatch => {\n    try {\n      dispatch(fetch_orders());\n      const response = await axios.get('https://jsonplaceholder.typicode.com/users');\n      setTimeout(() => {\n        dispatch({\n          type: useOrdersActionType.FETCH_ORDERS_SUCCESS,\n          payload: response.data\n        });\n      }, 500);\n    } catch (e) {\n      dispatch({\n        type: useOrdersActionType.FETCH_ORDERS_ERROR,\n        payload: 'Error'\n      });\n    }\n  };\n};","map":{"version":3,"sources":["/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/store/action-creator/useActionOrders.tsx"],"names":["axios","useOrdersActionType","fetch_orders","ordersLoading","dispatch","response","get","setTimeout","type","FETCH_ORDERS_SUCCESS","payload","data","e","FETCH_ORDERS_ERROR"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,SAASC,mBAAT,QAAsD,0BAAtD;AAEA,SAASC,YAAT,QAAuE,8BAAvE;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;AAC/B,SAAO,MAAOC,QAAP,IAAyB;AAC5B,QAAG;AACCA,MAAAA,QAAQ,CAACF,YAAY,EAAb,CAAR;AACA,YAAMG,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAN,CAAU,4CAAV,CAAvB;AACAC,MAAAA,UAAU,CAAC,MAAM;AACbH,QAAAA,QAAQ,CAAC;AAACI,UAAAA,IAAI,EAAEP,mBAAmB,CAACQ,oBAA3B;AAAiDC,UAAAA,OAAO,EAAEL,QAAQ,CAACM;AAAnE,SAAD,CAAR;AACH,OAFS,EAEP,GAFO,CAAV;AAGH,KAND,CAME,OAAMC,CAAN,EAAS;AACPR,MAAAA,QAAQ,CAAC;AAACI,QAAAA,IAAI,EAAEP,mBAAmB,CAACY,kBAA3B;AAA+CH,QAAAA,OAAO,EAAE;AAAxD,OAAD,CAAR;AACH;AACJ,GAVD;AAWH,CAZM","sourcesContent":["import axios from \"axios\"\nimport { Dispatch } from \"react\"\nimport IDataOrder from \"../../Component/Data/IDataOrder\"\nimport { useOrdersActionType,useLeftMenuAction } from \"../../type/useOrdersType\"\n\nimport { fetch_orders, fetch_orders_success, fetch_orders_error } from '../reducers/useOrdersReducer'\n\nexport const ordersLoading = () => {\n    return async (dispatch: any) => {\n        try{\n            dispatch(fetch_orders());\n            const response = await axios.get('https://jsonplaceholder.typicode.com/users')\n            setTimeout(() => {\n                dispatch({type: useOrdersActionType.FETCH_ORDERS_SUCCESS, payload: response.data as IDataOrder[]})\n            }, 500)\n        } catch(e) {\n            dispatch({type: useOrdersActionType.FETCH_ORDERS_ERROR, payload: 'Error'});\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}