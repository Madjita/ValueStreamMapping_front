{"ast":null,"code":"var _jsxFileName = \"/Users/sergeismogliuk/Documents/Project/Project_node/Diplom/react-diplom/react-diplom/src/components/ListView/ListView.js\";\nimport React from 'react';\nimport ListItem from \"./ListItem\";\nimport { ListActiveConsumer } from \"../../ListActiveContextProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ListView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this._showChoices = context => {\n      return context.ListActive.map((item, i) => {\n        return /*#__PURE__*/_jsxDEV(ListItem, {\n          title: item.choice_name,\n          checked: item.isChecked,\n          size: 50,\n          onIconPress: () => {},\n          onPress: () => {\n            context.ListActive.map((item2, j) => {\n              item2.isSelected = false;\n            });\n            item.isSelected = true;\n            this.setState({\n              selected: !this.state.selected,\n              context: context\n            });\n          },\n          isSelected: item.isSelected,\n          MyKey: item.choice_id\n        }, item.choice_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this);\n      });\n    };\n\n    this.escFunction = this.escFunction.bind(this);\n    this.state = {\n      selected: false,\n      context: []\n    };\n  }\n\n  escFunction(event) {\n    if (event.keyCode === 38) {\n      //Do whatever when esc is pressed\n      // this.context.\n      let list = this.state.context.ListActive;\n      let object = list.find(item => item.isSelected === true);\n      let position = list.indexOf(object);\n      console.log(\"dsfasdf\", list, object, position);\n\n      if (position > list.lenght) {\n        object.isSelected = false;\n        this.state.context.ListActive[position - 1].isSelected = true;\n      } else {\n        object.isSelected = false;\n      }\n      /*\n             this.state.context.ListActive.map((item2,i) =>{\n              item2.isSelected = false;\n            });*/\n\n\n      this.setState({\n        selected: !this.state.selected\n      });\n    }\n  }\n\n  componentDidMount() {\n    console.log(\"componentDidMount\");\n    document.addEventListener(\"keydown\", this.escFunction, false);\n  }\n\n  componentWillUnmount() {\n    console.log(\"componentWillUnmount\");\n    document.removeEventListener(\"keydown\", this.escFunction, false);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ListActiveConsumer, {\n        children: context => /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: this._showChoices(context)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nListView.contextType = ListActiveConsumer;\nexport default ListView;","map":{"version":3,"sources":["/Users/sergeismogliuk/Documents/Project/Project_node/Diplom/react-diplom/react-diplom/src/components/ListView/ListView.js"],"names":["React","ListItem","ListActiveConsumer","ListView","PureComponent","constructor","props","_showChoices","context","ListActive","map","item","i","choice_name","isChecked","item2","j","isSelected","setState","selected","state","choice_id","escFunction","bind","event","keyCode","list","object","find","position","indexOf","console","log","lenght","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","render","contextType"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport ListItem from \"./ListItem\"\n\nimport  {ListActiveConsumer} from \"../../ListActiveContextProvider\"\n\nclass ListView extends React.PureComponent {\n    constructor(props) {\n      super(props);\n      this.escFunction = this.escFunction.bind(this);\n      this.state = {\n        selected: false,\n        context: []\n      }\n    }\n\n    static contextType = ListActiveConsumer\n\n    _showChoices = (context) => {\n      return context.ListActive.map((item, i) => {\n        return (\n            <ListItem\n                title={item.choice_name}\n                checked={item.isChecked}\n                size={50}\n                onIconPress={() => {}}\n                onPress={() => {\n\n                  context.ListActive.map((item2,j) =>{\n                    item2.isSelected = false;\n                  });\n                  item.isSelected = true;\n                  this.setState({ selected: !this.state.selected, context: context});\n\n                }}\n                isSelected={item.isSelected}\n                key={item.choice_id}\n                MyKey = {item.choice_id}\n            />\n        );\n      });\n    };\n\n    escFunction(event){\n      if(event.keyCode === 38) {\n        //Do whatever when esc is pressed\n\n       // this.context.\n       \n\n       let list = this.state.context.ListActive;\n\n       let object = list.find(item => item.isSelected === true)\n       let position = list.indexOf(object)\n\n       console.log(\"dsfasdf\",list,object,position)\n\n       if(position > list.lenght)\n       {\n         object.isSelected = false;\n         this.state.context.ListActive[position-1].isSelected = true;\n       }\n       else\n       {\n        object.isSelected = false;\n       }\n\n/*\n       this.state.context.ListActive.map((item2,i) =>{\n        item2.isSelected = false;\n      });*/\n      this.setState({ selected: !this.state.selected});\n\n       \n      }\n    }\n    componentDidMount(){\n      console.log(\"componentDidMount\")\n      document.addEventListener(\"keydown\", this.escFunction, false);\n    }\n    componentWillUnmount(){\n      console.log(\"componentWillUnmount\")\n      document.removeEventListener(\"keydown\", this.escFunction, false);\n    }\n\n    render() {\n      return (\n        <div>\n          <ListActiveConsumer>\n          {context => (\n            <ul>{this._showChoices(context)}</ul>\n          )}\n          </ListActiveConsumer>  \n        </div>\n      );\n    }\n  }\n  export default ListView;"]},"metadata":{},"sourceType":"module"}