{"ast":null,"code":"var _jsxFileName = \"/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Card/ViewCardNew.tsx\";\nimport React from 'react';\nimport ViewItemSectionNew from './ViewItemSectionNew';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ViewCardNew = props => {\n  let flagParalel = false;\n  let flagMaxInSectionItems = 0;\n  props.sectionLogic_views.map((item, index) => {\n    if (item.sectionEtap_views.length > flagMaxInSectionItems) {\n      flagMaxInSectionItems = item.sectionEtap_views.length;\n    }\n\n    if (item.sectionEtap_views.length > 1) {\n      flagParalel = true;\n    }\n  });\n  let card = props.sectionLogic_views.map((item, index) => /*#__PURE__*/_jsxDEV(ViewItemSectionNew, {\n    sectionEtap_views: item,\n    order: props.orderProduct,\n    numberSection: index,\n    lastSection: props.sectionLogic_views.length,\n    flagParalel: flagParalel,\n    flagMaxInSectionItems: flagMaxInSectionItems\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 10\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'grid',\n      justifyContent: 'center',\n      gridTemplateColumns: 'repeat(' + props.sectionLogic_views.length + ',1fr)'\n    },\n    children: card\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 8\n  }, this);\n};\n\n_c = ViewCardNew;\nexport default ViewCardNew;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewCardNew\");","map":{"version":3,"sources":["/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Card/ViewCardNew.tsx"],"names":["React","ViewItemSectionNew","ViewCardNew","props","flagParalel","flagMaxInSectionItems","sectionLogic_views","map","item","index","sectionEtap_views","length","card","orderProduct","display","justifyContent","gridTemplateColumns"],"mappings":";AAAA,OAAOA,KAAP,MAA6B,OAA7B;AAWA,OAAOC,kBAAP,MAA+B,sBAA/B;;;AAIA,MAAMC,WAAW,GAAKC,KAAD,IAA2F;AAE5G,MAAIC,WAAW,GAAG,KAAlB;AACA,MAAIC,qBAAqB,GAAG,CAA5B;AAEAF,EAAAA,KAAK,CAACG,kBAAN,CAAyBC,GAAzB,CAA6B,CAACC,IAAD,EAA0BC,KAA1B,KAC3B;AACG,QAAGD,IAAI,CAACE,iBAAL,CAAuBC,MAAvB,GAAgCN,qBAAnC,EACA;AACGA,MAAAA,qBAAqB,GAAGG,IAAI,CAACE,iBAAL,CAAuBC,MAA/C;AACF;;AAED,QAAGH,IAAI,CAACE,iBAAL,CAAuBC,MAAvB,GAAgC,CAAnC,EACA;AACGP,MAAAA,WAAW,GAAG,IAAd;AACF;AACH,GAXH;AAcA,MAAIQ,IAAI,GAAGT,KAAK,CAACG,kBAAN,CAAyBC,GAAzB,CAA6B,CAACC,IAAD,EAA2BC,KAA3B,kBACnC,QAAC,kBAAD;AAAgC,IAAA,iBAAiB,EAAED,IAAnD;AAAyD,IAAA,KAAK,EAAEL,KAAK,CAACU,YAAtE;AAAoF,IAAA,aAAa,EAAEJ,KAAnG;AAA0G,IAAA,WAAW,EAAEN,KAAK,CAACG,kBAAN,CAAyBK,MAAhJ;AAAwJ,IAAA,WAAW,EAAEP,WAArK;AAAkL,IAAA,qBAAqB,EAAEC;AAAzM,KAAyBI,KAAzB;AAAA;AAAA;AAAA;AAAA,UADM,CAAX;AAKA,sBACG;AAAK,IAAA,KAAK,EAAE;AAACK,MAAAA,OAAO,EAAE,MAAV;AAAkBC,MAAAA,cAAc,EAAE,QAAlC;AAA4CC,MAAAA,mBAAmB,EAAE,YAAUb,KAAK,CAACG,kBAAN,CAAyBK,MAAnC,GAA0C;AAA3G,KAAZ;AAAA,cACIC;AADJ;AAAA;AAAA;AAAA;AAAA,UADH;AAMH,CA9BD;;KAAMV,W;AAiCN,eAAeA,WAAf","sourcesContent":["import React,{useState} from 'react'\n\nimport IDataCardSection from '../Data/IDataCardSection'\nimport IDataOrderItem from '../Data/IDataOrderItem'\nimport Divider from '@material-ui/core/Divider';\nimport IDataCardVSM from '../Data/IDataCardVSM';\nimport Paper from '@material-ui/core/Paper'\nimport ViewItemSection from './ViewItemSection'\nimport IDataOrder from '../Data/IDataOrder';\nimport IDataOrderPart from '../Data/IDataOrderPart';\nimport { OrderProductionItem, OrderProduction_view, SectionLogic_view } from '../Data/IDataOrder/IDataOrder';\nimport ViewItemSectionNew from './ViewItemSectionNew';\n\n\n\nconst ViewCardNew =  (props: {sectionLogic_views : SectionLogic_view[], orderProduct?:OrderProduction_view}) => {\n    \n    let flagParalel = false;\n    let flagMaxInSectionItems = 0 as number;\n    \n    props.sectionLogic_views.map((item : SectionLogic_view,index: number) =>\n      {\n         if(item.sectionEtap_views.length > flagMaxInSectionItems )\n         {\n            flagMaxInSectionItems = item.sectionEtap_views.length \n         }\n\n         if(item.sectionEtap_views.length > 1)\n         {\n            flagParalel = true;\n         }\n      }\n    )\n    \n    let card = props.sectionLogic_views.map((item : SectionEtap_view[],index: number) =>\n         <ViewItemSectionNew key={index} sectionEtap_views={item} order={props.orderProduct} numberSection={index} lastSection={props.sectionLogic_views.length} flagParalel={flagParalel} flagMaxInSectionItems={flagMaxInSectionItems}/>\n    )\n\n\n    return(\n       <div style={{display: 'grid', justifyContent: 'center', gridTemplateColumns: 'repeat('+props.sectionLogic_views.length+',1fr)'}}>\n          {card}\n       </div>\n    )\n\n}\n\n\nexport default ViewCardNew;"]},"metadata":{},"sourceType":"module"}