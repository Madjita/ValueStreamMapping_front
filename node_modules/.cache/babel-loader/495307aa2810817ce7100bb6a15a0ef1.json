{"ast":null,"code":"var _jsxFileName = \"/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/CustomizedAccordiongsHeaderNewAlgoritm.tsx\",\n    _s = $RefreshSig$();\n\nimport moment from 'moment';\nimport React, { useState } from 'react';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport ArchiveIcon from '@material-ui/icons/Archive';\nimport StopIcon from '@material-ui/icons/Stop';\nimport WorkIcon from '@material-ui/icons/Work';\nimport ip from '../global';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet URL = 'ws://' + ip + ':5001/wsItem';\n\nconst CustomizedAccordiongsHeaderNewAlgoritm = props => {\n  _s();\n\n  const [order, setOrder] = useState(props.data); //props.data\n\n  const [bad, setBad] = useState(false);\n  const [textPeriod, setTextPeriod] = useState(\"\");\n  React.useEffect(() => {\n    setOrder(props.data);\n  }, [props.data]); //const {orders, loading} = useTypedSelector(state => state.orders);\n  //const {updateInfoOrder} = useActionOrders()\n  //const prevOrder = usePrevious(order) as IDataOrder | undefined;\n\n  /* React.useEffect(() => {\n        const timer = setTimeout(() => updateInfoOrder(order as IDataOrder), 1000); \n        return () => {\n          clearTimeout(timer);\n        };  \n    })*/\n\n  /* React.useEffect(() => {\n        if(prevOrder != undefined)\n        {\n            if(prevOrder.tActual  != order.tActual)\n            {\n                setOrder(props.data)\n            }\n        }\n    },[props.data])*/\n\n  /* console.log(prevOrder, props.data)\n   if(prevOrder != undefined)\n   {\n          \n    }*/\n  ///\n\n  /*\n      const socket = React.useRef(null)  as any;\n      const [reconnect, setRecconect] = React.useState(false);\n    \n        React.useEffect(() => {\n  \t\tconsole.log(\"Set socket after order= \", socket.current);\n  \t\tif (!socket.current || reconnect === false) {\n  \t\t\tconsole.log(\"Set socket = \", socket.current);\n  \t\t\tsocket.current = new WebSocket(URL) ;\n  \t\t\tsocket.current.onmessage = (e: any) => {\n  \t\t\t\t\n                 \n  \t\t\t\tconst OrdersFromServer = JSON.parse(e.data) as IDataOrder;  \n  \t\t\t\t//console.log(\"e\", OrdersFromServer);\n                  //console.log(\"e order\", order);\n  \t\t\t\tsetOrder(OrdersFromServer);\n  \t\t\t};\n  \n  \t\t\tsocket.current.onopen = () => {\n  \t\t\t\t// on connecting, do nothing but log it to the console\n  \t\t\t\tconsole.log('connected')\n  \t\t\t\tsocket.current.send(JSON.stringify({ id: props.data.id}));\n  \t\t\t}\n  \n  \t\t\t\n  \n  \t\t\tsocket.current.onerror = (e : any) => {\n  \t\t\t\tconsole.log(\"eror\", e.data);\n          console.log(\"CONNECTION CLOSED\", e.data);\n  \t\t\t\tsocket.current.close(1000, \"\");\n  \n          setRecconect(true);\n  \t\t\t};\n  \n  \t\t\tsocket.current.onclose = (e : any)=>{\n  \t\t\t\tconsole.log(\"CONNECTION CLOSED\", e.data);\n  \t\t\t\tsocket.current.close(1000, \"\");\n  \n  \t\t\t\tsetRecconect(true);\n  \t\t\t}\n  \t\t}\n  \t\treturn () => {\n  \t\t  if (socket.current) {\n  \t\t\tsocket.current.close(1000, \"\");\n  \t\t  }\n  \t\t};\n  \t  }, [socket,reconnect]);\n  \n  \n        if(order === null || order === undefined)\n        {\n            return (\n               <p>Не нашел</p>\n            )\n        }\n        */\n  //console.log(\"rerender Order = \", order?.id)\n\n  /* if(order?.tActual  != props.data.tActual)\n   {\n       setOrder(props.data)\n   }*/\n\n  const {\n    name,\n    tActual,\n    tPlan,\n    tFuture,\n    tStop,\n    tStart,\n    limitation\n  } = order;\n  let timeTActual = moment.unix(tActual).utc().format('H:m:s');\n  let timeTPlan = moment.unix(tPlan).utc().format('H:m:s');\n\n  const ConvertPeriodToString = timePeriod => {\n    var list = timePeriod.split(' ');\n    let text = timePeriod; //console.log(list);\n\n    if (list[0] === 'in') {\n      if (list[1] === 'a') {\n        text = \"Отставание на несколько сукунд\";\n\n        if (list[2] === 'minute') {\n          text = \"Отставание на 1 м\";\n        }\n      } else {\n        let t = list[1];\n        text = \"Отставание на \" + t;\n\n        switch (list[2]) {\n          case \"hours\":\n            text += \" ч\";\n            break;\n\n          case \"minutes\":\n            text += \" м\";\n            break;\n        }\n      } // console.log(text)\n\n    } else {\n      if (list[0] === 'a') {\n        text = \"В запасе много времени\";\n\n        if (list[2] === 'minute') {\n          text = \"Отставание на 1 м\";\n        }\n      } else {\n        text = \"В запасе \" + list[0];\n\n        switch (list[1]) {\n          case \"hours\":\n            text += \" ч\";\n            break;\n\n          case \"minutes\":\n            text += \" м\";\n            break;\n        }\n      }\n    }\n\n    if (textPeriod != text) {\n      setTextPeriod(text);\n    }\n  }; //var diff = moment(\"23:07\").unix() - moment(\"22:07\").unix();\n\n\n  let timePeriod = '';\n  let timeFuture = moment.unix(tFuture).utc().format('H:m:s');\n  let text = '';\n  let dateStop = new Date(tStop);\n  let dateStart = new Date(tStart); //console.log(\"tStop =\",dateStop);\n  //console.log(\"tStart =\",dateStart);\n\n  let tt = dateStop.getTime() - dateStart.getTime();\n  /* if(tt < 0)\n   {\n       tt = dateStart.getTime() - dateStop.getTime();\n   }*/\n\n  let dd = new Date(tt);\n  let timeArchive = moment(dd).utc().format('H:m:s'); //moment.unix( (dateStop.getTime()  - dateStart.getTime()) ).utc().format('H:m:s');\n\n  if (tPlan - tActual === 0) {\n    timePeriod = moment.unix(tPlan - tActual).utc().format('H:m:s');\n    text = '';\n  } else {\n    if (tPlan - tActual > 0) {\n      timePeriod = moment.unix(tPlan - tActual).utc().format('H:m:s');\n      text = 'Осталось';\n    } else {\n      timePeriod = moment.unix(tActual - tPlan).utc().format('H:m:s');\n      text = 'Отставание на';\n    }\n  } // let timePeriod =  moment.unix(tPlan).from(moment.unix(tActual))   //ConvertPeriodToString( moment.unix(tActual).utc().from(moment.unix(tPlan).utc()) )\n\n\n  if (tActual >= tPlan && bad === false) //&& order.orderRole === 2 || order.orderRole === 3\n    {\n      setBad(true);\n    }\n\n  if (tActual < tPlan && bad) {\n    console.log(tActual, tPlan);\n    setBad(false);\n  }\n\n  let orderRole;\n\n  switch (order.orderRole) {\n    case 1:\n      orderRole = /*#__PURE__*/_jsxDEV(PlayArrowIcon, {\n        style: {\n          color: 'gray'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 25\n      }, this);\n      break;\n\n    case 2:\n      orderRole = /*#__PURE__*/_jsxDEV(WorkIcon, {\n        style: {\n          color: 'orange'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 26\n      }, this);\n      break;\n\n    case 3:\n      orderRole = /*#__PURE__*/_jsxDEV(ArchiveIcon, {\n        style: {\n          color: 'green'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 26\n      }, this);\n      break;\n\n    case 4:\n      orderRole = /*#__PURE__*/_jsxDEV(StopIcon, {\n        style: {\n          color: 'red'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 26\n      }, this);\n      break;\n  }\n\n  if (order.orderRole === 3) {\n    let seee = dd.getSeconds() >= tPlan;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: '100px auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'grid',\n          gridTemplateColumns: '1fr 1fr 1fr'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-around'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u0417\\u0430\\u0442\\u0440\\u0430\\u0447\\u0435\\u043D\\u043E\\u043E\\u0435 \\u0432\\u0440\\u0435\\u043C\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              backgroundColor: seee ? 'red' : '',\n              color: seee ? \"white\" : \"\"\n            },\n            children: timeArchive\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-around'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u041F\\u043B\\u0430\\u043D\\u043E\\u0432\\u043E\\u0435 \\u0432\\u0440\\u0435\\u043C\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              backgroundColor: seee ? 'red' : '',\n              color: seee ? \"white\" : \"\"\n            },\n            children: timeTPlan\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-around'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: orderRole\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'grid',\n      gridTemplateColumns: '100px auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: '1fr 1fr 1fr'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-around'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u0410\\u043A\\u0442\\u0443\\u0430\\u043B\\u044C\\u043D\\u043E\\u0435 \\u0432\\u0435\\u0440\\u043C\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            backgroundColor: bad ? 'red' : '',\n            color: bad ? \"white\" : \"\"\n          },\n          children: timeTActual\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: timePeriod\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-around'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u041F\\u043B\\u0430\\u043D\\u043E\\u0432\\u043E\\u0435 \\u0432\\u0440\\u0435\\u043C\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            backgroundColor: bad ? 'red' : '',\n            color: bad ? \"white\" : \"\"\n          },\n          children: timeTPlan\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-around'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u0421\\u0440\\u043E\\u043A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            backgroundColor: bad ? 'red' : '',\n            color: bad ? \"white\" : \"\"\n          },\n          children: moment(limitation).format()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-around'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u041F\\u0440\\u043E\\u0433\\u043D\\u043E\\u0437\\u0438\\u0440\\u0443\\u0435\\u043C\\u043E\\u0435 \\u0432\\u0440\\u0435\\u043C\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: timeFuture\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: orderRole\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 338,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CustomizedAccordiongsHeaderNewAlgoritm, \"51fe8BlNVoSafnTVDspei5mrxJY=\");\n\n_c = CustomizedAccordiongsHeaderNewAlgoritm;\nexport default CustomizedAccordiongsHeaderNewAlgoritm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomizedAccordiongsHeaderNewAlgoritm\");","map":{"version":3,"sources":["/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/CustomizedAccordiongsHeaderNewAlgoritm.tsx"],"names":["moment","React","useState","PlayArrowIcon","ArchiveIcon","StopIcon","WorkIcon","ip","URL","CustomizedAccordiongsHeaderNewAlgoritm","props","order","setOrder","data","bad","setBad","textPeriod","setTextPeriod","useEffect","name","tActual","tPlan","tFuture","tStop","tStart","limitation","timeTActual","unix","utc","format","timeTPlan","ConvertPeriodToString","timePeriod","list","split","text","t","timeFuture","dateStop","Date","dateStart","tt","getTime","dd","timeArchive","console","log","orderRole","color","seee","getSeconds","display","gridTemplateColumns","justifyContent","backgroundColor"],"mappings":"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","sourcesContent":["import moment from 'moment';\nimport React,{useState} from 'react'\nimport IDataOrder from './Data/IDataOrder';\n\nimport PauseIcon from '@material-ui/icons/Pause';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport ArchiveIcon from '@material-ui/icons/Archive';\nimport StopIcon from '@material-ui/icons/Stop';\nimport WorkIcon from '@material-ui/icons/Work';\n\nimport { IconButton } from '@material-ui/core';\n\nimport { useActionOrders } from '../hooks/useActionOrders';\nimport { useTypedSelector } from '../hooks/leftMenuSelector';\nimport usePrevious from '../hooks/usePrevious';\n\n\nimport ip from '../global'\nimport Order_view from './Data/IDataOrder/IDataOrder';\nlet URL = 'ws://'+ip+':5001/wsItem';\n\ninterface IDataHeader{\n    name?: string,\n    TActual: number,\n    TPlan: number\n}\n\n\n\nconst CustomizedAccordiongsHeaderNewAlgoritm = (props:{data: Order_view})  => \n{\n    const [order, setOrder] = useState<Order_view>(props.data); //props.data\n\n    const [bad,setBad] = useState(false);\n    const [textPeriod,setTextPeriod] = useState(\"\");\n\n\n    React.useEffect(() => {\n        setOrder(props.data);\n    }, [props.data]);\n\n\n  \n\n    //const {orders, loading} = useTypedSelector(state => state.orders);\n    //const {updateInfoOrder} = useActionOrders()\n\n    //const prevOrder = usePrevious(order) as IDataOrder | undefined;\n\n  /* React.useEffect(() => {\n        const timer = setTimeout(() => updateInfoOrder(order as IDataOrder), 1000); \n        return () => {\n          clearTimeout(timer);\n        };  \n    })*/\n    \n\n  /* React.useEffect(() => {\n        if(prevOrder != undefined)\n        {\n            if(prevOrder.tActual  != order.tActual)\n            {\n                setOrder(props.data)\n            }\n        }\n    },[props.data])*/\n\n   /* console.log(prevOrder, props.data)\n    if(prevOrder != undefined)\n    {\n           \n     }*/\n\n///\n\n/*\n    const socket = React.useRef(null)  as any;\n    const [reconnect, setRecconect] = React.useState(false);\n  \n      React.useEffect(() => {\n\t\tconsole.log(\"Set socket after order= \", socket.current);\n\t\tif (!socket.current || reconnect === false) {\n\t\t\tconsole.log(\"Set socket = \", socket.current);\n\t\t\tsocket.current = new WebSocket(URL) ;\n\t\t\tsocket.current.onmessage = (e: any) => {\n\t\t\t\t\n               \n\t\t\t\tconst OrdersFromServer = JSON.parse(e.data) as IDataOrder;  \n\t\t\t\t//console.log(\"e\", OrdersFromServer);\n                //console.log(\"e order\", order);\n\t\t\t\tsetOrder(OrdersFromServer);\n\t\t\t};\n\n\t\t\tsocket.current.onopen = () => {\n\t\t\t\t// on connecting, do nothing but log it to the console\n\t\t\t\tconsole.log('connected')\n\t\t\t\tsocket.current.send(JSON.stringify({ id: props.data.id}));\n\t\t\t}\n\n\t\t\t\n\n\t\t\tsocket.current.onerror = (e : any) => {\n\t\t\t\tconsole.log(\"eror\", e.data);\n        console.log(\"CONNECTION CLOSED\", e.data);\n\t\t\t\tsocket.current.close(1000, \"\");\n\n        setRecconect(true);\n\t\t\t};\n\n\t\t\tsocket.current.onclose = (e : any)=>{\n\t\t\t\tconsole.log(\"CONNECTION CLOSED\", e.data);\n\t\t\t\tsocket.current.close(1000, \"\");\n\n\t\t\t\tsetRecconect(true);\n\t\t\t}\n\t\t}\n\t\treturn () => {\n\t\t  if (socket.current) {\n\t\t\tsocket.current.close(1000, \"\");\n\t\t  }\n\t\t};\n\t  }, [socket,reconnect]);\n\n\n      if(order === null || order === undefined)\n      {\n          return (\n             <p>Не нашел</p>\n          )\n      }\n      */\n\n      //console.log(\"rerender Order = \", order?.id)\n\n\n    /* if(order?.tActual  != props.data.tActual)\n     {\n         setOrder(props.data)\n     }*/\n\n   \n   \n    const {\n        name,\n        tActual,\n        tPlan,\n        tFuture,\n        tStop,\n        tStart,\n        limitation} = order as Order_view;\n  \n\n    \n\n    let timeTActual = moment.unix(tActual).utc().format('H:m:s')\n    let timeTPlan = moment.unix(tPlan).utc().format('H:m:s')\n    \n\n\n    const ConvertPeriodToString = (timePeriod: any)=>\n    {\n        var list = timePeriod.split(' ')\n\n        let text = timePeriod;\n        //console.log(list);\n\n        if(list[0] === 'in')\n        {\n\n\n            if(list[1] === 'a')\n            {\n                text = \"Отставание на несколько сукунд\"\n                if(list[2] === 'minute')\n                {\n                    text = \"Отставание на 1 м\"\n                }\n                \n            }\n            else\n            {\n                let t =list[1];\n                text = \"Отставание на \"+ t\n\n                switch(list[2])\n                {\n                    case \"hours\": \n                        text += \" ч\"\n                    break;\n                    case \"minutes\": \n                        text += \" м\"\n                    break;\n                    \n                }\n            }\n           // console.log(text)\n        }\n        else\n        {\n            if(list[0] === 'a')\n            {\n                text = \"В запасе много времени\"\n                if(list[2] === 'minute')\n                {\n                    text = \"Отставание на 1 м\"\n                }\n                \n            }\n            else\n            {\n                text = \"В запасе \" + list[0];\n                switch(list[1])\n                {\n                    case \"hours\": \n                        text += \" ч\"\n                    break;\n                    case \"minutes\": \n                        text += \" м\"\n                    break;\n                    \n                }\n            }\n           \n        }\n\n        if(textPeriod != text)\n        {\n            setTextPeriod(text);\n        }\n       \n    }\n\n  //var diff = moment(\"23:07\").unix() - moment(\"22:07\").unix();\n  \n  let timePeriod = '';\n  let timeFuture = moment.unix(tFuture).utc().format('H:m:s');\n  let text = '';\n\n\n  let dateStop: Date = new Date(tStop);  \n  let dateStart: Date = new Date(tStart);  \n\n  //console.log(\"tStop =\",dateStop);\n  //console.log(\"tStart =\",dateStart);\n\n  let tt = dateStop.getTime() - dateStart.getTime();\n\n /* if(tt < 0)\n  {\n      tt = dateStart.getTime() - dateStop.getTime();\n  }*/\n  \n  let dd: Date = new Date(tt);\n\n  let timeArchive =  moment(dd).utc().format('H:m:s');//moment.unix( (dateStop.getTime()  - dateStart.getTime()) ).utc().format('H:m:s');\n  if(tPlan - tActual  === 0)\n  {\n    timePeriod  = moment.unix(tPlan-tActual).utc().format('H:m:s');\n    text = '';\n  }\n  else\n  {\n    if(tPlan - tActual > 0)\n    {\n           timePeriod   = moment.unix(tPlan-tActual).utc().format('H:m:s');\n           text = 'Осталось';\n    }\n    else\n    {\n          timePeriod   = moment.unix(tActual-tPlan).utc().format('H:m:s');\n          text = 'Отставание на';\n    }\n  }\n \n  \n\n// let timePeriod =  moment.unix(tPlan).from(moment.unix(tActual))   //ConvertPeriodToString( moment.unix(tActual).utc().from(moment.unix(tPlan).utc()) )\n\n  \n    if(tActual >= tPlan && bad === false ) //&& order.orderRole === 2 || order.orderRole === 3\n    {\n        setBad(true);\n    }\n\n    if(tActual < tPlan && bad)\n    {\n        console.log(tActual,tPlan);\n        setBad(false);\n    }\n\n\n    let orderRole;\n\n    switch(order.orderRole)\n    {\n        case 1:\n            orderRole = <PlayArrowIcon style={{color: 'gray'}}/>\n        break;\n        case 2:\n            orderRole =  <WorkIcon style={{color: 'orange'}}/>\n        break;\n        case 3:\n            orderRole =  <ArchiveIcon style={{color: 'green'}}/>\n        break;\n        case 4:\n            orderRole =  <StopIcon style={{color: 'red'}}/>\n        break;\n    }\n\n    \n    if(order.orderRole === 3)\n    {\n     \n\n        let seee = dd.getSeconds() >= tPlan\n        \n        return (\n            <div style={{display: 'grid', gridTemplateColumns: '100px auto',}}>\n                <p>{name}</p>\n                <div style={{display: 'grid', gridTemplateColumns: '1fr 1fr 1fr'}}>\n                    <div style={{display: 'flex', justifyContent:'space-around'}} >\n                        <p>Затраченоое время</p>\n                        <p style ={{backgroundColor: seee ? 'red': '', color: seee ? \"white\": \"\" }}>{timeArchive}</p>\n                    </div>\n                    <div style={{display: 'flex', justifyContent:'space-around'}} >\n                        <p>Плановое время</p>\n                        <p style ={{backgroundColor: seee ? 'red': '', color: seee ? \"white\": \"\" }}>{timeTPlan}</p>\n                    </div>\n                    <div style={{display: 'flex', justifyContent:'space-around'}} >\n                        <p>{orderRole}</p>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <div style={{display: 'grid', gridTemplateColumns: '100px auto',}}>\n                <p>{name}</p>\n                <div style={{display: 'grid', gridTemplateColumns: '1fr 1fr 1fr'}}>\n                    <div style={{display: 'flex', justifyContent:'space-around'}} >\n                        <p>Актуальное вермя</p>\n                        <p style ={{backgroundColor: bad ? 'red': '', color: bad ? \"white\": \"\" }}>{timeTActual}</p>\n                        <p>{text}</p>\n                        <p>{timePeriod}</p>\n                    </div>\n                    <div style={{display: 'flex', justifyContent:'space-around'}} >\n                        <p>Плановое время</p>\n                        <p style ={{backgroundColor: bad ? 'red': '', color: bad ? \"white\": \"\" }}>{timeTPlan}</p>\n                    </div>\n                    <div style={{display: 'flex', justifyContent:'space-around'}} >\n                        <p>Срок</p>\n                        <p style ={{backgroundColor: bad ? 'red': '', color: bad ? \"white\": \"\" }}>{moment(limitation).format()}</p>\n                    </div>\n                    <div style={{display: 'flex', justifyContent:'space-around'}} >\n                        <p>Прогнозируемое время</p>\n                        <p>{timeFuture}</p>\n                        <p>{orderRole}</p>\n                    </div>\n                </div>\n        </div>\n    )\n}\n\n\nexport default CustomizedAccordiongsHeaderNewAlgoritm;"]},"metadata":{},"sourceType":"module"}