{"ast":null,"code":"var _jsxFileName = \"/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Card/Triangle.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\"; //import styled from 'styled-components'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Triangle = props => {\n  _s();\n\n  let max = props.buff.max || 100;\n  let height = 200;\n  let width = 200;\n  let min = props.buff.minHold || 1;\n  const [value, setValue] = useState(0);\n\n  const findPoint = (percent, x, y) => {\n    let H_pointPx = y * percent / 100; // Нашли сколько же пикселей занимает по высоте наши проценты\n\n    let pointPx = H_pointPx; // находим точку по высоте если считать снизу\n\n    return findPointSin(pointPx, x / 2, y); // находим длину по X\n  };\n\n  const findPointSin = (b, a1, b1) => {\n    return b * a1 / b1;\n  };\n\n  const ValueToPercent = value => {\n    let percent = value * 100 / max;\n    return percent;\n  };\n\n  const returnStr = () => {\n    let newHeight = height;\n    let x = width;\n    let y = newHeight - 20; //let y = this.state.height\n\n    let percent = ValueToPercent(value);\n    let point_Y = y - y * percent / 100;\n    let point_X = findPoint(percent, x, y);\n    let percentByze = 10;\n    let percentByze_new = percentByze * percent / 100;\n    percentByze -= percentByze_new;\n    let byze = point_Y + y * percentByze / 100; // плюс 10%\n\n    let point_Y_2 = point_Y;\n    let point_X_2 = x - point_X;\n    return \"M0,\" + y + \" \" + point_X + \",\" + point_Y + \" Q \" + x / 2 + \",\" + byze + \" \" + point_X_2 + \",\" + point_Y_2 + \" \" + point_X_2 + \",\" + point_Y_2 + \" \" + x + \",\" + y + \" Q 50,100 0,\" + y + \" 0,\" + y;\n  };\n\n  const handleOnMouseMove = () => {//console.log(\"Trignale =\",this.state.percent)\n    //this.setState({left: this.state.left+1})\n  };\n\n  useEffect(() => {\n    setValue(props.buff.value);\n    /*const id = setInterval(() => {\n         if(value > max)\n        {\n            setValue(0);\n        }\n        else\n        {\n            setValue(value+1);\n        }\n        \n    }, 100);\n    return () => clearInterval(id);*/\n  }, [value]);\n  let viewBox = \"0 0 \" + width + \" \" + height;\n  let pointsPolygon = \"M0,\" + height + \" \" + width / 2 + \",0 \" + width + \" \" + height;\n  let D = returnStr();\n  let minPrecent = ValueToPercent(min);\n  let color = \"green\";\n\n  if (value === 0) {\n    color = \"lightgray\";\n  } else {\n    if (value < min) {\n      color = \"red\";\n    }\n  }\n\n  let changeText = value > max / 2 - max / 15;\n  let PxMin_X = findPoint(minPrecent, width, height); //let D_min = \"M0,\"+PxMin\n\n  let newHeight = height - 20;\n  pointsPolygon = \"M0,\" + newHeight + \" \" + width / 2 + \",0 \" + width + \" \" + newHeight + \" Q 50,100 0,\" + newHeight + \" 0,\" + newHeight;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onMouseMove: handleOnMouseMove,\n    style: {\n      position: 'relative',\n      display: 'flex',\n      justifyContent: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        position: 'absolute',\n        color: changeText ? 'white' : \"black\",\n        fontWeight: 600,\n        top: '50%'\n      },\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      width: width,\n      height: height,\n      viewBox: viewBox,\n      fill: \"none\",\n      stroke: \"#000000\",\n      strokeWidth: \"0.5\",\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      children: [/*#__PURE__*/_jsxDEV(\"path\", {\n        d: pointsPolygon,\n        fill: \"lightgray\",\n        stroke: \"lightgray\",\n        strokeWidth: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          d: D,\n          fill: color,\n          stroke: color\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 4\n  }, this);\n};\n\n_s(Triangle, \"3p80oanq5nnPEeG+rCwpE6vVIqY=\");\n\n_c = Triangle;\nexport default Triangle;\n\nvar _c;\n\n$RefreshReg$(_c, \"Triangle\");","map":{"version":3,"sources":["/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Card/Triangle.tsx"],"names":["React","useState","useEffect","Triangle","props","max","buff","height","width","min","minHold","value","setValue","findPoint","percent","x","y","H_pointPx","pointPx","findPointSin","b","a1","b1","ValueToPercent","returnStr","newHeight","point_Y","point_X","percentByze","percentByze_new","byze","point_Y_2","point_X_2","handleOnMouseMove","viewBox","pointsPolygon","D","minPrecent","color","changeText","PxMin_X","position","display","justifyContent","fontWeight","top"],"mappings":"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","sourcesContent":["import { ExecException } from \"child_process\";\nimport React from \"react\";\nimport { useState,useEffect } from \"react\";\n//import styled from 'styled-components'\n\nimport IDataBufferVSM from \"../Data/IDataBufferVSM\";\n\n\nconst Triangle = (props: {\n    buff: IDataBufferVSM\n}) =>\n{\n    let max = props.buff.max || 100;\n    let height = 200;\n    let width = 200;\n    let min = props.buff.minHold || 1;\n    \n    const [value,setValue] = useState(0)\n\n    const findPoint =(percent : number,x: number,y: number) : number=>\n    {\n        let H_pointPx = (y*percent)/100 // Нашли сколько же пикселей занимает по высоте наши проценты\n        let pointPx = H_pointPx // находим точку по высоте если считать снизу\n\n        return findPointSin(pointPx,x/2,y) // находим длину по X\n    }\n\n    const findPointSin = (b : number,a1: number,b1: number  ) : number =>\n    {\n        return (b*a1)/b1\n    }\n\n    const  ValueToPercent = (value: number) : number =>\n    {\n      let percent = (value*100)/max\n      return percent\n    }\n\n\n    const returnStr=()=>\n    {\n        let newHeight = height\n\n        let x = width;\n        let y = newHeight-20; //let y = this.state.height\n        let percent = ValueToPercent(value)\n        let point_Y = y - (y*percent)/100;\n        let point_X = findPoint(percent,x,y)\n        let percentByze = 10;\n\n        let percentByze_new = percentByze*percent/100\n        \n        percentByze -=percentByze_new;\t\n\n        let byze = point_Y+((y*percentByze)/100) // плюс 10%\n        \n\n        let point_Y_2 = point_Y\n        let point_X_2 = x - point_X\n\n        return (\"M0,\"+y+\" \"+point_X+\",\"+point_Y+\" Q \"+x/2+\",\"+byze+\" \"+point_X_2+\",\"+point_Y_2+\" \"+point_X_2+\",\"+point_Y_2+\" \"+x+\",\"+y+\" Q 50,100 0,\"+y+\" 0,\"+y)\n    }\n\n    const handleOnMouseMove = ()=>{\n        //console.log(\"Trignale =\",this.state.percent)\n        //this.setState({left: this.state.left+1})\n    }\n\n      useEffect(() => {\n\n        setValue(props.buff.value as number);\n        /*const id = setInterval(() => {\n\n            if(value > max)\n            {\n                setValue(0);\n            }\n            else\n            {\n                setValue(value+1);\n            }\n            \n        }, 100);\n        return () => clearInterval(id);*/\n      }, [value]);\n\n      \n\n\t\tlet viewBox = \"0 0 \"+width+\" \"+height;\n\t\tlet pointsPolygon = \"M0,\"+height+\" \"+width/2+\",0 \"+width+\" \"+height;\n\t\tlet D = returnStr()\n\n\t\tlet minPrecent = ValueToPercent(min)\n\n\t\tlet color = \"green\"\n\t\t\n\t\tif(value === 0)\n\t\t{\n\t\t\tcolor = \"lightgray\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(value < min)\n\t\t\t{\n\t\t\t\tcolor = \"red\"\n\t\t\t}\n\t\t}\n\n\t\tlet changeText = value > (max/2-max/15)\n\n\n\n\t\tlet PxMin_X = findPoint(minPrecent,width,height) \n\t\t//let D_min = \"M0,\"+PxMin\n\t\tlet newHeight = height-20\n\t\tpointsPolygon = \"M0,\"+newHeight+\" \"+width/2+\",0 \"+width+\" \"+newHeight+\" Q 50,100 0,\"+newHeight+\" 0,\"+newHeight;\n\t\n        return (\n\t\t\t<div onMouseMove={handleOnMouseMove} style={{position: 'relative',display: 'flex',justifyContent:'center'}}>\n\t\t\t\t<p style={{position: 'absolute',\n\t\t\t\t\tcolor: changeText ? 'white' : \"black\",\n\t\t\t\t\tfontWeight: 600,\n\t\t\t\t\ttop: '50%'}}>\n\t\t\t\t\t{value}\n\t\t\t\t</p>\n\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" width={width} height={height} viewBox={viewBox} fill=\"none\" stroke=\"#000000\" strokeWidth=\"0.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n\t\t\t\t  <path d={pointsPolygon} fill=\"lightgray\" stroke=\"lightgray\" strokeWidth=\"1\"></path>\n\t\t\t\t  <g><path d={D} fill={color} stroke={color}></path></g>\n\t\t\t\t</svg>\n\t\t\t</div>\n        )\n}\n\nexport default Triangle;"]},"metadata":{},"sourceType":"module"}