{"ast":null,"code":"var _jsxFileName = \"/Users/sergeismogliuk/Documents/Project/Project_node/Diplom/react-diplom/react-diplom/src/components/Container/LeftContent/LeftContent.js\";\nimport React from \"react\";\nimport LeftContentStyle from \"./LeftContentStyle\";\nimport LeftList from \"./LeftList/LeftList\";\nimport LeftListActive from \"./LeftListActive/LeftListActive\";\nimport { ListActive } from \"../../../Global\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LeftContent extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false\n    };\n  }\n\n  _setActiveList(clonedList, i) {\n    if (ListActive !== undefined) {\n      let index = ListActive.indexOf(clonedList[i]);\n\n      if (index === -1) {\n        if (clonedList[i].isChecked) {\n          ListActive.push(clonedList[i]);\n        }\n      } else {\n        if (clonedList[i].isChecked) {\n          ListActive[index].isChecked = clonedList[i].isChecked;\n        } else {\n          ListActive.splice(index, 1);\n        }\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(LeftContentStyle, {\n      children: [/*#__PURE__*/_jsxDEV(LeftList, {\n        ListActive: ListActive,\n        _setActiveList: _setActiveList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(LeftListActive, {\n        ListActive: ListActive\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default LeftContent;","map":{"version":3,"sources":["/Users/sergeismogliuk/Documents/Project/Project_node/Diplom/react-diplom/react-diplom/src/components/Container/LeftContent/LeftContent.js"],"names":["React","LeftContentStyle","LeftList","LeftListActive","ListActive","LeftContent","PureComponent","constructor","props","state","error","isLoaded","_setActiveList","clonedList","i","undefined","index","indexOf","isChecked","push","splice","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AAEA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AAEA,SAASC,UAAT,QAA0B,iBAA1B;;;AAEA,MAAMC,WAAN,SAA0BL,KAAK,CAACM,aAAhC,CAA8C;AAC1CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAID;;AAGHC,EAAAA,cAAc,CAACC,UAAD,EAAYC,CAAZ,EACd;AAEE,QAAGV,UAAU,KAAKW,SAAlB,EACA;AACE,UAAIC,KAAK,GAAGZ,UAAU,CAACa,OAAX,CAAmBJ,UAAU,CAACC,CAAD,CAA7B,CAAZ;;AACA,UAAGE,KAAK,KAAK,CAAC,CAAd,EACA;AACE,YAAGH,UAAU,CAACC,CAAD,CAAV,CAAcI,SAAjB,EACA;AACEd,UAAAA,UAAU,CAACe,IAAX,CAAgBN,UAAU,CAACC,CAAD,CAA1B;AACD;AACF,OAND,MAQA;AACE,YAAGD,UAAU,CAACC,CAAD,CAAV,CAAcI,SAAjB,EACA;AACEd,UAAAA,UAAU,CAACY,KAAD,CAAV,CAAkBE,SAAlB,GAA8BL,UAAU,CAACC,CAAD,CAAV,CAAcI,SAA5C;AACD,SAHD,MAKA;AACId,UAAAA,UAAU,CAACgB,MAAX,CAAkBJ,KAAlB,EAAyB,CAAzB;AACH;AACF;AACF;AAEF;;AAGCK,EAAAA,MAAM,GAAG;AACP,wBACI,QAAC,gBAAD;AAAA,8BACI,QAAC,QAAD;AAAU,QAAA,UAAU,EAAEjB,UAAtB;AAAkC,QAAA,cAAc,EAAEQ;AAAlD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,cAAD;AAAgB,QAAA,UAAU,EAAER;AAA5B;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMD;;AA9CuC;;AAkD9C,eAAeC,WAAf","sourcesContent":["import React from \"react\";\nimport LeftContentStyle from \"./LeftContentStyle\"\n\nimport LeftList from \"./LeftList/LeftList\"\nimport LeftListActive from \"./LeftListActive/LeftListActive\"\n\nimport  {ListActive} from \"../../../Global\"\n\nclass LeftContent extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n          error: null,\n          isLoaded: false,\n        };\n      }\n\n\n    _setActiveList(clonedList,i)\n    {\n     \n      if(ListActive !== undefined)\n      {\n        let index = ListActive.indexOf(clonedList[i])\n        if(index === -1)\n        {\n          if(clonedList[i].isChecked)\n          {\n            ListActive.push(clonedList[i])\n          }\n        }\n        else\n        {\n          if(clonedList[i].isChecked)\n          {\n            ListActive[index].isChecked = clonedList[i].isChecked\n          }\n          else\n          {\n              ListActive.splice(index, 1);\n          }\n        }\n      }\n      \n    }\n  \n\n      render() {\n        return (\n            <LeftContentStyle>\n                <LeftList ListActive={ListActive} _setActiveList={_setActiveList}/>\n                <LeftListActive ListActive={ListActive}/>\n            </LeftContentStyle>\n        )\n      }\n}\n\n\nexport default LeftContent;"]},"metadata":{},"sourceType":"module"}