{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  productions: [],\n  loading: true,\n  error: null\n};\nconst useProductionReducer = createSlice({\n  name: 'productions',\n  initialState,\n  reducers: {\n    fetch_productions(state) {\n      state.loading = true;\n    },\n\n    fetch_productions_success(state, action) {\n      state.productions = action.payload;\n      state.loading = false;\n    },\n\n    fetch_productions_error(state, action) {\n      state.loading = false;\n      state.error = action.payload;\n    },\n\n    fetch_productions_add(state, action) {\n      state.productions.push(action.payload);\n    }\n\n  }\n});\nexport default useProductionReducer.reducer;\nexport const {\n  fetch_productions,\n  fetch_productions_success,\n  fetch_productions_error,\n  fetch_productions_add\n} = useProductionReducer.actions;","map":{"version":3,"sources":["/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/store/reducers/useProductionReducer.tsx"],"names":["createSlice","initialState","productions","loading","error","useProductionReducer","name","reducers","fetch_productions","state","fetch_productions_success","action","payload","fetch_productions_error","fetch_productions_add","push","reducer","actions"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AAIA,MAAMC,YAA+B,GAAE;AACnCC,EAAAA,WAAW,EAAE,EADsB;AAEnCC,EAAAA,OAAO,EAAE,IAF0B;AAGnCC,EAAAA,KAAK,EAAE;AAH4B,CAAvC;AAMA,MAAMC,oBAAoB,GAAGL,WAAW,CAAC;AACrCM,EAAAA,IAAI,EAAE,aAD+B;AAErCL,EAAAA,YAFqC;AAGrCM,EAAAA,QAAQ,EAAE;AACNC,IAAAA,iBAAiB,CAACC,KAAD,EAAQ;AACrBA,MAAAA,KAAK,CAACN,OAAN,GAAgB,IAAhB;AACH,KAHK;;AAINO,IAAAA,yBAAyB,CAACD,KAAD,EAAOE,MAAP,EAAe;AACpCF,MAAAA,KAAK,CAACP,WAAN,GAAoBS,MAAM,CAACC,OAA3B;AACAH,MAAAA,KAAK,CAACN,OAAN,GAAgB,KAAhB;AACH,KAPK;;AAQNU,IAAAA,uBAAuB,CAACJ,KAAD,EAAQE,MAAR,EAAgB;AACnCF,MAAAA,KAAK,CAACN,OAAN,GAAgB,KAAhB;AACAM,MAAAA,KAAK,CAACL,KAAN,GAAcO,MAAM,CAACC,OAArB;AACH,KAXK;;AAYNE,IAAAA,qBAAqB,CAACL,KAAD,EAAQE,MAAR,EAAe;AAChCF,MAAAA,KAAK,CAACP,WAAN,CAAkBa,IAAlB,CAAuBJ,MAAM,CAACC,OAA9B;AACH;;AAdK;AAH2B,CAAD,CAAxC;AAoBA,eAAeP,oBAAoB,CAACW,OAApC;AACA,OAAO,MAAM;AACTR,EAAAA,iBADS;AAETE,EAAAA,yBAFS;AAGTG,EAAAA,uBAHS;AAITC,EAAAA;AAJS,IAKTT,oBAAoB,CAACY,OALlB","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { useProductionType } from '../../type/useProductionType'\n\n\nconst initialState: useProductionType ={\n    productions: [],\n    loading: true,\n    error: null\n}\n\nconst useProductionReducer = createSlice({  \n    name: 'productions',  \n    initialState,  \n    reducers: {       \n        fetch_productions(state) {  \n            state.loading = true     \n        },\n        fetch_productions_success(state,action) {      \n            state.productions = action.payload;\n            state.loading = false; \n        },     \n        fetch_productions_error(state, action) {     \n            state.loading = false    \n            state.error = action.payload    \n        },\n        fetch_productions_add(state, action){\n            state.productions.push(action.payload);\n        }  \n    },\n})\nexport default useProductionReducer.reducer\nexport const { \n    fetch_productions, \n    fetch_productions_success, \n    fetch_productions_error,\n    fetch_productions_add \n} = useProductionReducer.actions"]},"metadata":{},"sourceType":"module"}