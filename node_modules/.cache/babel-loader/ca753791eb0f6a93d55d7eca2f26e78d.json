{"ast":null,"code":"var _jsxFileName = \"/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Card/ViewOrderCard.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport ViewCard from './ViewCard';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { Box } from '@material-ui/system';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport { useActionCardVSM } from '../../hooks/useActionCardVSM';\nimport { useTypedSelector } from '../../hooks/leftMenuSelector';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n/*\ninterface productionCardVSM{\n    name: string,\n    productions: IDataCardVSM[]\n}\ninterface IDataCardProduct{\n    cardVSMs: productionCardVSM[]\n}*/\nconst ViewOrderCard = props => {\n  _s();\n\n  const [BDitems, setBDItem] = useState();\n  const {\n    cardVSMs,\n    loading\n  } = useTypedSelector(state => state.cardVSM);\n  const {\n    cardVSMLoading\n  } = useActionCardVSM();\n  const [card, setCard] = useState(cardVSMs);\n  useEffect(() => {\n    if (cardVSMs.length <= 0) {\n      cardVSMLoading(props.order);\n    }\n  }, [cardVSMs]); //orders\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this);\n  }\n\n  let listProduct = cardVSMs.map((item, index) => {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        marginBottom: '150px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        action: /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"settings\",\n          children: /*#__PURE__*/_jsxDEV(SettingsIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this),\n        title: item.name,\n        sx: {\n          fontWeight: 'bold',\n          color: 'white',\n          backgroundColor: '#575757'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        sx: {\n          backgroundColor: 'rgba(0, 0, 0, .03)'\n        },\n        children: /*#__PURE__*/_jsxDEV(ViewCard, {\n          sections: item.sections\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: listProduct\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 8\n  }, this);\n};\n\n_s(ViewOrderCard, \"SOlOafEIIs+h5thEl/EZ2R76dcQ=\", false, function () {\n  return [useTypedSelector, useActionCardVSM];\n});\n\n_c = ViewOrderCard;\nexport default ViewOrderCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewOrderCard\");","map":{"version":3,"sources":["/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Card/ViewOrderCard.tsx"],"names":["React","useEffect","useState","ViewCard","CircularProgress","Box","Card","CardHeader","CardContent","IconButton","SettingsIcon","useActionCardVSM","useTypedSelector","ViewOrderCard","props","BDitems","setBDItem","cardVSMs","loading","state","cardVSM","cardVSMLoading","card","setCard","length","order","display","justifyContent","listProduct","map","item","index","marginBottom","name","fontWeight","color","backgroundColor","sections"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAyBC,QAAzB,QAAwC,OAAxC;AAKA,OAAOC,QAAP,MAAqB,YAArB;AAEA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,SAASC,GAAT,QAAoB,qBAApB;AAGA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AAEA,OAAOC,UAAP,MAAuB,8BAAvB;AAEA,OAAOC,YAAP,MAAyB,6BAAzB;AAOA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,SAASC,gBAAT,QAAiC,8BAAjC;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,MAAMC,aAAa,GAAKC,KAAD,IAAgC;AAAA;;AACnD,QAAM,CAACC,OAAD,EAAUC,SAAV,IAAuBd,QAAQ,EAArC;AAEA,QAAM;AAACe,IAAAA,QAAD;AAAWC,IAAAA;AAAX,MAAsBN,gBAAgB,CAACO,KAAK,IAAIA,KAAK,CAACC,OAAhB,CAA5C;AACA,QAAM;AAACC,IAAAA;AAAD,MAAmBV,gBAAgB,EAAzC;AAEA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBrB,QAAQ,CAACe,QAAD,CAAhC;AAGJhB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGgB,QAAQ,CAACO,MAAT,IAAmB,CAAtB,EACA;AACIH,MAAAA,cAAc,CAACP,KAAK,CAACW,KAAP,CAAd;AACH;AACJ,GALQ,EAKP,CAACR,QAAD,CALO,CAAT,CATuD,CAczC;;AAId,MAAGC,OAAH,EACA;AACI,wBACI,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE;AAAEQ,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,cAAc,EAAE;AAAnC,OAAT;AAAA,6BACE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAGG,MAAIC,WAAW,GAAGX,QAAQ,CAACY,GAAT,CAAa,CAACC,IAAD,EAA6BC,KAA7B,KAA6C;AAGxE,wBACI,QAAC,IAAD;AAAkB,MAAA,EAAE,EAAE;AAACC,QAAAA,YAAY,EAAE;AAAf,OAAtB;AAAA,8BACI,QAAC,UAAD;AACI,QAAA,MAAM,eACF,QAAC,UAAD;AAAY,wBAAW,UAAvB;AAAA,iCACI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFR;AAMI,QAAA,KAAK,EAAEF,IAAI,CAACG,IANhB;AAOI,QAAA,EAAE,EAAE;AAACC,UAAAA,UAAU,EAAE,MAAb;AAAoBC,UAAAA,KAAK,EAAE,OAA3B;AAAoCC,UAAAA,eAAe,EAAE;AAArD;AAPR;AAAA;AAAA;AAAA;AAAA,cADJ,eAWI,QAAC,WAAD;AAAa,QAAA,EAAE,EAAE;AAACA,UAAAA,eAAe,EAAE;AAAlB,SAAjB;AAAA,+BACI,QAAC,QAAD;AAAU,UAAA,QAAQ,EAAEN,IAAI,CAACO;AAAzB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA,OAAWN,KAAX;AAAA;AAAA;AAAA;AAAA,YADJ;AAkBH,GArBiB,CAAlB;AAuBA,sBACG;AAAA,cACKH;AADL;AAAA;AAAA;AAAA;AAAA,UADH;AAMH,CAzDD;;GAAMf,a;UAG0BD,gB,EACHD,gB;;;KAJvBE,a;AA4DN,eAAeA,aAAf","sourcesContent":["import React,{useEffect, useState} from 'react'\n\nimport IDataCardSection from '../Data/IDataCardSection'\nimport IDataOrderItem from '../Data/IDataOrderItem'\nimport Divider from '@material-ui/core/Divider';\nimport ViewCard from './ViewCard'\n\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { Box } from '@material-ui/system';\n\n\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardContent from '@material-ui/core/CardContent'\n\nimport IconButton from '@material-ui/core/IconButton'\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport SettingsIcon from '@material-ui/icons/Settings';\n\nimport IDataVSM from '../Data/IDataVSM'\nimport IDataProduction from '../Data/IDataProduction';\nimport IDataCardVSM from '../Data/IDataCardVSM';\nimport { useCardVSMActionType, useProductionCardVSM } from '../../type/useCardVSMType';\n\nimport { useActionCardVSM } from '../../hooks/useActionCardVSM';\nimport { useTypedSelector } from '../../hooks/leftMenuSelector';\nimport IDataOrder from '../Data/IDataOrder';\n\n/*\ninterface productionCardVSM{\n    name: string,\n    productions: IDataCardVSM[]\n}\ninterface IDataCardProduct{\n    cardVSMs: productionCardVSM[]\n}*/\n\n\nconst ViewOrderCard =  (props: {order: IDataOrder}) => {\n    const [BDitems, setBDItem] = useState<IDataOrderItem[]>();\n\n    const {cardVSMs, loading} = useTypedSelector(state => state.cardVSM);\n    const {cardVSMLoading} = useActionCardVSM()\n\n    const [card, setCard] = useState(cardVSMs);\n\n    \nuseEffect(() => {\n    if(cardVSMs.length <= 0 )\n    {\n        cardVSMLoading(props.order);\n    }\n},[cardVSMs]) //orders\n\n\n\nif(loading)\n{\n    return (\n        <Box sx={{ display: 'flex', justifyContent: 'center' }}>\n          <CircularProgress />\n        </Box>\n    )\n}\n\n\n    let listProduct = cardVSMs.map((item: useProductionCardVSM, index: number)=>{\n        \n\n        return(\n            <Card key={index} sx={{marginBottom: '150px'}}>\n                <CardHeader\n                    action={\n                        <IconButton aria-label=\"settings\">\n                            <SettingsIcon />\n                        </IconButton>\n                    }\n                    title={item.name}\n                    sx={{fontWeight: 'bold',color: 'white', backgroundColor: '#575757'}}\n                >\n                </CardHeader>\n                <CardContent sx={{backgroundColor: 'rgba(0, 0, 0, .03)'}}>\n                    <ViewCard sections={item.sections}/> \n               </CardContent>\n            </Card>\n\n        )\n    })\n\n    return(\n       <div>\n           {listProduct}\n       </div>\n    )\n    \n}\n\n\nexport default ViewOrderCard;"]},"metadata":{},"sourceType":"module"}