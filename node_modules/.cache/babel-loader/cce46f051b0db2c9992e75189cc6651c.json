{"ast":null,"code":"var _jsxFileName = \"/Users/sergeismogliuk/Documents/Project/Project_node/Diplom/react-diplom/react-diplom/src/components/Container/MidleContainer/MidleContent/MidleContent.js\";\nimport React from \"react\";\nimport MidleContentStyle from \"./MidleContentStyle\";\nimport DiagramViewBox from \"../../../Diagrams/DiagramViewBox\"; //import  {ListActiveConxtext} from \"../../../../ListActiveContextProvider\"\n\nimport Triangle from \"../../../SVG/Triangle/Triangle\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar savePositionOnMouseDown = {\n  x: 0,\n  y: 0\n};\nvar difference = {\n  x: 0,\n  y: 0\n};\nvar mouseZoomPosition = {\n  x: 0,\n  y: 0\n};\nvar pressTimer;\n\nclass MidleContent extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this._showCard = () => {\n      if (this.context.ListActive.length === 0) {\n        return /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"MidleContent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 20\n        }, this);\n      }\n\n      let object = this.context.ListActive.find(item => item.isSelected === true);\n      console.log(\"this._showCard(context)\", this.context);\n      return /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: object.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 18\n      }, this);\n    };\n\n    this.getCoords = elem => {\n      let box = elem.getBoundingClientRect();\n      console.log(this.MidleContentStyle.pageYOffset);\n      return {\n        top: Math.round(box.top),\n        //pageYOffset\n        left: Math.round(box.left) //pageXOffset\n\n      };\n    };\n\n    this.handleOnWhell = e => {\n      //let count = (e.deltaY/17)\n      let target = this.MidleContentStyle; //e.target.closest('....'); // Здесь что-то уникальное, что может указать на род. блок\n\n      let targetCoords = target.getBoundingClientRect();\n      let originX;\n      let originY;\n      let scale = this.state.scale;\n      const wheel = e.deltaY < 0 ? 1 : -1; //e.preventDefault()\n      // Compute zoom factor.\n\n      let zoom; // = Math.exp(wheel * this.state.scale);\n\n      console.log(\"wheel = \", wheel);\n\n      if (wheel > 0) {\n        zoom = scale - 0.05;\n\n        if (zoom < 0.2) {\n          zoom = 0.2; //originX = 0;\n          //originY = 0;\n        } else {\n          originX = (e.clientX - targetCoords.left) / scale;\n          originY = (e.clientY - targetCoords.top) / scale;\n        }\n      } else {\n        zoom = scale + 0.05;\n        originX = (e.clientX - targetCoords.left) / scale;\n        originY = (e.clientY - targetCoords.top) / scale;\n      }\n\n      this.setState({\n        scale: zoom,\n        originX: mouseZoomPosition.x,\n        originY: mouseZoomPosition.y\n      }); //,x: e.screenX, y: e.screenY\n\n      /* switch (e.deltaY > 0) {\n           case true:\n             console.log('positive',e.deltaY,count);\n             let plus = this.state.scale+0.05\n              this.setState({scale: zoom,originX: -originX, originY: -originY }) //,x: xCoord, y: yCoord\n             break;\n           default:\n             console.log('negative',e.deltaY,count);\n             count *=(-1)\n              let minus = this.state.scale-0.05\n             if(minus < 0 )\n             {\n               minus = 0\n             }\n             \n         }*/\n    };\n\n    this.handleOnMouseMove = e => {\n      let target = this.MidleContentStyle;\n      let position = this.getTransformedPoint(target, e.clientX, e.clientY, this.state.scale); //let difference = 0;\n\n      switch (e.button) {\n        case 1:\n          difference = {\n            x: savePositionOnMouseDown.x - position.x,\n            y: savePositionOnMouseDown.y - position.y\n          }; //console.log(\"handleOnMouseMove = \",difference,e,e.buttons)\n\n          console.log(\"origin = \", savePositionOnMouseDown, \" newPosition = \", position, \" dif = \", difference, \"Scale = \", this.state.scale);\n          this.setState({\n            DragPostion: {\n              x: this.state.DragPostion.x - difference.x,\n              y: this.state.DragPostion.y - difference.y\n            }\n          });\n          break;\n\n        default:\n          this.setState({//originX: position.x ,\n            // originY: position.y \n          });\n          break;\n      }\n\n      mouseZoomPosition = {\n        x: position.x,\n        y: position.y\n      }; //console.log(target.getBoundingClientRect(),\"pos =\",position )\n      //this.setState({ mouseX: position.x, mouseY: position.y,originX: difference.x,originY: difference.y });\n    };\n\n    this.isMetaKey = e => {\n      return navigator.platform.match('Mac') ? e.metaKey : e.ctrlKey;\n    };\n\n    this.getTransformedPoint = (target, x, y, scale) => {\n      let targetCoords = target.getBoundingClientRect();\n      const transformedX = (x - targetCoords.left) / scale; //target.firstChild.scrollLeft\n\n      const transformedY = (y - targetCoords.top) / scale; //target.firstChild.scrollTop\n\n      return {\n        x: transformedX,\n        y: transformedY\n      };\n    };\n\n    this.handleOnClick = e => {\n      return;\n      let originX;\n      let originY;\n      let newX;\n      let newY;\n      let target = this.MidleContentStyle;\n      let position = this.getTransformedPoint(target, e.clientX, e.clientY, this.state.scale);\n      let targetCoords = this.DIV.getBoundingClientRect();\n      console.log(target.getBoundingClientRect(), targetCoords);\n      let position2 = {\n        x: (e.clientX - targetCoords.left) / this.state.scale,\n        y: (e.clientY - targetCoords.top) / this.state.scale\n      };\n      console.log(position, position2, {\n        x: e.clientX,\n        y: e.clientY\n      });\n      newX = position.x;\n      newY = position.y;\n      originX = position2.x; //*this.state.scale;\n\n      originY = position2.y; //*this.state.scale;\n\n      this.setState({\n        x: newX,\n        y: newY,\n        originX: originX,\n        originY: originY,\n        divX: originX,\n        divY: originY\n      }); //\n    };\n\n    this.handleMouseDown = e => {\n      switch (e.button) {\n        case 1:\n          let target = this.MidleContentStyle;\n          savePositionOnMouseDown = this.getTransformedPoint(target, e.clientX, e.clientY, this.state.scale);\n          console.log(\"handleMouseDown = \", savePositionOnMouseDown, e);\n          pressTimer = window.setTimeout(function () {\n            // your code here\n            longpress = true; //if run hold function, longpress is true\n          }, 1000);\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.handleMouseUp = e => {\n      console.log(\"handleMouseUp\");\n      console.log(\"click = \", e.button);\n\n      switch (e.button) {\n        case 1:\n          {\n            console.log(\"1 -= \", e.timeStamp);\n            break;\n          }\n      }\n    };\n\n    this.handleDoubleClick = e => {//console.log(\" handleDoubleClick click = \",e.button)\n    };\n\n    this.state = {\n      error: null,\n      isLoaded: false,\n      scale: 1,\n      x: 0,\n      y: 0,\n      originX: 0,\n      originY: 0,\n      DragPostion: {\n        x: 0,\n        y: 0\n      },\n      divX: 0,\n      divY: 0,\n      mouseX: 0,\n      mouseY: 0\n    };\n  }\n\n  //translate(\"+this.state.x+\"px,\"+this.state.y+\"px)\n  //transformOrigin:this.state.xScale+\"px \"+this.state.yScale+\"px\"\n  //transformOrigin:this.state.originX+\"px \"+this.state.originY+\"px\",\n  //  \"scale(\"+this.state.scale+\")\"\n  //overflow: \"auto\"\n  render() {\n    return /*#__PURE__*/_jsxDEV(MidleContentStyle, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"100%\",\n          height: \"100%\",\n          position: \"relative\",\n          overflow: \"hidden\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: DIV => {\n            this.DIV = DIV;\n          },\n          onDoubleClick: this.handleDoubleClick,\n          onClick: this.handleOnClick,\n          onMouseDown: this.handleMouseDown,\n          onMouseUp: this.handleMouseUp,\n          onMouseMove: this.handleOnMouseMove,\n          onWheel: this.handleOnWhell,\n          style: {\n            width: \"100%\",\n            height: \"100%\",\n            position: \"absolute\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: MidleContentStyle => {\n              this.MidleContentStyle = MidleContentStyle;\n            },\n            style: {\n              position: \"absolute\",\n              width: 1411 + \"px\",\n              height: 1100 + \"px\",\n              top: \"0px\",\n              left: \"0px\",\n              transformOrigin: this.state.originX + \"px \" + this.state.originY + \"px\",\n              //transformOrigin:\"0px 0px\",\n              transform: \"translate(\" + this.state.DragPostion.x + \"px, \" + this.state.DragPostion.y + \"px) scale(\" + this.state.scale + \")\",\n              pointerEvents: \"all\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: \"500px\",\n                top: \"0px\",\n                left: \"0px\",\n                pointerEvents: \"all\",\n                position: \"relative\",\n                boxShadow: \"rgba(0,0,0,0.2) 0px 3px 5px -1px,rgba(0,0,0,0.14) 0px 6px 10px 0px,rgba(0,0,0,0.12) 0px 1px 14px 0px\" //transform: \"translate(\"+this.state.originX+\"px, \"+this.state.originY+\"px) scale(\"+this.state.scale+\")\"\n\n              },\n              children: [/*#__PURE__*/_jsxDEV(Triangle, {\n                left: 200,\n                top: 200,\n                width: 100,\n                height: 100,\n                min: 50,\n                max: 100,\n                value: 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Triangle, {\n                left: 200,\n                top: 0,\n                width: 100,\n                height: 100,\n                min: 50,\n                max: 100,\n                value: 50\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                id: \"crosshair\",\n                src: \"https://interactive-examples.mdn.mozilla.net/media/examples/crosshair.svg\",\n                style: {\n                  backgroundColor: \"red\",\n                  position: \"absolute\",\n                  left: \"calc(\" + (this.state.originX - 12) + \"px)\",\n                  top: \"calc(\" + (this.state.originY - 12) + \"px)\",\n                  opacity: \"1\"\n                },\n                width: \"24px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              id: \"crosshair\",\n              src: \"https://interactive-examples.mdn.mozilla.net/media/examples/crosshair.svg\",\n              style: {\n                position: \"absolute\",\n                left: \"calc(\" + (this.state.originX - 12) + \"px)\",\n                top: \"calc(\" + (this.state.originY - 12) + \"px)\",\n                opacity: \"1\"\n              },\n              width: \"24px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              id: \"crosshair\",\n              src: \"https://interactive-examples.mdn.mozilla.net/media/examples/crosshair.svg\",\n              style: {\n                position: \"absolute\",\n                left: \"calc(\" + (this.state.mouseX - 12) + \"px)\",\n                top: \"calc(\" + (this.state.mouseY - 12) + \"px)\",\n                opacity: \"1\"\n              },\n              width: \"24px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 22\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MidleContent; //<h3>{context.activeObject.name ? context.activeObject.name : \"MidleContent\"}</h3>","map":{"version":3,"sources":["/Users/sergeismogliuk/Documents/Project/Project_node/Diplom/react-diplom/react-diplom/src/components/Container/MidleContainer/MidleContent/MidleContent.js"],"names":["React","MidleContentStyle","DiagramViewBox","Triangle","savePositionOnMouseDown","x","y","difference","mouseZoomPosition","pressTimer","MidleContent","PureComponent","constructor","props","_showCard","context","ListActive","length","object","find","item","isSelected","console","log","name","getCoords","elem","box","getBoundingClientRect","pageYOffset","top","Math","round","left","handleOnWhell","e","target","targetCoords","originX","originY","scale","state","wheel","deltaY","zoom","clientX","clientY","setState","handleOnMouseMove","position","getTransformedPoint","button","DragPostion","isMetaKey","navigator","platform","match","metaKey","ctrlKey","transformedX","transformedY","handleOnClick","newX","newY","DIV","position2","divX","divY","handleMouseDown","window","setTimeout","longpress","handleMouseUp","timeStamp","handleDoubleClick","error","isLoaded","mouseX","mouseY","render","width","height","overflow","transformOrigin","transform","pointerEvents","boxShadow","backgroundColor","opacity"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport MidleContentStyle from \"./MidleContentStyle\"\n\nimport DiagramViewBox from \"../../../Diagrams/DiagramViewBox\"\n\n//import  {ListActiveConxtext} from \"../../../../ListActiveContextProvider\"\n\nimport Triangle from \"../../../SVG/Triangle/Triangle\"\n\nvar  savePositionOnMouseDown = {\n  x: 0,\n  y: 0\n};\n\nvar difference = {\n  x: 0,\n  y: 0\n}\n\nvar mouseZoomPosition = {\n  x:0,\n  y:0\n}\n\nvar pressTimer;\nclass MidleContent extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n          error: null,\n          isLoaded: false,\n          scale: 1,\n          x: 0,\n          y: 0,\n          originX: 0,\n          originY: 0,\n          DragPostion: {x: 0,y: 0},\n\n\n          divX: 0,\n          divY: 0,\n\n\n\n          mouseX: 0,\n          mouseY: 0\n        };\n      }\n\n      static MidleContentStyle;\n\n      static DIV;\n\n      \n\n      //static contextType = ListActiveConxtext;\n\n      _showCard = () =>\n      {\n          if(this.context.ListActive.length === 0)\n          {\n            return <h3>MidleContent</h3>\n          }\n\n          let object = this.context.ListActive.find(item => item.isSelected === true)\n\n          console.log(\"this._showCard(context)\",this.context)\n\n     \n\n          return <h3>{object.name}</h3>\n      }\n\n      getCoords = (elem) => {\n        let box = elem.getBoundingClientRect();\n        console.log(this.MidleContentStyle.pageYOffset)\n        return {\n          top: Math.round(box.top), //pageYOffset\n          left: Math.round(box.left)//pageXOffset\n        };\n      }\n\n      handleOnWhell = (e) =>\n      {\n        //let count = (e.deltaY/17)\n        let target = this.MidleContentStyle//e.target.closest('....'); // Здесь что-то уникальное, что может указать на род. блок\n        let targetCoords = target.getBoundingClientRect();\n\n        let originX;\n        let originY\n\n        let scale = this.state.scale\n\n\n        const wheel = e.deltaY < 0 ? 1 : -1;\n\n        //e.preventDefault()\n\n        // Compute zoom factor.\n        let zoom// = Math.exp(wheel * this.state.scale);\n        console.log(\"wheel = \",wheel)\n        if(wheel > 0)\n        {\n          zoom = scale-0.05\n          if(zoom < 0.2 )\n          {\n            zoom = 0.2;\n\n            //originX = 0;\n            //originY = 0;\n          }\n          else\n          {\n            originX = (e.clientX - targetCoords.left )/ scale;\n            originY = (e.clientY - targetCoords.top )/ scale;\n          }\n\n          \n        }\n        else\n        {\n          \n          zoom = scale+0.05\n\n          originX = (e.clientX - targetCoords.left )/ scale;\n          originY = (e.clientY - targetCoords.top )/ scale;\n          \n        }\n\n\n      \n\n        this.setState({scale: zoom,originX: mouseZoomPosition.x ,originY: mouseZoomPosition.y  }) //,x: e.screenX, y: e.screenY\n\n       /* switch (e.deltaY > 0) {\n            case true:\n              console.log('positive',e.deltaY,count);\n              let plus = this.state.scale+0.05\n\n              this.setState({scale: zoom,originX: -originX, originY: -originY }) //,x: xCoord, y: yCoord\n              break;\n            default:\n              console.log('negative',e.deltaY,count);\n              count *=(-1)\n\n              let minus = this.state.scale-0.05\n              if(minus < 0 )\n              {\n                minus = 0\n              }\n              \n          }*/\n      }\n\n      handleOnMouseMove = (e) =>\n      {\n        let target = this.MidleContentStyle;\n        let position = this.getTransformedPoint(target,e.clientX,e.clientY,this.state.scale)\n        //let difference = 0;\n          switch(e.button)\n          {\n            case 1:\n              \n              difference = {\n                x : (savePositionOnMouseDown.x - position.x  ),\n                y : (savePositionOnMouseDown.y - position.y  )\n              }\n              //console.log(\"handleOnMouseMove = \",difference,e,e.buttons)\n              console.log(\"origin = \",savePositionOnMouseDown, \" newPosition = \",position, \" dif = \",difference,\"Scale = \", this.state.scale)\n              this.setState({DragPostion: {\n                x: this.state.DragPostion.x-difference.x,\n                y: this.state.DragPostion.y-difference.y},\n              },\n             );\n              break;\n            default:\n              this.setState({\n                //originX: position.x ,\n               // originY: position.y \n              });\n              break;\n          }\n\n          mouseZoomPosition = {\n            x: position.x,\n            y: position.y\n          }\n\n     \n        //console.log(target.getBoundingClientRect(),\"pos =\",position )\n        //this.setState({ mouseX: position.x, mouseY: position.y,originX: difference.x,originY: difference.y });\n      }\n\n      isMetaKey = (e) => {\n        return navigator.platform.match('Mac') ? e.metaKey : e.ctrlKey\n      }\n\n      getTransformedPoint=(target,x, y,scale)=> {\n        let targetCoords = target.getBoundingClientRect();\n        const transformedX = (x  - targetCoords.left)/ scale; //target.firstChild.scrollLeft\n        const transformedY = (y  - targetCoords.top)/ scale; //target.firstChild.scrollTop\n        return { x: transformedX, y: transformedY };\n      }\n\n\n      handleOnClick = (e) =>{\n\n     \n        return;\n        let originX;\n        let originY;\n\n        let newX;\n        let newY;\n\n        let target = this.MidleContentStyle;\n\n        let position = this.getTransformedPoint(target,e.clientX,e.clientY,this.state.scale)\n       \n        let targetCoords = this.DIV.getBoundingClientRect();\n\n        console.log(target.getBoundingClientRect(),targetCoords)\n        let position2 = {\n          x: (e.clientX - targetCoords.left )/ this.state.scale,\n          y: (e.clientY - targetCoords.top )/ this.state.scale\n        }\n\n\n        console.log(position,position2,{x:e.clientX,y:e.clientY})\n        \n\n        newX = position.x;\n        newY = position.y;\n\n        originX = position2.x//*this.state.scale;\n        originY = position2.y//*this.state.scale;\n\n\n\n        this.setState({ x: newX, y: newY, originX: originX,originY: originY, divX: originX, divY: originY }); //\n      }\n\n\n      handleMouseDown = (e) =>{\n\n        switch(e.button)\n        {\n          case 1:\n            let target = this.MidleContentStyle;\n            savePositionOnMouseDown = this.getTransformedPoint(target,e.clientX,e.clientY,this.state.scale)\n            console.log(\"handleMouseDown = \",savePositionOnMouseDown,e)\n\n            pressTimer = window.setTimeout(function(){\n              // your code here\n          \n              longpress = true; //if run hold function, longpress is true\n              },1000)\n            break;\n          default:\n            break;\n        }\n        \n       \n      }\n\n      handleMouseUp = (e) =>{\n        console.log(\"handleMouseUp\")\n        \n\n        console.log(\"click = \",e.button)\n\n        switch(e.button)\n        {\n          case 1:{\n            console.log(\"1 -= \",e.timeStamp)\n            break;\n          }\n        }\n\n      }\n\n      handleDoubleClick = (e)=>{\n        //console.log(\" handleDoubleClick click = \",e.button)\n      }\n\n      //translate(\"+this.state.x+\"px,\"+this.state.y+\"px)\n      //transformOrigin:this.state.xScale+\"px \"+this.state.yScale+\"px\"\n      //transformOrigin:this.state.originX+\"px \"+this.state.originY+\"px\",\n      //  \"scale(\"+this.state.scale+\")\"\n      //overflow: \"auto\"\n      render() {\n        return (\n            <MidleContentStyle >\n                <div style={{width: \"100%\", height: \"100%\",position: \"relative\",overflow: \"hidden\"}}   >\n                  {/*<div  onClick={this.handleOnClick}  onMouseMove={this.handleOnMouseMove} onWheel={this.handleOnWhell}  ref={(MidleContentStyle) => { this.MidleContentStyle = MidleContentStyle;}} style={{width: \"100%\", height: \"100%\",position: \"absolute\",transformOrigin: this.state.originX+\"px \"+this.state.originY+\"px\",transform:\"scale(\"+this.state.scale+\")\",boxShadow: \"rgba(0,0,0,0.2) 0px 3px 5px -1px,rgba(0,0,0,0.14) 0px 6px 10px 0px,rgba(0,0,0,0.12) 0px 1px 14px 0px\"}}>*/}\n                  <div  ref={(DIV) => { this.DIV = DIV;}} onDoubleClick={this.handleDoubleClick}   onClick={this.handleOnClick} onMouseDown={this.handleMouseDown} onMouseUp={this.handleMouseUp} onMouseMove={this.handleOnMouseMove} onWheel={this.handleOnWhell}    style={{width: \"100%\", height: \"100%\",position: \"absolute\"}}>\n                    <div  ref={(MidleContentStyle) => { this.MidleContentStyle = MidleContentStyle; }}  style={{position: \"absolute\",\n                        width: (1411)+\"px\",\n                        height: (1100)+\"px\",\n                        top: \"0px\",\n                        left: \"0px\",\n                        transformOrigin: this.state.originX+\"px \"+this.state.originY+\"px\",\n                        //transformOrigin:\"0px 0px\",\n                        transform: \"translate(\"+this.state.DragPostion.x+\"px, \"+this.state.DragPostion.y+\"px) scale(\"+this.state.scale+\")\",\n                        pointerEvents: \"all\"}}>\n                      <div style={{\n                          width: \"500px\",\n                          top: \"0px\",\n                          left: \"0px\",\n                          pointerEvents: \"all\",\n                          position: \"relative\",\n                          boxShadow: \"rgba(0,0,0,0.2) 0px 3px 5px -1px,rgba(0,0,0,0.14) 0px 6px 10px 0px,rgba(0,0,0,0.12) 0px 1px 14px 0px\",\n                          //transform: \"translate(\"+this.state.originX+\"px, \"+this.state.originY+\"px) scale(\"+this.state.scale+\")\"\n                        \n                          }}\n                          > \n\n                      <Triangle   left={200} top={200} width={100} height={100} min={50} max={100} value={0}/>\n                      <Triangle   left={200} top={0}  width={100} height={100} min={50} max={100} value={50}/>\n                      {/*\n                      <img id=\"crosshair\" src=\"https://interactive-examples.mdn.mozilla.net/media/examples/crosshair.svg\" style={{ backgroundColor:\"green\",position: \"absolute\",left: \"calc(\"+(this.state.originX-12)+\"px)\", top: \"calc(\"+(this.state.originY-12)+\"px)\",opacity: \"1\"}} width=\"24px\"></img>*/}\n                      <img id=\"crosshair\" src=\"https://interactive-examples.mdn.mozilla.net/media/examples/crosshair.svg\" style={{backgroundColor: \"red\", position: \"absolute\",left: \"calc(\"+(this.state.originX-12)+\"px)\", top: \"calc(\"+(this.state.originY-12)+\"px)\",opacity: \"1\"}} width=\"24px\"></img>\n                      </div>\n                      \n                      <img id=\"crosshair\" src=\"https://interactive-examples.mdn.mozilla.net/media/examples/crosshair.svg\" style={{position: \"absolute\",left: \"calc(\"+(this.state.originX-12)+\"px)\", top: \"calc(\"+(this.state.originY-12)+\"px)\",opacity: \"1\"}} width=\"24px\"></img>\n                     <img id=\"crosshair\" src=\"https://interactive-examples.mdn.mozilla.net/media/examples/crosshair.svg\" style={{position: \"absolute\",left: \"calc(\"+(this.state.mouseX-12)+\"px)\", top:\"calc(\"+(this.state.mouseY-12)+\"px)\",opacity: \"1\"}} width=\"24px\"></img>\n                    </div>\n                  </div>\n    \n         \n                 \n                </div>\n\n\n               {/* <DiagramViewBox/>\n\n              <ListActiveConxtext.Consumer>\n                {value => (\n                  <h3>MidleContent {console.log(value.ListActive)}</h3>\n                )}\n                \n                </ListActiveConxtext.Consumer>*/} \n            </MidleContentStyle>\n\n        )\n      }\n}\n\n\n\nexport default MidleContent;\n\n//<h3>{context.activeObject.name ? context.activeObject.name : \"MidleContent\"}</h3>"]},"metadata":{},"sourceType":"module"}