{"ast":null,"code":"var _jsxFileName = \"/Users/sergeismogliuk/Documents/Project/Project_node/Diplom/react-diplom/react-diplom/src/components/CheckBox/CheckBoxList.js\";\nimport React from 'react';\nimport Checkbox from \"./CheckBox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CheckboxList extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this._showChoices = () => {\n      return this.state.list.map((item, i) => {\n        return /*#__PURE__*/_jsxDEV(Checkbox, {\n          title: item.choice_name,\n          checked: item.isChecked,\n          size: 50,\n          onIconPress: () => {},\n          onPress: () => {\n            let clonedList = this.state.list.slice();\n            clonedList[i].isChecked = !clonedList[i].isChecked;\n            this.setState({\n              list: clonedList\n            });\n          }\n        }, item.choice_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this);\n      });\n    };\n\n    this.state = {\n      list: [{\n        choice_id: 12,\n        choice_name: \"bluetooth\",\n        isChecked: false\n      }, {\n        choice_id: 23,\n        choice_name: \"wifi\",\n        isChecked: false\n      }, {\n        choice_id: 34,\n        choice_name: \"hotspot\",\n        isChecked: false\n      }]\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: this._showChoices()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default CheckboxList;","map":{"version":3,"sources":["/Users/sergeismogliuk/Documents/Project/Project_node/Diplom/react-diplom/react-diplom/src/components/CheckBox/CheckBoxList.js"],"names":["React","Checkbox","CheckboxList","PureComponent","constructor","props","_showChoices","state","list","map","item","i","choice_name","isChecked","clonedList","slice","setState","choice_id","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,YAAN,SAA2BF,KAAK,CAACG,aAAjC,CAA+C;AAC3CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAYnBC,YAZmB,GAYJ,MAAM;AACnB,aAAO,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,GAAhB,CAAoB,CAACC,IAAD,EAAOC,CAAP,KAAa;AACtC,4BACE,QAAC,QAAD;AACE,UAAA,KAAK,EAAED,IAAI,CAACE,WADd;AAEE,UAAA,OAAO,EAAEF,IAAI,CAACG,SAFhB;AAGE,UAAA,IAAI,EAAE,EAHR;AAIE,UAAA,WAAW,EAAE,MAAM,CAAE,CAJvB;AAKE,UAAA,OAAO,EAAE,MAAM;AACb,gBAAIC,UAAU,GAAG,KAAKP,KAAL,CAAWC,IAAX,CAAgBO,KAAhB,EAAjB;AACAD,YAAAA,UAAU,CAACH,CAAD,CAAV,CAAcE,SAAd,GAA0B,CAACC,UAAU,CAACH,CAAD,CAAV,CAAcE,SAAzC;AACA,iBAAKG,QAAL,CAAc;AAAER,cAAAA,IAAI,EAAEM;AAAR,aAAd;AACD;AATH,WAUOJ,IAAI,CAACO,SAVZ;AAAA;AAAA;AAAA;AAAA,gBADF;AAcD,OAfM,CAAP;AAgBD,KA7BkB;;AAGjB,SAAKV,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,CACJ;AAAES,QAAAA,SAAS,EAAE,EAAb;AAAiBL,QAAAA,WAAW,EAAE,WAA9B;AAA2CC,QAAAA,SAAS,EAAE;AAAtD,OADI,EAEJ;AAAEI,QAAAA,SAAS,EAAE,EAAb;AAAiBL,QAAAA,WAAW,EAAE,MAA9B;AAAsCC,QAAAA,SAAS,EAAE;AAAjD,OAFI,EAGJ;AAAEI,QAAAA,SAAS,EAAE,EAAb;AAAiBL,QAAAA,WAAW,EAAE,SAA9B;AAAyCC,QAAAA,SAAS,EAAE;AAApD,OAHI;AADK,KAAb;AAOD;;AAqBDK,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACE;AAAA,kBAAK,KAAKZ,YAAL;AAAL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAtC0C;;AAyC7C,eAAeJ,YAAf","sourcesContent":["import React from 'react';\n\nimport Checkbox from \"./CheckBox\"\n\nclass CheckboxList extends React.PureComponent {\n    constructor(props) {\n      super(props);\n  \n      this.state = {\n        list: [\n          { choice_id: 12, choice_name: \"bluetooth\", isChecked: false },\n          { choice_id: 23, choice_name: \"wifi\", isChecked: false },\n          { choice_id: 34, choice_name: \"hotspot\", isChecked: false }\n        ]\n      };\n    }\n  \n    _showChoices = () => {\n      return this.state.list.map((item, i) => {\n        return (\n          <Checkbox\n            title={item.choice_name}\n            checked={item.isChecked}\n            size={50}\n            onIconPress={() => {}}\n            onPress={() => {\n              let clonedList = this.state.list.slice();\n              clonedList[i].isChecked = !clonedList[i].isChecked;\n              this.setState({ list: clonedList });\n            }}\n            key={item.choice_id}\n          />\n        );\n      });\n    };\n  \n    render() {\n      return (\n        <div>\n          <ul>{this._showChoices()}</ul>\n        </div>\n      );\n    }\n  }\n  \n  export default CheckboxList;"]},"metadata":{},"sourceType":"module"}