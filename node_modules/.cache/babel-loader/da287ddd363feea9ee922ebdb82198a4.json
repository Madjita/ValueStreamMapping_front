{"ast":null,"code":"import axios from \"axios\";\nimport { useOrdersActionType } from \"../../type/useOrdersType\";\nexport const ordersLoading = () => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: useOrdersActionType.FETCH_ORDERS\n      });\n      const response = await axios.get('https://jsonplaceholder.typicode.com/users');\n      setTimeout(() => {\n        dispatch({\n          type: useOrdersActionType.FETCH_ORDERS_SUCCESS,\n          payload: response.data\n        });\n      }, 500);\n    } catch (e) {\n      dispatch({\n        type: useOrdersActionType.FETCH_ORDERS_ERROR,\n        payload: 'Error'\n      });\n    }\n  };\n};","map":{"version":3,"sources":["/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/store/action-creator/useActionOrders.tsx"],"names":["axios","useOrdersActionType","ordersLoading","dispatch","type","FETCH_ORDERS","response","get","setTimeout","FETCH_ORDERS_SUCCESS","payload","data","e","FETCH_ORDERS_ERROR"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,SAASC,mBAAT,QAAsD,0BAAtD;AAIA,OAAO,MAAMC,aAAa,GAAG,MAAM;AAC/B,SAAO,MAAOC,QAAP,IAAiD;AACpD,QAAG;AACCA,MAAAA,QAAQ,CAAC;AAACC,QAAAA,IAAI,EAAEH,mBAAmB,CAACI;AAA3B,OAAD,CAAR;AACA,YAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAU,4CAAV,CAAvB;AACAC,MAAAA,UAAU,CAAC,MAAM;AACbL,QAAAA,QAAQ,CAAC;AAACC,UAAAA,IAAI,EAAEH,mBAAmB,CAACQ,oBAA3B;AAAiDC,UAAAA,OAAO,EAAEJ,QAAQ,CAACK;AAAnE,SAAD,CAAR;AACH,OAFS,EAEP,GAFO,CAAV;AAGH,KAND,CAME,OAAMC,CAAN,EAAS;AACPT,MAAAA,QAAQ,CAAC;AAACC,QAAAA,IAAI,EAAEH,mBAAmB,CAACY,kBAA3B;AAA+CH,QAAAA,OAAO,EAAE;AAAxD,OAAD,CAAR;AACH;AACJ,GAVD;AAWH,CAZM","sourcesContent":["import axios from \"axios\"\nimport { Dispatch } from \"react\"\nimport IDataOrder from \"../../Component/Data/IDataOrder\"\nimport { useOrdersActionType,useLeftMenuAction } from \"../../type/useOrdersType\"\n\nimport * as action from '../../store/action-creator'\n\nexport const ordersLoading = () => {\n    return async (dispatch: Dispatch<useLeftMenuAction>) => {\n        try{\n            dispatch({type: useOrdersActionType.FETCH_ORDERS});\n            const response = await axios.get('https://jsonplaceholder.typicode.com/users')\n            setTimeout(() => {\n                dispatch({type: useOrdersActionType.FETCH_ORDERS_SUCCESS, payload: response.data as IDataOrder[]})\n            }, 500)\n        } catch(e) {\n            dispatch({type: useOrdersActionType.FETCH_ORDERS_ERROR, payload: 'Error'});\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}