{"ast":null,"code":"var _jsxFileName = \"/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/DropZone/DropZone.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo, useCallback } from \"react\";\nimport { Suspense, useEffect, useState } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport serverApiHost, { port } from \"../../global\";\nimport { Box } from '@material-ui/system';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios'; //import './DropZone.css'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseStyle = {\n  flex: 1,\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  padding: \"10%\",\n  borderWidth: 2,\n  borderRadius: 2,\n  borderColor: \"#eeeeee\",\n  borderStyle: \"dashed\",\n  backgroundColor: \"#fafafa\",\n  color: \"#bdbdbd\",\n  outline: \"none\",\n  transition: \"border .24s ease-in-out\"\n};\nconst activeStyle = {\n  borderColor: \"#2196f3\"\n};\nconst acceptStyle = {\n  borderColor: \"#00e676\"\n};\nconst rejectStyle = {\n  borderColor: \"#ff1744\"\n};\n\nconst DropZone = props => {\n  _s();\n\n  const [state, setState] = useState({\n    loading: false,\n    data: null,\n    sections: new Array()\n  });\n  var listSections = new Array();\n\n  const SendFile = acceptedFiles => {\n    //\n    (async () => {\n      setState({ ...state,\n        data: null\n      });\n\n      if (acceptedFiles.length > 0) {\n        try {\n          let file = acceptedFiles[0];\n          console.log(\"file = \", file); // setLoading(true);\n\n          setState({ ...state,\n            loading: true\n          });\n          /* \n              console.log(\"name = \",JSON.stringify({\n                FileName: file.name,\n                Size: file.size\n              }))*/\n\n          var data = new FormData();\n          data.append(\"file\", file);\n          const response = await axios.post('http://' + serverApiHost + ':' + port + '/api/exel/add', data, {\n            headers: {\n              \"Access-Control-Allow-Origin\": \"*\",\n              // 'Content-Type': 'application/json'\n              'Content-Type': 'multipart/form-data'\n            }\n          });\n\n          if (response.status != 200) {\n            return;\n          }\n\n          let content = response.data;\n          console.log(\"name = \", response);\n          let section = {\n            sections: new Array()\n          };\n\n          if (content != null) {\n            content.dataCardVSM.map((item, index) => {\n              var _section$sections;\n\n              if (((_section$sections = section.sections) === null || _section$sections === void 0 ? void 0 : _section$sections.length) === 0) {\n                var _section$sections2;\n\n                (_section$sections2 = section.sections) === null || _section$sections2 === void 0 ? void 0 : _section$sections2.push(item.value);\n              } else {\n                let position = section.sections[section.sections.length - 1].etapNumeric;\n\n                if (item.value.etapNumeric === position) {\n                  var _section$sections3;\n\n                  (_section$sections3 = section.sections) === null || _section$sections3 === void 0 ? void 0 : _section$sections3.push(item.value);\n                } else {\n                  var _section$sections4;\n\n                  listSections.push(section);\n                  section = {\n                    sections: new Array()\n                  };\n                  (_section$sections4 = section.sections) === null || _section$sections4 === void 0 ? void 0 : _section$sections4.push(item.value);\n                }\n              }\n            });\n            console.log(\"listSections\", listSections);\n          }\n\n          setState({ ...state,\n            data: content,\n            sections: listSections,\n            loading: false\n          });\n        } catch (e) {}\n      }\n    })(); //\n\n  };\n\n  const onDrop = useCallback(acceptedFiles => {\n    console.log(\"useCallback = \", acceptedFiles);\n    SendFile(acceptedFiles);\n  }, []);\n  const {\n    acceptedFiles,\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragAccept,\n    isDragReject\n  } = useDropzone({\n    onDrop\n  });\n  const style = useMemo(() => ({ ...baseStyle,\n    ...(isDragActive ? activeStyle : {}),\n    ...(isDragAccept ? acceptStyle : {}),\n    ...(isDragReject ? rejectStyle : {})\n  }), [isDragActive, isDragReject, isDragAccept]);\n  const files = acceptedFiles.map(file => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      flex: \"\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      children: [file.name, \" - \", file.size, \" bytes\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      color: \"info\",\n      onClick: () => SendFile(acceptedFiles),\n      children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)]\n  }, file.name, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this));\n  useEffect(() => {});\n\n  if (state.loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Suspense, {\n        fallback: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 29\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (state.sections.length > 0) {\n    console.log(\"CARDS = \", state.sections);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        height: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        color: \"info\",\n        onClick: () => setState({ ...state,\n          data: null,\n          sections: []\n        }),\n        children: \"\\u0412\\u0440\\u0435\\u043D\\u0443\\u0442\\u044C\\u0441\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this);\n  } //<Demo sections={state.sections}/>\n  //sections={state.sections}/\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps({\n        style\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps(),\n        type: \"file\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Drag 'n' drop some files here, or click to select files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: files\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DropZone, \"kyZLE1FHuZUQAvZZYAgWNtYSsE4=\", false, function () {\n  return [useDropzone];\n});\n\n_c = DropZone;\nexport default DropZone;\n\nvar _c;\n\n$RefreshReg$(_c, \"DropZone\");","map":{"version":3,"sources":["/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/DropZone/DropZone.tsx"],"names":["React","useMemo","useCallback","Suspense","useEffect","useState","useDropzone","serverApiHost","port","Box","CircularProgress","Button","axios","baseStyle","flex","display","flexDirection","alignItems","padding","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","color","outline","transition","activeStyle","acceptStyle","rejectStyle","DropZone","props","state","setState","loading","data","sections","Array","listSections","SendFile","acceptedFiles","length","file","console","log","FormData","append","response","post","headers","status","content","section","dataCardVSM","map","item","index","push","value","position","etapNumeric","e","onDrop","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","style","files","name","size","justifyContent","height"],"mappings":"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","sourcesContent":["import { file } from \"@babel/types\";\nimport React, { useMemo, CSSProperties, useCallback } from \"react\";\nimport { Suspense, useEffect, useState } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport serverApiHost,{port} from \"../../global\";\nimport IDataCardSection from \"../Data/IDataCardSection\";\n\nimport { Box } from '@material-ui/system';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios'\n//import './DropZone.css'\n\n\nconst baseStyle = {\n  flex: 1,\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  padding: \"10%\",\n  borderWidth: 2,\n  borderRadius: 2,\n  borderColor: \"#eeeeee\",\n  borderStyle: \"dashed\",\n  backgroundColor: \"#fafafa\",\n  color: \"#bdbdbd\",\n  outline: \"none\",\n  transition: \"border .24s ease-in-out\",\n};\n\nconst activeStyle = {\n  borderColor: \"#2196f3\",\n};\n\nconst acceptStyle = {\n  borderColor: \"#00e676\",\n};\n\nconst rejectStyle = {\n  borderColor: \"#ff1744\",\n};\n\nconst DropZone = (props: {}) => {\n\n  const [state, setState] = useState({\n    loading: false,\n    data: null,\n    sections: new Array() as IDataCardSection[],\n  })\n\n  var listSections: IDataCardSection[] = new Array()\n\n  const SendFile = (acceptedFiles: File[]) => {\n    //\n    (async () => {\n      setState({...state, data: null});\n      if (acceptedFiles.length > 0) {\n        try {\n          let file = acceptedFiles[0];\n          console.log(\"file = \", file);\n\n         // setLoading(true);\n         setState({...state, loading: true});\n          /* \n              console.log(\"name = \",JSON.stringify({\n                FileName: file.name,\n                Size: file.size\n              }))*/\n\n          var data = new FormData();\n          data.append(\"file\", file);\n\n\n          const response = await axios.post('http://'+serverApiHost+':'+port+'/api/exel/add',data,\n          {\n              headers: {\n                \"Access-Control-Allow-Origin\": \"*\",\n               // 'Content-Type': 'application/json'\n                'Content-Type': 'multipart/form-data'\n              }\n          })\n\n          if(response.status != 200)\n          {\n            return ;\n          }\n\n          let content = response.data as any;\n\n          console.log(\"name = \", response);\n\n          let section: IDataCardSection = {\n            sections: new Array\n          }; \n\n          if(content != null)\n          {\n            content.dataCardVSM.map((item : any, index: number)=> {\n              if(section.sections?.length === 0)\n              {\n                section.sections?.push(item.value);\n              }\n              else\n              {\n                let position = section.sections[section.sections.length-1].etapNumeric;\n                if(item.value.etapNumeric === position)\n                {\n                  section.sections?.push(item.value);\n                }\n                else\n                {\n                  listSections.push(section);\n\n                  section = {\n                    sections: new Array\n                  } as IDataCardSection;\n\n                  section.sections?.push(item.value);\n\n                }\n              }\n            })\n                   \n            console.log(\"listSections\", listSections)\n          }\n\n\n            setState({...state, data: content, sections: listSections, loading: false});\n    \n        } catch (e) {}\n      }\n    })();\n    //\n  };\n\n  const onDrop = useCallback((acceptedFiles) => {\n    console.log(\"useCallback = \", acceptedFiles);\n    SendFile(acceptedFiles);\n  }, []);\n\n  const {\n    acceptedFiles,\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragAccept,\n    isDragReject,\n  } = useDropzone({ onDrop });\n\n  const style = useMemo(\n    () => ({\n      ...baseStyle,\n      ...(isDragActive ? activeStyle : {}),\n      ...(isDragAccept ? acceptStyle : {}),\n      ...(isDragReject ? rejectStyle : {}),\n    }),\n    [isDragActive, isDragReject, isDragAccept]\n  ) as CSSProperties;\n\n  const files = acceptedFiles.map((file) => (\n    <div style={{ flex: \"\" }} key={file.name}>\n      <li>\n        {file.name} - {file.size} bytes\n      </li>\n      <Button color=\"info\"  onClick={() => SendFile(acceptedFiles)}>\n        Отправить\n      </Button>\n    </div>\n  ));\n\n  useEffect(() => {});\n\n  if (state.loading) {\n    return (\n      <div>\n        <Suspense fallback={<CircularProgress />}>\n          <Box sx={{ display: 'flex', justifyContent: 'center' }}>\n            <CircularProgress />\n          </Box>\n        </Suspense>\n      </div>\n    );\n  }\n\n  if (state.sections.length > 0) {\n    console.log(\"CARDS = \", state.sections);\n    return (\n      <div style={{display: 'flex', height: '100%'}}>\n        <Button color=\"info\"  onClick={() => setState({...state, data: null, sections: []})}>\n          Вренуться\n        </Button>\n        {/*<Demo2 sections={state.sections}/>*/}\n      </div>\n      \n    );\n  }\n  //<Demo sections={state.sections}/>\n  //sections={state.sections}/\n\n  return (\n    <div>\n      <div {...getRootProps({ style })}>\n        <input {...getInputProps()} type=\"file\" />\n        <p>Drag 'n' drop some files here, or click to select files</p>\n      </div>\n      <aside>\n        <h4>Files</h4>\n        <ul>{files}</ul>\n      </aside>\n    </div>\n  );\n};\n\nexport default DropZone;\n"]},"metadata":{},"sourceType":"module"}