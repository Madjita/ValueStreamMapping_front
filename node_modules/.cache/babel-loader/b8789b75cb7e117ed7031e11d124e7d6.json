{"ast":null,"code":"var _jsxFileName = \"/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Card/ViewCard.tsx\";\nimport React from 'react';\nimport ViewItemSection from './ViewItemSection';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ViewOrderCard = props => {\n  //const [BDitems, setBDItem] = useState<IDataOrderItem[]>();\n  // console.log(\"sections: \",props.sections)\n  let flagParalel = false;\n  let flagMaxInSectionItems = 0;\n  props.sectionLogic_views.map((item, index) => {\n    if (item.sectionEtap_views.length > flagMaxInSectionItems) {\n      flagMaxInSectionItems = item.sectionEtap_views.length;\n    }\n\n    if (item.sectionEtap_views.length > 1) {\n      flagParalel = true;\n    }\n  });\n  let card = props.sectionLogic_views.map((item, index) => /*#__PURE__*/_jsxDEV(ViewItemSection, {\n    orderProduct: props.orderProduct,\n    data: item.sections,\n    numberSection: index,\n    lastSection: props.sections.length,\n    flagParalel: flagParalel,\n    flagMaxInSectionItems: flagMaxInSectionItems\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 10\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'grid',\n      justifyContent: 'center',\n      gridTemplateColumns: 'repeat(' + props.sections.length + ',1fr)'\n    },\n    children: card\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 8\n  }, this);\n};\n\n_c = ViewOrderCard;\nexport default ViewOrderCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewOrderCard\");","map":{"version":3,"sources":["/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/Component/Card/ViewCard.tsx"],"names":["React","ViewItemSection","ViewOrderCard","props","flagParalel","flagMaxInSectionItems","sectionLogic_views","map","item","index","sectionEtap_views","length","card","orderProduct","sections","display","justifyContent","gridTemplateColumns"],"mappings":";AAAA,OAAOA,KAAP,MAA6B,OAA7B;AAOA,OAAOC,eAAP,MAA4B,mBAA5B;;;AAOA,MAAMC,aAAa,GAAKC,KAAD,IAAqF;AACxG;AAED;AAEC,MAAIC,WAAW,GAAG,KAAlB;AACA,MAAIC,qBAAqB,GAAG,CAA5B;AAEAF,EAAAA,KAAK,CAACG,kBAAN,CAAyBC,GAAzB,CAA6B,CAACC,IAAD,EAA0BC,KAA1B,KAC3B;AACG,QAAGD,IAAI,CAACE,iBAAL,CAAuBC,MAAvB,GAAgCN,qBAAnC,EACA;AACGA,MAAAA,qBAAqB,GAAGG,IAAI,CAACE,iBAAL,CAAuBC,MAA/C;AACF;;AAED,QAAGH,IAAI,CAACE,iBAAL,CAAuBC,MAAvB,GAAgC,CAAnC,EACA;AACGP,MAAAA,WAAW,GAAG,IAAd;AACF;AACH,GAXH;AAcA,MAAIQ,IAAI,GAAGT,KAAK,CAACG,kBAAN,CAAyBC,GAAzB,CAA6B,CAACC,IAAD,EAAyBC,KAAzB,kBACnC,QAAC,eAAD;AAA6B,IAAA,YAAY,EAAEN,KAAK,CAACU,YAAjD;AAA+D,IAAA,IAAI,EAAEL,IAAI,CAACM,QAA1E;AAAoF,IAAA,aAAa,EAAEL,KAAnG;AAA0G,IAAA,WAAW,EAAEN,KAAK,CAACW,QAAN,CAAeH,MAAtI;AAA8I,IAAA,WAAW,EAAEP,WAA3J;AAAwK,IAAA,qBAAqB,EAAEC;AAA/L,KAAsBI,KAAtB;AAAA;AAAA;AAAA;AAAA,UADM,CAAX;AAKA,sBACG;AAAK,IAAA,KAAK,EAAE;AAACM,MAAAA,OAAO,EAAE,MAAV;AAAkBC,MAAAA,cAAc,EAAE,QAAlC;AAA4CC,MAAAA,mBAAmB,EAAE,YAAUd,KAAK,CAACW,QAAN,CAAeH,MAAzB,GAAgC;AAAjG,KAAZ;AAAA,cACIC;AADJ;AAAA;AAAA;AAAA;AAAA,UADH;AAMH,CAjCD;;KAAMV,a;AAoCN,eAAeA,aAAf","sourcesContent":["import React,{useState} from 'react'\n\nimport IDataCardSection from '../Data/IDataCardSection'\nimport IDataOrderItem from '../Data/IDataOrderItem'\nimport Divider from '@material-ui/core/Divider';\nimport IDataCardVSM from '../Data/IDataCardVSM';\nimport Paper from '@material-ui/core/Paper'\nimport ViewItemSection from './ViewItemSection'\nimport IDataOrder from '../Data/IDataOrder';\nimport IDataOrderPart from '../Data/IDataOrderPart';\nimport { SectionLogic_view } from '../Data/IDataOrder/IDataOrder';\n\n\n\nconst ViewOrderCard =  (props: {sectionLogic_views : SectionLogic_view[], orderProduct?:IDataOrderPart}) => {\n    //const [BDitems, setBDItem] = useState<IDataOrderItem[]>();\n  \n   // console.log(\"sections: \",props.sections)\n\n    let flagParalel = false;\n    let flagMaxInSectionItems = 0 as number;\n    \n    props.sectionLogic_views.map((item : SectionLogic_view,index: number) =>\n      {\n         if(item.sectionEtap_views.length > flagMaxInSectionItems )\n         {\n            flagMaxInSectionItems = item.sectionEtap_views.length \n         }\n\n         if(item.sectionEtap_views.length > 1)\n         {\n            flagParalel = true;\n         }\n      }\n    )\n    \n    let card = props.sectionLogic_views.map((item : IDataCardSection,index: number) =>\n         <ViewItemSection key={index} orderProduct={props.orderProduct} data={item.sections} numberSection={index} lastSection={props.sections.length} flagParalel={flagParalel} flagMaxInSectionItems={flagMaxInSectionItems}/>\n    )\n\n\n    return(\n       <div style={{display: 'grid', justifyContent: 'center', gridTemplateColumns: 'repeat('+props.sections.length+',1fr)'}}>\n          {card}\n       </div>\n    )\n\n}\n\n\nexport default ViewOrderCard;"]},"metadata":{},"sourceType":"module"}