{"ast":null,"code":"import axios from \"axios\";\nimport { fetch_orders, fetch_orders_success, fetch_orders_error, fetch_orders_add, fetch_orders_update } from '../reducers/useOrdersReducer';\nimport ip from '../../global';\nexport const ordersLoading = () => {\n  const timer = setTimeout(() => async dispatch => {\n    try {\n      dispatch(fetch_orders()); //const response = await axios.get('https://jsonplaceholder.typicode.com/users')\n\n      const response = await axios.get('http://' + ip + ':5001/api/manufacture/orders', {\n        withCredentials: false,\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\"\n        }\n      });\n      let data = response.data;\n      setTimeout(() => {\n        data.map(item => {\n          if (item.tActual != 0) {\n            console.log(\"fetch_orders_update = \" + item.tActual);\n            dispatch(fetch_orders_update(item));\n          }\n        });\n        dispatch(fetch_orders_success(data));\n      }, 0);\n    } catch (e) {\n      dispatch(fetch_orders_error('Error'));\n    }\n  }, 800);\n  return timer.ref;\n  /*\n  return async (dispatch: any) => {\n       try{\n          dispatch(fetch_orders());\n          //const response = await axios.get('https://jsonplaceholder.typicode.com/users')\n            const response = await axios.get('http://'+ip+':5001/api/manufacture/orders',{\n              withCredentials: false,\n              headers: {\n                \"Access-Control-Allow-Origin\": \"*\",\n              },\n          })\n           \n          let data = response.data as IDataOrder[];\n          setTimeout(() => {\n               data.map((item:IDataOrder )=>{\n                  if(item.tActual != 0)\n                  {\n                      console.log(\"fetch_orders_update = \" +item.tActual);\n                      dispatch(fetch_orders_update(item))\n                  }\n              })\n               dispatch(fetch_orders_success(data));\n          }, 0)\n      } catch(e) {\n          dispatch(fetch_orders_error('Error'));\n      }\n  }*/\n};\nexport const orderAdd = newOrder => {\n  return async dispatch => {\n    console.log(\"Add\");\n    console.log(newOrder);\n    console.log(JSON.stringify(newOrder));\n\n    try {\n      //const response = await axios.get('https://jsonplaceholder.typicode.com/users')\n      const response = await axios.post('http://' + ip + ':5001/api/manufacture/addOrder', JSON.stringify(newOrder), {\n        headers: {\n          // Overwrite Axios's automatically set Content-Type\n          \"Access-Control-Allow-Origin\": \"*\",\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (response.status === 200) {\n        dispatch(fetch_orders_add(newOrder));\n        console.log(\"Add Ok\");\n      }\n    } catch (e) {\n      dispatch(fetch_orders_error('Error'));\n    }\n  };\n};\nexport const orderUpdate = (updateOrder, oldOrder) => {\n  return async dispatch => {\n    let obj = {\n      newOrder: updateOrder,\n      oldOrder: oldOrder\n    };\n\n    try {\n      const response = await axios.post('http://' + ip + ':5001/api/manufacture/updateOrder', JSON.stringify(obj), {\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (response.status === 200) {\n        dispatch(fetch_orders_update(obj));\n        console.log(\"Add Ok\");\n      }\n    } catch (e) {\n      dispatch(fetch_orders_error('Error'));\n    }\n  };\n};\nexport const startSimulation = item => {\n  return async dispatch => {\n    let copyObjet = { ...item\n    };\n\n    try {\n      const response = await axios.post('http://' + ip + ':5001/api/manufacture/startSimulationOrder', JSON.stringify(copyObjet), {\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (response.status === 200) {\n        //dispatch(fetch_orders_update(obj));\n        console.log(\"Add Ok\");\n      }\n    } catch (e) {\n      dispatch(fetch_orders_error('Error'));\n    }\n  };\n};\nexport const updateInfoOrder = item => {\n  return async dispatch => {\n    //let copyObjet = {...item}\n    try {\n      const response = await axios.post('http://' + ip + ':5001/api/manufacture/updateInfoOrder', JSON.stringify(item), {\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (response.status === 200) {\n        console.log(\"Update\");\n        let data = JSON.parse(response.data);\n        item = data;\n        dispatch(fetch_orders_update(data));\n        console.log(\"Update Ok\");\n      }\n    } catch (e) {\n      dispatch(fetch_orders_error('Error'));\n    }\n  };\n};","map":{"version":3,"sources":["/Users/sergeismogliuk/Documents/Project/My_experience/New_project_diplom/front/src/store/action-creator/useActionOrders.tsx"],"names":["axios","fetch_orders","fetch_orders_success","fetch_orders_error","fetch_orders_add","fetch_orders_update","ip","ordersLoading","timer","setTimeout","dispatch","response","get","withCredentials","headers","data","map","item","tActual","console","log","e","ref","orderAdd","newOrder","JSON","stringify","post","status","orderUpdate","updateOrder","oldOrder","obj","startSimulation","copyObjet","updateInfoOrder","parse"],"mappings":"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","sourcesContent":["import axios from \"axios\"\nimport { Dispatch } from \"react\"\nimport IDataOrder from \"../../Component/Data/IDataOrder\"\nimport { useOrdersActionType,useLeftMenuAction } from \"../../type/useOrdersType\"\n\nimport { fetch_orders, fetch_orders_success, fetch_orders_error,fetch_orders_add,fetch_orders_update } from '../reducers/useOrdersReducer'\n\n\nimport IDialogAddOrder from '../../Component/Data/Dialog/IDialogAddOrder'\n\nimport ip from '../../global'\n\nexport const ordersLoading = () => {\n\n    const timer = setTimeout(() =>\n    \n    async (dispatch: any) => {\n\n        try{\n            dispatch(fetch_orders());\n            //const response = await axios.get('https://jsonplaceholder.typicode.com/users')\n\n\n            const response = await axios.get('http://'+ip+':5001/api/manufacture/orders',{\n                withCredentials: false,\n                headers: {\n                  \"Access-Control-Allow-Origin\": \"*\",\n                },\n            })\n\n            \n            let data = response.data as IDataOrder[];\n            setTimeout(() => {\n\n                data.map((item:IDataOrder )=>{\n                    if(item.tActual != 0)\n                    {\n                        console.log(\"fetch_orders_update = \" +item.tActual);\n                        dispatch(fetch_orders_update(item))\n                    }\n                })\n\n                dispatch(fetch_orders_success(data));\n            }, 0)\n        } catch(e) {\n            dispatch(fetch_orders_error('Error'));\n        }\n    }\n    \n    , 800); \n\n    return timer.ref;\n\n    /*\n    return async (dispatch: any) => {\n\n        try{\n            dispatch(fetch_orders());\n            //const response = await axios.get('https://jsonplaceholder.typicode.com/users')\n\n\n            const response = await axios.get('http://'+ip+':5001/api/manufacture/orders',{\n                withCredentials: false,\n                headers: {\n                  \"Access-Control-Allow-Origin\": \"*\",\n                },\n            })\n\n            \n            let data = response.data as IDataOrder[];\n            setTimeout(() => {\n\n                data.map((item:IDataOrder )=>{\n                    if(item.tActual != 0)\n                    {\n                        console.log(\"fetch_orders_update = \" +item.tActual);\n                        dispatch(fetch_orders_update(item))\n                    }\n                })\n\n                dispatch(fetch_orders_success(data));\n            }, 0)\n        } catch(e) {\n            dispatch(fetch_orders_error('Error'));\n        }\n    }*/\n}\n\n\nexport const orderAdd = (newOrder: IDialogAddOrder) => {\n    return async (dispatch: any) => {\n\n        console.log(\"Add\")\n        console.log(newOrder)\n        console.log(JSON.stringify(newOrder))\n        try{\n\n            //const response = await axios.get('https://jsonplaceholder.typicode.com/users')\n\n            const response = await axios.post('http://'+ip+':5001/api/manufacture/addOrder',JSON.stringify(newOrder),{\n                headers: {\n                  // Overwrite Axios's automatically set Content-Type\n                  \"Access-Control-Allow-Origin\": \"*\",\n                  'Content-Type': 'application/json'\n                }\n              })\n\n            if(response.status === 200)\n            {\n                dispatch(fetch_orders_add(newOrder));\n                console.log(\"Add Ok\")\n            }\n        } catch(e) {\n            dispatch(fetch_orders_error('Error'));\n        }\n    }\n}\n\nexport const orderUpdate = (updateOrder: IDataOrder, oldOrder: IDataOrder) => {\n    return async (dispatch: any) => {\n        let obj = {newOrder: updateOrder , oldOrder: oldOrder}\n        try{\n            const response = await axios.post('http://'+ip+':5001/api/manufacture/updateOrder',JSON.stringify(obj),{\n                headers: {\n                  \"Access-Control-Allow-Origin\": \"*\",\n                  'Content-Type': 'application/json'\n                }\n              })\n\n            if(response.status === 200)\n            {\n                dispatch(fetch_orders_update(obj));\n                console.log(\"Add Ok\")\n            }\n        } catch(e) {\n            dispatch(fetch_orders_error('Error'));\n        }\n    }\n}\n\n\nexport const startSimulation = (item: IDataOrder) => {\n    return async (dispatch: any) => {\n\n        let copyObjet = {...item}\n        try\n        {\n            const response = await axios.post('http://'+ip+':5001/api/manufacture/startSimulationOrder',JSON.stringify(copyObjet),\n            {\n                headers: {\n                   \"Access-Control-Allow-Origin\": \"*\",\n                  'Content-Type': 'application/json'\n                }\n            })\n\n            if(response.status === 200)\n            {\n                //dispatch(fetch_orders_update(obj));\n                console.log(\"Add Ok\")\n            }\n        } catch(e) {\n            dispatch(fetch_orders_error('Error'));\n        }\n    }\n}\n\n\nexport const updateInfoOrder = (item: IDataOrder) => {\n    return async (dispatch: any) => {\n\n        //let copyObjet = {...item}\n        try\n        {\n            const response = await axios.post('http://'+ip+':5001/api/manufacture/updateInfoOrder',JSON.stringify(item),\n            {\n                headers: {\n                  \"Access-Control-Allow-Origin\": \"*\",\n                  'Content-Type': 'application/json'\n                }\n            })\n\n            if(response.status === 200)\n            {\n\n                console.log(\"Update\")\n                let data =  JSON.parse(response.data) as IDataOrder;\n\n                item = data;\n                dispatch(fetch_orders_update(data));\n                console.log(\"Update Ok\")\n            }\n        } catch(e) {\n            dispatch(fetch_orders_error('Error'));\n        }\n    }\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}