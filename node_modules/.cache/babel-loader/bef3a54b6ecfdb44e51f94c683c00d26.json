{"ast":null,"code":"var _jsxFileName = \"/Users/sergeismogliuk/Documents/Project/Project_node/Diplom/react-diplom/react-diplom/src/components/Container/MidleContainer/MidleContent/MidleContent.js\";\nimport React from \"react\";\nimport MidleContentStyle from \"./MidleContentStyle\";\nimport DiagramViewBox from \"../../../Diagrams/DiagramViewBox\"; //import  {ListActiveConxtext} from \"../../../../ListActiveContextProvider\"\n\nimport Triangle from \"../../../SVG/Triangle/Triangle\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MidleContent extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this._showCard = () => {\n      if (this.context.ListActive.length === 0) {\n        return /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"MidleContent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 20\n        }, this);\n      }\n\n      let object = this.context.ListActive.find(item => item.isSelected === true);\n      console.log(\"this._showCard(context)\", this.context);\n      return /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: object.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 18\n      }, this);\n    };\n\n    this.getCoords = elem => {\n      let box = elem.getBoundingClientRect();\n      console.log(this.MidleContentStyle.pageYOffset);\n      return {\n        top: Math.round(box.top),\n        //pageYOffset\n        left: Math.round(box.left) //pageXOffset\n\n      };\n    };\n\n    this.handleOnWhell = e => {\n      //let count = (e.deltaY/17)\n      let target = this.MidleContentStyle; //e.target.closest('....'); // Здесь что-то уникальное, что может указать на род. блок\n\n      let targetCoords = target.getBoundingClientRect();\n      let originX;\n      let originY;\n      let scale = this.state.scale;\n      const wheel = e.deltaY < 0 ? 1 : -1; // Compute zoom factor.\n\n      let zoom; // = Math.exp(wheel * this.state.scale);\n\n      console.log(\"wheel = \", wheel);\n\n      if (wheel > 0) {\n        zoom = scale - 0.05;\n\n        if (zoom < 0.2) {\n          zoom = 0.2;\n          originX = 0;\n          originY = 0;\n        } else {\n          originX = (e.clientX - targetCoords.left) / scale;\n          originY = (e.clientY - targetCoords.top) / scale;\n        }\n      } else {\n        zoom = scale + 0.05;\n        originX = (e.clientX - targetCoords.left) / scale;\n        originY = (e.clientY - targetCoords.top) / scale;\n      }\n\n      this.setState({\n        scale: zoom,\n        divX: originX,\n        divY: originY\n      }); //,x: e.screenX, y: e.screenY\n\n      /* switch (e.deltaY > 0) {\n           case true:\n             console.log('positive',e.deltaY,count);\n             let plus = this.state.scale+0.05\n              this.setState({scale: zoom,originX: -originX, originY: -originY }) //,x: xCoord, y: yCoord\n             break;\n           default:\n             console.log('negative',e.deltaY,count);\n             count *=(-1)\n              let minus = this.state.scale-0.05\n             if(minus < 0 )\n             {\n               minus = 0\n             }\n             \n         }*/\n    };\n\n    this.handleOnMouseMove = e => {\n      let position = this.getTransformedPoint(e.clientX, e.clientY, 1);\n      this.setState({\n        mouseX: position.x,\n        mouseY: position.y\n      });\n    };\n\n    this.getTransformedPoint = (x, y, scale) => {\n      let target = this.MidleContentStyle;\n      let targetCoords = target.getBoundingClientRect();\n      const transformedX = (x - targetCoords.left) / scale;\n      const transformedY = (y - targetCoords.top) / scale;\n      return {\n        x: transformedX,\n        y: transformedY\n      };\n    };\n\n    this.handleOnClick = e => {\n      let target = this.MidleContentStyle; //e.target.closest('....'); // Здесь что-то уникальное, что может указать на род. блок\n\n      let targetCoords = target.getBoundingClientRect();\n      let originX;\n      let originY;\n      let newX;\n      let newY;\n      newX = e.clientX - targetCoords.left;\n      newY = e.clientY - targetCoords.top;\n      let targetCoords_2 = e.target.getBoundingClientRect();\n      originX = (e.clientX - targetCoords_2.left) / this.state.scale;\n      originY = (e.clientY - targetCoords_2.top) / this.state.scale;\n      this.setState({\n        x: newX,\n        y: newY,\n        originX: newX,\n        originY: newY,\n        divX: originX,\n        divY: originY\n      }); //\n    };\n\n    this.handleMouseDown = e => {};\n\n    this.state = {\n      error: null,\n      isLoaded: false,\n      scale: 1,\n      x: 0,\n      y: 0,\n      originX: 0,\n      originY: 0,\n      divX: 0,\n      divY: 0,\n      mouseX: 0,\n      mouseY: 0\n    };\n  }\n\n  //translate(\"+this.state.x+\"px,\"+this.state.y+\"px)\n  //transformOrigin:this.state.xScale+\"px \"+this.state.yScale+\"px\"\n  //transformOrigin:this.state.originX+\"px \"+this.state.originY+\"px\",\n  //  \"scale(\"+this.state.scale+\")\"\n  render() {\n    return /*#__PURE__*/_jsxDEV(MidleContentStyle, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"100%\",\n          height: \"100%\",\n          position: \"relative\"\n        },\n        ref: MidleContentStyle => {\n          this.MidleContentStyle = MidleContentStyle;\n        },\n        onClick: this.handleOnClick,\n        onMouseMove: this.handleOnMouseMove,\n        onWheel: this.handleOnWhell,\n        onMouseDown: this.handleMouseDown,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"100%\",\n            height: \"100%\",\n            position: \"absolute\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: \"absolute\",\n              width: \"1411px\",\n              height: \"1100px\",\n              top: \"0px\",\n              left: \"0px\",\n              pointerEvents: \"all\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: \"500px\",\n                top: \"0px\",\n                left: \"0px\",\n                pointerEvents: \"all\",\n                transformOrigin: this.state.divX + \"px \" + this.state.divY + \"px\",\n                boxShadow: \"rgba(0,0,0,0.2) 0px 3px 5px -1px,rgba(0,0,0,0.14) 0px 6px 10px 0px,rgba(0,0,0,0.12) 0px 1px 14px 0px\",\n                transform: \"translate(\" + this.state.originX + \"px, \" + this.state.originY + \"px) scale(\" + this.state.scale + \")\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Triangle, {\n                left: 200,\n                top: 200,\n                width: 100,\n                height: 100,\n                min: 50,\n                max: 100,\n                value: 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Triangle, {\n                left: 200,\n                top: 0,\n                width: 100,\n                height: 100,\n                min: 50,\n                max: 100,\n                value: 50\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                id: \"crosshair\",\n                src: \"https://interactive-examples.mdn.mozilla.net/media/examples/crosshair.svg\",\n                style: {\n                  backgroundColor: \"red\",\n                  position: \"absolute\",\n                  left: \"calc(\" + (this.state.divX - 12) + \"px)\",\n                  top: \"calc(\" + (this.state.divX - 12) + \"px)\",\n                  opacity: \"1\"\n                },\n                width: \"24px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              id: \"crosshair\",\n              src: \"https://interactive-examples.mdn.mozilla.net/media/examples/crosshair.svg\",\n              style: {\n                position: \"absolute\",\n                left: \"calc(\" + (this.state.originX - 12) + \"px)\",\n                top: \"calc(\" + (this.state.originY - 12) + \"px)\",\n                opacity: \"1\"\n              },\n              width: \"24px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              id: \"crosshair\",\n              src: \"https://interactive-examples.mdn.mozilla.net/media/examples/crosshair.svg\",\n              style: {\n                position: \"absolute\",\n                left: \"calc(\" + (this.state.mouseX - 12) + \"px)\",\n                top: \"calc(\" + (this.state.mouseY - 12) + \"px)\",\n                opacity: \"1\"\n              },\n              width: \"24px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 22\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MidleContent; //<h3>{context.activeObject.name ? context.activeObject.name : \"MidleContent\"}</h3>","map":{"version":3,"sources":["/Users/sergeismogliuk/Documents/Project/Project_node/Diplom/react-diplom/react-diplom/src/components/Container/MidleContainer/MidleContent/MidleContent.js"],"names":["React","MidleContentStyle","DiagramViewBox","Triangle","MidleContent","PureComponent","constructor","props","_showCard","context","ListActive","length","object","find","item","isSelected","console","log","name","getCoords","elem","box","getBoundingClientRect","pageYOffset","top","Math","round","left","handleOnWhell","e","target","targetCoords","originX","originY","scale","state","wheel","deltaY","zoom","clientX","clientY","setState","divX","divY","handleOnMouseMove","position","getTransformedPoint","mouseX","x","mouseY","y","transformedX","transformedY","handleOnClick","newX","newY","targetCoords_2","handleMouseDown","error","isLoaded","render","width","height","pointerEvents","transformOrigin","boxShadow","transform","backgroundColor","opacity"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport MidleContentStyle from \"./MidleContentStyle\"\n\nimport DiagramViewBox from \"../../../Diagrams/DiagramViewBox\"\n\n//import  {ListActiveConxtext} from \"../../../../ListActiveContextProvider\"\n\nimport Triangle from \"../../../SVG/Triangle/Triangle\"\n\nclass MidleContent extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n          error: null,\n          isLoaded: false,\n          scale: 1,\n          x: 0,\n          y: 0,\n          originX: 0,\n          originY: 0,\n\n          divX: 0,\n          divY: 0,\n\n\n\n          mouseX: 0,\n          mouseY: 0\n        };\n      }\n\n      static MidleContentStyle;\n\n      //static contextType = ListActiveConxtext;\n\n      _showCard = () =>\n      {\n          if(this.context.ListActive.length === 0)\n          {\n            return <h3>MidleContent</h3>\n          }\n\n          let object = this.context.ListActive.find(item => item.isSelected === true)\n\n          console.log(\"this._showCard(context)\",this.context)\n\n     \n\n          return <h3>{object.name}</h3>\n      }\n\n      getCoords = (elem) => {\n        let box = elem.getBoundingClientRect();\n        console.log(this.MidleContentStyle.pageYOffset)\n        return {\n          top: Math.round(box.top), //pageYOffset\n          left: Math.round(box.left)//pageXOffset\n        };\n      }\n\n      handleOnWhell = (e) =>\n      {\n        //let count = (e.deltaY/17)\n        let target = this.MidleContentStyle//e.target.closest('....'); // Здесь что-то уникальное, что может указать на род. блок\n        let targetCoords = target.getBoundingClientRect();\n\n        let originX;\n        let originY\n\n        let scale = this.state.scale\n\n\n        const wheel = e.deltaY < 0 ? 1 : -1;\n\n      \n\n        // Compute zoom factor.\n        let zoom// = Math.exp(wheel * this.state.scale);\n        console.log(\"wheel = \",wheel)\n        if(wheel > 0)\n        {\n          zoom = scale-0.05\n          if(zoom < 0.2 )\n          {\n            zoom = 0.2;\n\n            originX = 0;\n            originY = 0;\n          }\n          else\n          {\n            originX = (e.clientX - targetCoords.left )/ scale;\n            originY = (e.clientY - targetCoords.top )/ scale;\n          }\n\n          \n        }\n        else\n        {\n          \n          zoom = scale+0.05\n\n          originX = (e.clientX - targetCoords.left )/ scale;\n          originY = (e.clientY - targetCoords.top )/ scale;\n          \n        }\n\n\n      \n       \n\n        this.setState({scale: zoom, divX: originX, divY: originY }) //,x: e.screenX, y: e.screenY\n\n       /* switch (e.deltaY > 0) {\n            case true:\n              console.log('positive',e.deltaY,count);\n              let plus = this.state.scale+0.05\n\n              this.setState({scale: zoom,originX: -originX, originY: -originY }) //,x: xCoord, y: yCoord\n              break;\n            default:\n              console.log('negative',e.deltaY,count);\n              count *=(-1)\n\n              let minus = this.state.scale-0.05\n              if(minus < 0 )\n              {\n                minus = 0\n              }\n              \n          }*/\n      }\n\n      handleOnMouseMove = (e) =>\n      {\n        let position = this.getTransformedPoint(e.clientX,e.clientY,1)\n        this.setState({ mouseX: position.x, mouseY: position.y });\n      }\n\n\n      getTransformedPoint=(x, y,scale)=> {\n        let target = this.MidleContentStyle\n        let targetCoords = target.getBoundingClientRect();\n        const transformedX = (x - targetCoords.left)/ scale;\n        const transformedY = (y - targetCoords.top)/ scale;\n        return { x: transformedX, y: transformedY };\n      }\n\n\n      handleOnClick = (e) =>{\n        let target = this.MidleContentStyle//e.target.closest('....'); // Здесь что-то уникальное, что может указать на род. блок\n\n        let targetCoords = target.getBoundingClientRect();\n        let originX;\n        let originY;\n\n        let newX;\n        let newY;\n        \n\n        newX = (e.clientX  - targetCoords.left) ;\n        newY = (e.clientY -  targetCoords.top) ;\n\n        let targetCoords_2 = e.target.getBoundingClientRect();\n\n        originX = (e.clientX  - targetCoords_2.left) /this.state.scale ;\n        originY = (e.clientY -  targetCoords_2.top) /this.state.scale ;\n\n\n\n        this.setState({ x: newX, y: newY, originX: newX,originY: newY, divX: originX,divY: originY }); //\n      }\n\n\n      handleMouseDown = (e) =>{\n        \n      }\n\n      //translate(\"+this.state.x+\"px,\"+this.state.y+\"px)\n      //transformOrigin:this.state.xScale+\"px \"+this.state.yScale+\"px\"\n      //transformOrigin:this.state.originX+\"px \"+this.state.originY+\"px\",\n      //  \"scale(\"+this.state.scale+\")\"\n      render() {\n        return (\n            <MidleContentStyle >\n                <div style={{width: \"100%\", height: \"100%\",position: \"relative\"}} ref={(MidleContentStyle) => { this.MidleContentStyle = MidleContentStyle;}}   onClick={this.handleOnClick}  onMouseMove={this.handleOnMouseMove} onWheel={this.handleOnWhell}    onMouseDown={this.handleMouseDown}>\n                  {/*<div  onClick={this.handleOnClick}  onMouseMove={this.handleOnMouseMove} onWheel={this.handleOnWhell}  ref={(MidleContentStyle) => { this.MidleContentStyle = MidleContentStyle;}} style={{width: \"100%\", height: \"100%\",position: \"absolute\",transformOrigin: this.state.originX+\"px \"+this.state.originY+\"px\",transform:\"scale(\"+this.state.scale+\")\",boxShadow: \"rgba(0,0,0,0.2) 0px 3px 5px -1px,rgba(0,0,0,0.14) 0px 6px 10px 0px,rgba(0,0,0,0.12) 0px 1px 14px 0px\"}}>*/}\n                  <div    style={{width: \"100%\", height: \"100%\",position: \"absolute\"}}>\n                    <div    style={{position: \"absolute\",\n                        width: \"1411px\",\n                        height: \"1100px\",\n                        top: \"0px\",\n                        left: \"0px\",\n                        \n                        pointerEvents: \"all\"}}>\n                      <div style={{\n                          width: \"500px\",\n                          top: \"0px\",\n                          left: \"0px\",\n                          pointerEvents: \"all\",\n                          transformOrigin:this.state.divX+\"px \"+this.state.divY+\"px\",\n                          boxShadow: \"rgba(0,0,0,0.2) 0px 3px 5px -1px,rgba(0,0,0,0.14) 0px 6px 10px 0px,rgba(0,0,0,0.12) 0px 1px 14px 0px\",\n                          transform: \"translate(\"+this.state.originX+\"px, \"+this.state.originY+\"px) scale(\"+this.state.scale+\")\"}}> \n\n                      <Triangle   left={200} top={200} width={100} height={100} min={50} max={100} value={0}/>\n                      <Triangle   left={200} top={0}  width={100} height={100} min={50} max={100} value={50}/>\n                      {/*\n                      <img id=\"crosshair\" src=\"https://interactive-examples.mdn.mozilla.net/media/examples/crosshair.svg\" style={{ backgroundColor:\"green\",position: \"absolute\",left: \"calc(\"+(this.state.originX-12)+\"px)\", top: \"calc(\"+(this.state.originY-12)+\"px)\",opacity: \"1\"}} width=\"24px\"></img>*/}\n                      <img id=\"crosshair\" src=\"https://interactive-examples.mdn.mozilla.net/media/examples/crosshair.svg\" style={{backgroundColor: \"red\", position: \"absolute\",left: \"calc(\"+(this.state.divX-12)+\"px)\", top: \"calc(\"+(this.state.divX-12)+\"px)\",opacity: \"1\"}} width=\"24px\"></img>\n                      </div>\n                      \n                      <img id=\"crosshair\" src=\"https://interactive-examples.mdn.mozilla.net/media/examples/crosshair.svg\" style={{position: \"absolute\",left: \"calc(\"+(this.state.originX-12)+\"px)\", top: \"calc(\"+(this.state.originY-12)+\"px)\",opacity: \"1\"}} width=\"24px\"></img>\n                     <img id=\"crosshair\" src=\"https://interactive-examples.mdn.mozilla.net/media/examples/crosshair.svg\" style={{position: \"absolute\",left: \"calc(\"+(this.state.mouseX-12)+\"px)\", top:\"calc(\"+(this.state.mouseY-12)+\"px)\",opacity: \"1\"}} width=\"24px\"></img>\n                    </div>\n                  </div>\n    \n         \n                 \n                </div>\n\n\n               {/* <DiagramViewBox/>\n\n              <ListActiveConxtext.Consumer>\n                {value => (\n                  <h3>MidleContent {console.log(value.ListActive)}</h3>\n                )}\n                \n                </ListActiveConxtext.Consumer>*/} \n            </MidleContentStyle>\n\n        )\n      }\n}\n\n\n\nexport default MidleContent;\n\n//<h3>{context.activeObject.name ? context.activeObject.name : \"MidleContent\"}</h3>"]},"metadata":{},"sourceType":"module"}